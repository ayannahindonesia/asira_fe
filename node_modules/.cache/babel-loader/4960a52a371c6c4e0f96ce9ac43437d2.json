{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\src\\\\components\\\\subComponent\\\\GridDetail.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Line from './../../support/img/line.jpeg';\n\nconst styles = theme => ({\n  gridDetail: {\n    fontSize: '0.65em',\n    marginBottom: '5px'\n  }\n});\n\nclass GridDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderDataColumn = (dataColumn, dataLabel) => {\n      let tester = '';\n      tester = dataColumn && dataColumn.map((dataRow, index) => {\n        return React.createElement(Grid, {\n          item: true,\n          sm: parseInt(12 / dataColumn.length),\n          xs: parseInt(12 / dataColumn.length),\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          style: {\n            marginBottom: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, this.renderDataRow(dataRow, dataLabel && dataLabel[index], index)));\n      }, this);\n      return tester;\n    };\n\n    this.lengthGridLabel = lengthLabel => {\n      let pjgLabel = 6;\n\n      if (lengthLabel) {\n        pjgLabel = lengthLabel;\n      }\n\n      return pjgLabel;\n    };\n\n    this.lengthGridValue = lengthLabel => {\n      let pjgValue = 6;\n\n      if (lengthLabel) {\n        pjgValue = 12 - lengthLabel;\n      }\n\n      return pjgValue;\n    };\n\n    this.renderDataRow = (dataRow, dataPerLabel, indexColumn) => {\n      let tester = '';\n      tester = dataRow && dataRow.map((dataPerRow, index) => {\n        return React.createElement(Grid, {\n          item: true,\n          sm: 12,\n          xs: 12,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          style: {\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          sm: this.lengthGridLabel(this.props.gridLabel && this.props.gridLabel[indexColumn]),\n          xs: this.lengthGridLabel(this.props.gridLabel && this.props.gridLabel[indexColumn]),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, dataPerLabel && dataPerLabel[index]), React.createElement(Grid, {\n          item: true,\n          sm: this.lengthGridValue(this.props.gridLabel && this.props.gridLabel[indexColumn]),\n          xs: this.lengthGridValue(this.props.gridLabel && this.props.gridLabel[indexColumn]),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          sm: 1,\n          xs: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, !this.props.noEquals && ':'), React.createElement(Grid, {\n          item: true,\n          sm: 11,\n          xs: 11,\n          style: {\n            color: dataPerRow && dataPerRow.color ? dataPerRow.color : dataPerRow\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, dataPerRow && dataPerRow.color ? dataPerRow.value : dataPerRow || '-')))));\n      }, this);\n      return tester;\n    };\n\n    this.state = {\n      errorText: ''\n    };\n  } // componentDidMount() {\n  //   if(this.props.data) {\n  //     this.refresh(this.props.data)\n  //   }\n  // }\n\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          title = _this$props.title,\n          label = _this$props.label,\n          data = _this$props.data;\n    return React.createElement(Grid, {\n      container: true,\n      className: classes.gridDetail,\n      style: {\n        backgroundColor: this.props.background ? '#D8E6FF' : 'none',\n        padding: this.props.background ? '10px 0px 0px 10px' : '0px 0px 0px 10px',\n        fontWeight: this.props.background ? 'bold' : 'normal'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      xs: 12,\n      style: {\n        color: \"#2076B8\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, title && React.createElement(Grid, {\n      item: true,\n      sm: 2,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \" \", title, \" \")), React.createElement(Grid, {\n      item: true,\n      sm: noTitleLine ? 12 : 10,\n      xs: noTitleLine ? 12 : 10,\n      style: {\n        paddingLeft: noTitleLine ? '0px' : '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: Line,\n      style: {\n        width: \"100%\",\n        marginBottom: \"2px\"\n      },\n      alt: \"blue line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })))), data && label && this.renderDataColumn(data, label));\n  }\n\n}\n\nGridDetails.propTypes = {\n  title: PropTypes.string,\n  label: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired\n};\nexport default withStyles(styles)(GridDetails);","map":{"version":3,"sources":["C:\\Users\\pc\\Desktop\\asira_fe\\src\\components\\subComponent\\GridDetail.js"],"names":["React","PropTypes","withStyles","Grid","Line","styles","theme","gridDetail","fontSize","marginBottom","GridDetails","Component","constructor","props","renderDataColumn","dataColumn","dataLabel","tester","map","dataRow","index","parseInt","length","renderDataRow","lengthGridLabel","lengthLabel","pjgLabel","lengthGridValue","pjgValue","dataPerLabel","indexColumn","dataPerRow","gridLabel","noEquals","color","value","state","errorText","render","classes","title","label","data","backgroundColor","background","padding","fontWeight","noTitleLine","paddingLeft","width","propTypes","string","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;;AACA,MAAMC,MAAM,GAAIC,KAAD,KAAY;AAEzBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,QAAQ,EAAE,QADA;AAEVC,IAAAA,YAAY,EAAE;AAFJ;AAFa,CAAZ,CAAf;;AAQA,MAAMC,WAAN,SAA0BV,KAAK,CAACW,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAcnBC,gBAdmB,GAcA,CAACC,UAAD,EAAaC,SAAb,KAA2B;AAC5C,UAAIC,MAAM,GAAG,EAAb;AAEAA,MAAAA,MAAM,GAAGF,UAAU,IAAIA,UAAU,CAACG,GAAX,CAAe,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACxD,eACE,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAEC,QAAQ,CAAC,KAAKN,UAAU,CAACO,MAAjB,CAAvB;AAAiD,UAAA,EAAE,EAAED,QAAQ,CAAC,KAAKN,UAAU,CAACO,MAAjB,CAA7D;AAAuF,UAAA,GAAG,EAAEF,KAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,KAAK,EAAE;AAACX,YAAAA,YAAY,EAAC;AAAd,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKc,aAAL,CAAmBJ,OAAnB,EAA4BH,SAAS,IAAIA,SAAS,CAACI,KAAD,CAAlD,EAA2DA,KAA3D,CADH,CADF,CADF;AAOD,OARsB,EAQpB,IARoB,CAAvB;AAYA,aAAOH,MAAP;AACD,KA9BkB;;AAAA,SAgCnBO,eAhCmB,GAgCAC,WAAD,IAAiB;AACjC,UAAIC,QAAQ,GAAG,CAAf;;AAEA,UAAGD,WAAH,EAAgB;AACdC,QAAAA,QAAQ,GAAGD,WAAX;AACD;;AAED,aAAOC,QAAP;AACD,KAxCkB;;AAAA,SA0CnBC,eA1CmB,GA0CAF,WAAD,IAAiB;AACjC,UAAIG,QAAQ,GAAG,CAAf;;AAEA,UAAGH,WAAH,EAAgB;AACdG,QAAAA,QAAQ,GAAG,KAAKH,WAAhB;AACD;;AAED,aAAOG,QAAP;AACD,KAlDkB;;AAAA,SAoDnBL,aApDmB,GAoDH,CAACJ,OAAD,EAAUU,YAAV,EAAwBC,WAAxB,KAAwC;AACtD,UAAIb,MAAM,GAAG,EAAb;AAEAA,MAAAA,MAAM,GAAGE,OAAO,IAAIA,OAAO,CAACD,GAAR,CAAY,CAACa,UAAD,EAAaX,KAAb,KAAuB;AACrD,eACE,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,EAAvB;AAA2B,UAAA,GAAG,EAAEA,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEE,oBAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,KAAK,EAAE;AAACX,YAAAA,YAAY,EAAC;AAAd,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,KAAKe,eAAL,CAAqB,KAAKX,KAAL,CAAWmB,SAAX,IAAwB,KAAKnB,KAAL,CAAWmB,SAAX,CAAqBF,WAArB,CAA7C,CAAf;AAAgG,UAAA,EAAE,EAAE,KAAKN,eAAL,CAAqB,KAAKX,KAAL,CAAWmB,SAAX,IAAwB,KAAKnB,KAAL,CAAWmB,SAAX,CAAqBF,WAArB,CAA7C,CAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACID,YAAY,IAAIA,YAAY,CAACT,KAAD,CADhC,CADF,EAKE,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,KAAKO,eAAL,CAAqB,KAAKd,KAAL,CAAWmB,SAAX,IAAwB,KAAKnB,KAAL,CAAWmB,SAAX,CAAqBF,WAArB,CAA7C,CAAf;AAAgG,UAAA,EAAE,EAAE,KAAKH,eAAL,CAAqB,KAAKd,KAAL,CAAWmB,SAAX,IAAwB,KAAKnB,KAAL,CAAWmB,SAAX,CAAqBF,WAArB,CAA7C,CAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAkB,UAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI,CAAC,KAAKjB,KAAL,CAAWoB,QAAZ,IAAwB,GAF5B,CADF,EAOE,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,EAAvB;AAA2B,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAACH,UAAU,IAAGA,UAAU,CAACG,KAAxB,GAA+BH,UAAU,CAACG,KAA1C,GAAgDH;AAAvD,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEIA,UAAU,IAAIA,UAAU,CAACG,KAAzB,GAAkCH,UAAU,CAACI,KAA7C,GAAsDJ,UAAU,IAAI,GAFxE,CAPF,CADF,CALF,CAFF,CADF;AA2BD,OA5BmB,EA4BjB,IA5BiB,CAApB;AA8BA,aAAOd,MAAP;AACD,KAtFkB;;AAGjB,SAAKmB,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD,GAPuC,CASxC;AACA;AACA;AACA;AACA;;;AA4EAC,EAAAA,MAAM,GAAG;AAAA,wBAMH,KAAKzB,KANF;AAAA,UAEL0B,OAFK,eAELA,OAFK;AAAA,UAGLC,KAHK,eAGLA,KAHK;AAAA,UAILC,KAJK,eAILA,KAJK;AAAA,UAKLC,IALK,eAKLA,IALK;AAQP,WACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AACE,MAAA,SAAS,EAAEH,OAAO,CAAChC,UADrB;AAEE,MAAA,KAAK,EACH;AACEoC,QAAAA,eAAe,EAAE,KAAK9B,KAAL,CAAW+B,UAAX,GAAwB,SAAxB,GAAoC,MADvD;AAEEC,QAAAA,OAAO,EAAE,KAAKhC,KAAL,CAAW+B,UAAX,GAAwB,mBAAxB,GAA8C,kBAFzD;AAGEE,QAAAA,UAAU,EAAE,KAAKjC,KAAL,CAAW+B,UAAX,GAAwB,MAAxB,GAAiC;AAH/C,OAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,EAAvB;AAA2B,MAAA,KAAK,EAAE;AAACV,QAAAA,KAAK,EAAC;AAAP,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIM,KAAK,IACL,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMA,KAAN,MADJ,CAHJ,EAOE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAEO,WAAW,GAAG,EAAH,GAAQ,EAAlC;AAAsC,MAAA,EAAE,EAAEA,WAAW,GAAG,EAAH,GAAQ,EAA7D;AAAiE,MAAA,KAAK,EAAE;AAACC,QAAAA,WAAW,EAACD,WAAW,GAAG,KAAH,GAAW;AAAnC,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAE3C,IAAV;AAAgB,MAAA,KAAK,EAAE;AAAC6C,QAAAA,KAAK,EAAC,MAAP;AAAcxC,QAAAA,YAAY,EAAC;AAA3B,OAAvB;AAA0D,MAAA,GAAG,EAAC,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,CADF,CAZF,EA8BGiC,IAAI,IAAID,KAAR,IAAiB,KAAK3B,gBAAL,CAAsB4B,IAAtB,EAA4BD,KAA5B,CA9BpB,CADF;AAmCD;;AApIuC;;AAuI1C/B,WAAW,CAACwC,SAAZ,GAAwB;AACtBV,EAAAA,KAAK,EAAEvC,SAAS,CAACkD,MADK;AAEtBV,EAAAA,KAAK,EAAExC,SAAS,CAACmD,KAAV,CAAgBC,UAFD;AAGtBX,EAAAA,IAAI,EAAEzC,SAAS,CAACmD,KAAV,CAAgBC;AAHA,CAAxB;AAMA,eAAenD,UAAU,CAACG,MAAD,CAAV,CAAmBK,WAAnB,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Line from './../../support/img/line.jpeg'\r\nconst styles = (theme) => ({\r\n\r\n  gridDetail: {\r\n    fontSize: '0.65em',\r\n    marginBottom: '5px',\r\n  },\r\n});\r\n\r\nclass GridDetails extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      errorText: '',\r\n    };\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   if(this.props.data) {\r\n  //     this.refresh(this.props.data)\r\n  //   }\r\n  // }\r\n\r\n  renderDataColumn = (dataColumn, dataLabel) => {\r\n    let tester = '';\r\n    \r\n    tester = dataColumn && dataColumn.map((dataRow, index) => {\r\n      return(\r\n        <Grid item sm={parseInt(12 / dataColumn.length)} xs={parseInt(12 / dataColumn.length)} key={index}>\r\n          <Grid container style={{marginBottom:'10px'}}> \r\n            {this.renderDataRow(dataRow, dataLabel && dataLabel[index], index)}\r\n          </Grid>\r\n        </Grid>\r\n      )\r\n    }, this)\r\n      \r\n    \r\n\r\n    return tester\r\n  }\r\n\r\n  lengthGridLabel = (lengthLabel) => {\r\n    let pjgLabel = 6;\r\n\r\n    if(lengthLabel) {\r\n      pjgLabel = lengthLabel\r\n    }\r\n\r\n    return pjgLabel\r\n  }\r\n\r\n  lengthGridValue = (lengthLabel) => {\r\n    let pjgValue = 6;\r\n\r\n    if(lengthLabel) {\r\n      pjgValue = 12 - lengthLabel\r\n    }\r\n\r\n    return pjgValue\r\n  }\r\n\r\n  renderDataRow = (dataRow, dataPerLabel, indexColumn) => {\r\n    let tester = '';\r\n\r\n    tester = dataRow && dataRow.map((dataPerRow, index) => {\r\n      return (\r\n        <Grid item sm={12} xs={12} key={index}>\r\n\r\n          <Grid container style={{marginBottom:'5px'}}> \r\n            <Grid item sm={this.lengthGridLabel(this.props.gridLabel && this.props.gridLabel[indexColumn])} xs={this.lengthGridLabel(this.props.gridLabel && this.props.gridLabel[indexColumn])}>\r\n              { dataPerLabel && dataPerLabel[index] }\r\n            </Grid>\r\n\r\n            <Grid item sm={this.lengthGridValue(this.props.gridLabel && this.props.gridLabel[indexColumn])} xs={this.lengthGridValue(this.props.gridLabel && this.props.gridLabel[indexColumn])}>\r\n              <Grid container>\r\n                <Grid item sm={1} xs={1} >\r\n                  {\r\n                    !this.props.noEquals && ':'\r\n                  }\r\n                </Grid>\r\n\r\n                <Grid item sm={11} xs={11} style={{color:dataPerRow&& dataPerRow.color? dataPerRow.color:dataPerRow}} >\r\n                  {\r\n                    dataPerRow && dataPerRow.color ?  dataPerRow.value : (dataPerRow || '-')\r\n                  }\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      )\r\n    }, this);\r\n      \r\n    return tester\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      title,\r\n      label,\r\n      data,\r\n    } = this.props;\r\n    \r\n    return ( \r\n      <Grid container \r\n        className={classes.gridDetail} \r\n        style={\r\n          {\r\n            backgroundColor: this.props.background ? '#D8E6FF' : 'none', \r\n            padding: this.props.background ? '10px 0px 0px 10px' : '0px 0px 0px 10px',\r\n            fontWeight: this.props.background ? 'bold' : 'normal',\r\n          }\r\n        }\r\n      >\r\n        \r\n\r\n        <Grid item sm={12} xs={12} style={{color:\"#2076B8\"}}>\r\n          <Grid container > \r\n            {\r\n              title &&\r\n              <Grid item sm={2} xs={2}>\r\n                  <h6> {title} </h6> \r\n              </Grid>\r\n            }\r\n            <Grid item sm={noTitleLine ? 12 : 10} xs={noTitleLine ? 12 : 10} style={{paddingLeft:noTitleLine ? '0px' : '5px'}}>\r\n              <img src={Line} style={{width:\"100%\",marginBottom:\"2px\"}} alt=\"blue line\" />\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n          \r\n        \r\n        \r\n\r\n        {data && label && this.renderDataColumn(data, label)}\r\n\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nGridDetails.propTypes = {\r\n  title: PropTypes.string,\r\n  label: PropTypes.array.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(GridDetails);\r\n"]},"metadata":{},"sourceType":"module"}