{"ast":null,"code":"import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport addDays from '../addDays/index.js';\nimport getISODay from '../getISODay/index.js';\n/**\r\n * @name setISODay\r\n * @category Weekday Helpers\r\n * @summary Set the day of the ISO week to the given date.\r\n *\r\n * @description\r\n * Set the day of the ISO week to the given date.\r\n * ISO week starts with Monday.\r\n * 7 is the index of Sunday, 1 is the index of Monday etc.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the date to be changed\r\n * @param {Number} day - the day of the ISO week of the new date\r\n * @returns {Date} the new date with the day of the ISO week set\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // Set Sunday to 1 September 2014:\r\n * var result = setISODay(new Date(2014, 8, 1), 7)\r\n * //=> Sun Sep 07 2014 00:00:00\r\n */\n\nexport default function setISODay(dirtyDate, dirtyDay) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = getISODay(date);\n  var diff = day - currentDay;\n  return addDays(date, diff);\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_fe/node_modules/date-fns/esm/setISODay/index.js"],"names":["toInteger","toDate","addDays","getISODay","setISODay","dirtyDate","dirtyDay","arguments","length","TypeError","date","day","currentDay","diff"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,4BAAtB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,eAAe,SAASC,SAAT,CAAmBC,SAAnB,EAA8BC,QAA9B,EAAwC;AACrD,MAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,UAAM,IAAIC,SAAJ,CAAc,oCAAoCF,SAAS,CAACC,MAA9C,GAAuD,UAArE,CAAN;AACD;;AAED,MAAIE,IAAI,GAAGT,MAAM,CAACI,SAAD,CAAjB;AACA,MAAIM,GAAG,GAAGX,SAAS,CAACM,QAAD,CAAnB;AACA,MAAIM,UAAU,GAAGT,SAAS,CAACO,IAAD,CAA1B;AACA,MAAIG,IAAI,GAAGF,GAAG,GAAGC,UAAjB;AACA,SAAOV,OAAO,CAACQ,IAAD,EAAOG,IAAP,CAAd;AACD","sourcesContent":["import toInteger from '../_lib/toInteger/index.js';\r\nimport toDate from '../toDate/index.js';\r\nimport addDays from '../addDays/index.js';\r\nimport getISODay from '../getISODay/index.js';\r\n/**\r\n * @name setISODay\r\n * @category Weekday Helpers\r\n * @summary Set the day of the ISO week to the given date.\r\n *\r\n * @description\r\n * Set the day of the ISO week to the given date.\r\n * ISO week starts with Monday.\r\n * 7 is the index of Sunday, 1 is the index of Monday etc.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the date to be changed\r\n * @param {Number} day - the day of the ISO week of the new date\r\n * @returns {Date} the new date with the day of the ISO week set\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // Set Sunday to 1 September 2014:\r\n * var result = setISODay(new Date(2014, 8, 1), 7)\r\n * //=> Sun Sep 07 2014 00:00:00\r\n */\r\n\r\nexport default function setISODay(dirtyDate, dirtyDay) {\r\n  if (arguments.length < 2) {\r\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\r\n  }\r\n\r\n  var date = toDate(dirtyDate);\r\n  var day = toInteger(dirtyDay);\r\n  var currentDay = getISODay(date);\r\n  var diff = day - currentDay;\r\n  return addDays(date, diff);\r\n}"]},"metadata":{},"sourceType":"module"}