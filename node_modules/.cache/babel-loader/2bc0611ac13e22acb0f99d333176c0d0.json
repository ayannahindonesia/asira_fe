{"ast":null,"code":"import SecureLS from 'secure-ls';\nimport md5 from 'md5';\nvar newLs = new SecureLS({\n  encodingType: 'aes',\n  isCompression: true,\n  encryptionSecret: 'react-secret'\n});\nexport function setTokenAuth(token) {\n  newLs.set(md5('tokenAuth'), token);\n}\nexport function setTokenClient(token, expires) {\n  newLs.set(md5('tokenClient'), token);\n  newLs.set(md5('tokenTime'), expires);\n}\nexport function setTokenBorrower(tokenBorrower) {\n  newLs.set(md5('tokenBorrower'), tokenBorrower);\n}\nexport function setProfileUser(profileUser) {\n  newLs.set(md5('profileUser'), profileUser);\n}\nexport function getTokenAuth() {\n  console.log('cek');\n  return newLs.get(md5('tokenAuth'));\n}\nexport function getTokenClient() {\n  var newDateToken = new Date().getTime();\n  var timeExpires = newLs.get(md5('tokenTime')) ? parseInt(newLs.get(md5('tokenTime'))) : new Date().getTime();\n\n  if (newDateToken > timeExpires) {\n    localStorage.clear();\n    return null;\n  }\n\n  return newLs.get(md5('tokenClient'));\n}\nexport function getTokenBorower() {\n  var newDateToken = new Date().getTime();\n  var timeExpires = newLs.get(md5('tokenTime')) ? parseInt(newLs.get(md5('tokenTime'))) : new Date().getTime();\n\n  if (newDateToken > timeExpires) {\n    localStorage.clear();\n    return null;\n  }\n\n  return newLs.get(md5('tokenBorrower'));\n}\nexport function getProfileUser() {\n  var newDateToken = new Date().getTime();\n  var timeExpires = newLs.get(md5('tokenTime')) ? parseInt(newLs.get(md5('tokenTime'))) : new Date().getTime();\n\n  if (newDateToken > timeExpires) {\n    localStorage.clear();\n    return null;\n  }\n\n  return newLs.get(md5('profileUser'));\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_fe/src/components/index/token.js"],"names":["SecureLS","md5","newLs","encodingType","isCompression","encryptionSecret","setTokenAuth","token","set","setTokenClient","expires","setTokenBorrower","tokenBorrower","setProfileUser","profileUser","getTokenAuth","console","log","get","getTokenClient","newDateToken","Date","getTime","timeExpires","parseInt","localStorage","clear","getTokenBorower","getProfileUser"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AAEA,IAAMC,KAAK,GAAG,IAAIF,QAAJ,CAAa;AAACG,EAAAA,YAAY,EAAE,KAAf;AAAsBC,EAAAA,aAAa,EAAE,IAArC;AAA2CC,EAAAA,gBAAgB,EAAC;AAA5D,CAAb,CAAd;AAEA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAChCL,EAAAA,KAAK,CAACM,GAAN,CAAUP,GAAG,CAAC,WAAD,CAAb,EAA4BM,KAA5B;AACH;AAED,OAAO,SAASE,cAAT,CAAwBF,KAAxB,EAA+BG,OAA/B,EAAwC;AAC3CR,EAAAA,KAAK,CAACM,GAAN,CAAUP,GAAG,CAAC,aAAD,CAAb,EAA8BM,KAA9B;AACAL,EAAAA,KAAK,CAACM,GAAN,CAAUP,GAAG,CAAC,WAAD,CAAb,EAA4BS,OAA5B;AACH;AAED,OAAO,SAASC,gBAAT,CAA0BC,aAA1B,EAAyC;AAC5CV,EAAAA,KAAK,CAACM,GAAN,CAAUP,GAAG,CAAC,eAAD,CAAb,EAAgCW,aAAhC;AACH;AAED,OAAO,SAASC,cAAT,CAAwBC,WAAxB,EAAqC;AACxCZ,EAAAA,KAAK,CAACM,GAAN,CAAUP,GAAG,CAAC,aAAD,CAAb,EAA8Ba,WAA9B;AACH;AAED,OAAO,SAASC,YAAT,GAAwB;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,SAAOf,KAAK,CAACgB,GAAN,CAAUjB,GAAG,CAAC,WAAD,CAAb,CAAP;AACH;AAED,OAAO,SAASkB,cAAT,GAA0B;AAC7B,MAAMC,YAAY,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAArB;AACA,MAAMC,WAAW,GAAGrB,KAAK,CAACgB,GAAN,CAAUjB,GAAG,CAAC,WAAD,CAAb,IAA8BuB,QAAQ,CAACtB,KAAK,CAACgB,GAAN,CAAUjB,GAAG,CAAC,WAAD,CAAb,CAAD,CAAtC,GAAsE,IAAIoB,IAAJ,GAAWC,OAAX,EAA1F;;AAEA,MAAGF,YAAY,GAAGG,WAAlB,EAA+B;AAC3BE,IAAAA,YAAY,CAACC,KAAb;AACA,WAAO,IAAP;AACH;;AAED,SAAOxB,KAAK,CAACgB,GAAN,CAAUjB,GAAG,CAAC,aAAD,CAAb,CAAP;AACH;AAED,OAAO,SAAS0B,eAAT,GAA2B;AAC9B,MAAMP,YAAY,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAArB;AACA,MAAMC,WAAW,GAAGrB,KAAK,CAACgB,GAAN,CAAUjB,GAAG,CAAC,WAAD,CAAb,IAA8BuB,QAAQ,CAACtB,KAAK,CAACgB,GAAN,CAAUjB,GAAG,CAAC,WAAD,CAAb,CAAD,CAAtC,GAAsE,IAAIoB,IAAJ,GAAWC,OAAX,EAA1F;;AAEA,MAAGF,YAAY,GAAGG,WAAlB,EAA+B;AAC3BE,IAAAA,YAAY,CAACC,KAAb;AACA,WAAO,IAAP;AACH;;AAED,SAAOxB,KAAK,CAACgB,GAAN,CAAUjB,GAAG,CAAC,eAAD,CAAb,CAAP;AACH;AAED,OAAO,SAAS2B,cAAT,GAA0B;AAC7B,MAAMR,YAAY,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAArB;AACA,MAAMC,WAAW,GAAGrB,KAAK,CAACgB,GAAN,CAAUjB,GAAG,CAAC,WAAD,CAAb,IAA8BuB,QAAQ,CAACtB,KAAK,CAACgB,GAAN,CAAUjB,GAAG,CAAC,WAAD,CAAb,CAAD,CAAtC,GAAsE,IAAIoB,IAAJ,GAAWC,OAAX,EAA1F;;AAEA,MAAGF,YAAY,GAAGG,WAAlB,EAA+B;AAC3BE,IAAAA,YAAY,CAACC,KAAb;AACA,WAAO,IAAP;AACH;;AAED,SAAOxB,KAAK,CAACgB,GAAN,CAAUjB,GAAG,CAAC,aAAD,CAAb,CAAP;AACH","sourcesContent":["import SecureLS from 'secure-ls';\r\nimport md5 from 'md5';\r\n\r\nconst newLs = new SecureLS({encodingType: 'aes', isCompression: true, encryptionSecret:'react-secret'}); \r\n\r\nexport function setTokenAuth(token) {\r\n    newLs.set(md5('tokenAuth'), token);\r\n}\r\n\r\nexport function setTokenClient(token, expires) {\r\n    newLs.set(md5('tokenClient'), token);\r\n    newLs.set(md5('tokenTime'), expires);\r\n}\r\n\r\nexport function setTokenBorrower(tokenBorrower) {\r\n    newLs.set(md5('tokenBorrower'), tokenBorrower);\r\n}\r\n\r\nexport function setProfileUser(profileUser) {\r\n    newLs.set(md5('profileUser'), profileUser);\r\n}\r\n\r\nexport function getTokenAuth() {\r\n    console.log('cek')\r\n    return newLs.get(md5('tokenAuth'));\r\n}\r\n\r\nexport function getTokenClient() {\r\n    const newDateToken = new Date().getTime();\r\n    const timeExpires = newLs.get(md5('tokenTime')) ? parseInt(newLs.get(md5('tokenTime'))) : new Date().getTime();\r\n    \r\n    if(newDateToken > timeExpires) {\r\n        localStorage.clear();\r\n        return null\r\n    }\r\n    \r\n    return newLs.get(md5('tokenClient'));\r\n}\r\n\r\nexport function getTokenBorower() {\r\n    const newDateToken = new Date().getTime();\r\n    const timeExpires = newLs.get(md5('tokenTime')) ? parseInt(newLs.get(md5('tokenTime'))) : new Date().getTime();\r\n    \r\n    if(newDateToken > timeExpires) {\r\n        localStorage.clear();\r\n        return null\r\n    }\r\n\r\n    return newLs.get(md5('tokenBorrower'));\r\n}\r\n\r\nexport function getProfileUser() {\r\n    const newDateToken = new Date().getTime();\r\n    const timeExpires = newLs.get(md5('tokenTime')) ? parseInt(newLs.get(md5('tokenTime'))) : new Date().getTime();\r\n    \r\n    if(newDateToken > timeExpires) {\r\n        localStorage.clear();\r\n        return null\r\n    }\r\n\r\n    return newLs.get(md5('profileUser'));\r\n}"]},"metadata":{},"sourceType":"module"}