{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\src\\\\components\\\\subComponent\\\\CheckBox.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport CheckBox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = theme => ({\n  FormControl: {\n    display: 'flex'\n  },\n  formItem: {\n    width: '100%'\n  }\n});\n\nclass CheckBoxClass extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.refresh = data => {\n      const dataModul = [];\n      let newModules = '';\n\n      for (const key in data) {\n        if (newModules !== data[key][this.props.modules]) {\n          newModules = data[key][this.props.modules];\n          dataModul.push(data[key][this.props.modules]);\n        }\n      }\n\n      this.setState({\n        dataModul\n      });\n    };\n\n    this.lengthGrid = () => {\n      let pjgGrid = parseInt(12 / (this.state.dataJudul.length + 1));\n      return pjgGrid;\n    };\n\n    this.lengthJudul = () => {\n      let pjgGrid = 12 - this.lengthGrid() * this.state.dataJudul.length;\n\n      if (pjgGrid > 3) {\n        pjgGrid = 4;\n      }\n\n      return pjgGrid;\n    };\n\n    this.renderData = (object, data, classes) => {\n      let tester = '';\n      let dataRow = {};\n      let index = 0;\n\n      if (data && data.length !== 0) {\n        tester = this.state.dataJudul.map(dataTable => {\n          index += 1;\n          const judul = dataTable;\n          let flag = false;\n\n          for (const key in data) {\n            if (data[key][this.props.modules] === object && judul === data[key][this.props.labelName]) {\n              flag = true;\n              dataRow = data[key];\n              break;\n            }\n          }\n\n          if (flag) {\n            return React.createElement(Grid, {\n              item: true,\n              sm: this.lengthGrid(),\n              xs: this.lengthGrid(),\n              key: dataRow[this.props.id],\n              style: {\n                textAlign: 'center'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 112\n              },\n              __self: this\n            }, React.createElement(FormControlLabel, {\n              className: this.props.vertical ? classes.formItem : null,\n              key: dataRow[this.props.id],\n              labelPlacement: this.props.labelPlacement,\n              control: React.createElement(CheckBox, {\n                checked: this.props.onChecked(dataRow[this.props.id]),\n                onChange: this.props.onChange,\n                value: dataRow[this.props.id].toString().trim(),\n                color: \"default\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 118\n                },\n                __self: this\n              }),\n              disabled: this.props.disabled,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 113\n              },\n              __self: this\n            }));\n          } else {\n            return React.createElement(Grid, {\n              item: true,\n              sm: this.lengthGrid(),\n              xs: this.lengthGrid(),\n              key: index,\n              style: {\n                textAlign: 'center'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 131\n              },\n              __self: this\n            }, React.createElement(FormControlLabel, {\n              className: this.props.vertical ? classes.formItem : null,\n              key: index,\n              labelPlacement: this.props.labelPlacement,\n              control: React.createElement(CheckBox, {\n                checked: false,\n                value: index.toString().trim(),\n                color: \"default\",\n                indeterminate: true,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 137\n                },\n                __self: this\n              }),\n              disabled: true,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 132\n              },\n              __self: this\n            }));\n          }\n        }, this);\n      }\n\n      return tester;\n    };\n\n    this.state = {\n      errorText: '',\n      dataJudul: ['List and Detail', 'Add', 'Edit', 'Approval', 'Disburse', 'Download'],\n      label: this.props.label,\n      dataModul: []\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.data) {\n      this.refresh(this.props.data);\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.data !== nextProps.data) {\n      this.refresh(nextProps.data);\n    }\n\n    if (nextProps.label !== this.props.label) {\n      this.setState({\n        label: nextProps.label\n      });\n    }\n\n    if (nextProps.error !== this.props.error) {\n      this.setState({\n        error: nextProps.error\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          data = _this$props.data,\n          modulesName = _this$props.modulesName;\n    return React.createElement(FormControl, {\n      className: classes.FormControl,\n      error: !!this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      component: \"legend\",\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, this.state.label)), data && data.length !== 0 && React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: this.lengthJudul(),\n      xs: this.lengthJudul(),\n      key: 'menu',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, modulesName))), this.state.dataJudul.map(data => {\n      return React.createElement(Grid, {\n        item: true,\n        sm: this.lengthGrid(),\n        xs: this.lengthGrid(),\n        key: data,\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, data)));\n    }, this))), data && data.length !== 0 && this.state.dataModul && this.state.dataModul.length !== 0 && this.state.dataModul.map(object => {\n      return React.createElement(Grid, {\n        container: true,\n        key: object,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        sm: this.lengthJudul(),\n        style: {\n          paddingTop: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, object)), this.renderData(object, data, classes));\n    }, this), (!data || data && data.length === 0) && React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"No Data\"), this.state.error && React.createElement(FormHelperText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, this.state.error));\n  }\n\n}\n\nCheckBoxClass.propTypes = {\n  label: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  labelName: PropTypes.string.isRequired,\n  modules: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  onChecked: PropTypes.func,\n  disabled: PropTypes.bool,\n  vertical: PropTypes.bool,\n  error: PropTypes.string,\n  modulesName: PropTypes.string,\n  labelPlacement: PropTypes.string\n};\nexport default withStyles(styles)(CheckBoxClass);","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_fe/src/components/subComponent/CheckBox.js"],"names":["React","PropTypes","withStyles","CheckBox","FormControl","FormHelperText","FormGroup","FormControlLabel","FormLabel","Grid","styles","theme","display","formItem","width","CheckBoxClass","Component","constructor","props","refresh","data","dataModul","newModules","key","modules","push","setState","lengthGrid","pjgGrid","parseInt","state","dataJudul","length","lengthJudul","renderData","object","classes","tester","dataRow","index","map","dataTable","judul","flag","labelName","id","textAlign","vertical","labelPlacement","onChecked","onChange","toString","trim","disabled","errorText","label","componentDidMount","UNSAFE_componentWillReceiveProps","nextProps","error","render","modulesName","color","paddingTop","propTypes","string","isRequired","func","bool"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport CheckBox from '@material-ui/core/Checkbox';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = (theme) => ({\r\n\r\n  FormControl: {\r\n    display: 'flex',\r\n  },\r\n  formItem :{\r\n    width:'100%',\r\n  }\r\n});\r\n\r\nclass CheckBoxClass extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorText: '',\r\n      dataJudul: [\r\n        'List and Detail',\r\n        'Add',\r\n        'Edit',\r\n        'Approval',\r\n        'Disburse',\r\n        'Download',\r\n      ],\r\n      label: this.props.label,\r\n      dataModul: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(this.props.data) {\r\n      this.refresh(this.props.data)\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if(this.props.data !== nextProps.data) {\r\n      this.refresh(nextProps.data)\r\n    }\r\n\r\n    if (nextProps.label !== this.props.label) {\r\n      this.setState({\r\n        label: nextProps.label,\r\n      });\r\n    }\r\n\r\n    if (nextProps.error !== this.props.error) {\r\n      this.setState({\r\n        error: nextProps.error,\r\n      });\r\n    }\r\n  }\r\n\r\n  refresh = (data) => {\r\n    const dataModul = [];\r\n    let newModules = '';\r\n\r\n    for(const key in data) {\r\n      if(newModules !== data[key][this.props.modules]) {\r\n        newModules = data[key][this.props.modules];\r\n        dataModul.push(data[key][this.props.modules])\r\n      }\r\n    }\r\n\r\n    this.setState({dataModul})\r\n  }\r\n\r\n  lengthGrid = () => {\r\n    let pjgGrid = parseInt(12 / (this.state.dataJudul.length + 1))\r\n    return pjgGrid;\r\n  }\r\n\r\n  lengthJudul = () => {\r\n    let pjgGrid = 12 - (this.lengthGrid() * this.state.dataJudul.length);\r\n    if(pjgGrid > 3) {\r\n      pjgGrid = 4\r\n    }\r\n    return pjgGrid;\r\n  }\r\n\r\n  renderData = (object, data, classes) => {\r\n    let tester = '';\r\n    let dataRow = {}\r\n    let index = 0;\r\n    \r\n    if(data && data.length !== 0) {\r\n      tester = this.state.dataJudul.map((dataTable) => {\r\n        index += 1;\r\n        const judul = dataTable;\r\n        let flag = false;\r\n\r\n        for(const key in data) {\r\n          if(data[key][this.props.modules] === object && judul === data[key][this.props.labelName]) {\r\n            flag = true;\r\n            dataRow = data[key];\r\n            break;\r\n          }\r\n        }\r\n\r\n        if(flag) {\r\n          return(\r\n            <Grid item sm={this.lengthGrid() } xs={this.lengthGrid() } key={dataRow[this.props.id]} style={{textAlign: 'center'}}>\r\n              <FormControlLabel\r\n                className={(this.props.vertical)?classes.formItem : null}\r\n                key={dataRow[this.props.id]}\r\n                labelPlacement={this.props.labelPlacement}\r\n                control={                      \r\n                  <CheckBox\r\n                    checked={this.props.onChecked(dataRow[this.props.id])}\r\n                    onChange={this.props.onChange}\r\n                    value={dataRow[this.props.id].toString().trim()}\r\n                    color=\"default\"\r\n                  />                     \r\n                }\r\n                disabled={this.props.disabled}\r\n              />\r\n            </Grid>\r\n          ) \r\n        } else {\r\n          return(\r\n            <Grid item sm={this.lengthGrid() } xs={this.lengthGrid() } key={index} style={{textAlign: 'center'}}>\r\n              <FormControlLabel\r\n                className={(this.props.vertical)?classes.formItem : null}\r\n                key={index}\r\n                labelPlacement={this.props.labelPlacement}\r\n                control={                      \r\n                  <CheckBox\r\n                    checked={false}\r\n                    value={index.toString().trim()}\r\n                    color=\"default\"\r\n                    indeterminate\r\n                  />                     \r\n                }\r\n                disabled\r\n              />\r\n            </Grid>\r\n          ) \r\n        }\r\n      }, this)\r\n      \r\n    }\r\n\r\n    return tester\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      data,\r\n      modulesName,\r\n    } = this.props;\r\n    \r\n    return (\r\n      <FormControl className={classes.FormControl} error={!!this.state.error}>\r\n        <FormLabel component=\"legend\" style={{color: 'black'}}><h4>{ this.state.label }</h4></FormLabel>  \r\n\r\n        { data && data.length !== 0 &&\r\n          <FormGroup row >\r\n            <Grid container> \r\n              <Grid item sm={this.lengthJudul()} xs={this.lengthJudul()} key={'menu'}>\r\n                <h5><b>{modulesName}</b></h5>\r\n              </Grid>   \r\n              {\r\n                this.state.dataJudul.map((data) => {\r\n                  return (\r\n                    <Grid item sm={this.lengthGrid()} xs={this.lengthGrid()} key={data} style={{textAlign:'center'}}>\r\n                      <h5><b>{data}</b></h5>\r\n                    </Grid>\r\n                  )\r\n                \r\n                }, this)\r\n              } \r\n            </Grid>\r\n          </ FormGroup>\r\n        }\r\n\r\n        {\r\n          data && data.length !== 0 && this.state.dataModul && this.state.dataModul.length !== 0 && this.state.dataModul.map((object) => {\r\n            \r\n            return(\r\n              <Grid container key={object}> \r\n                <Grid item sm={this.lengthJudul()} style={{paddingTop:'10px'}}>\r\n                  <h6>{object}</h6> \r\n                </Grid>\r\n                {\r\n                  this.renderData(object, data, classes)             \r\n                }\r\n              </Grid>\r\n            )\r\n          }, this)\r\n        }\r\n\r\n\r\n    \r\n        {\r\n          (!data || (data && data.length === 0)) &&\r\n          <FormGroup row >\r\n            No Data\r\n          </FormGroup>\r\n        }\r\n        \r\n\r\n        {this.state.error && (\r\n          <FormHelperText>{this.state.error}</FormHelperText>\r\n        )}\r\n      </FormControl>\r\n    );\r\n  }\r\n}\r\n\r\nCheckBoxClass.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  labelName: PropTypes.string.isRequired,\r\n  modules: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n  onChecked: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  vertical: PropTypes.bool,\r\n  error: PropTypes.string,\r\n  modulesName: PropTypes.string,\r\n  labelPlacement: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(CheckBoxClass);\r\n"]},"metadata":{},"sourceType":"module"}