{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\src\\\\components\\\\profileNasabah\\\\profileNasabah.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport './../../support/css/pagination.css';\nimport { getAllProfileNasabahFunction } from './saga';\nimport 'moment/locale/id';\nimport { getTokenClient, getTokenAuth } from '../index/token';\nimport TableComponent from './../subComponent/TableComponent';\nimport { checkPermission } from '../global/globalFunction';\nconst columnDataUser = [{\n  id: 'id',\n  numeric: false,\n  label: 'ID Nasabah'\n}, {\n  id: 'fullname',\n  numeric: false,\n  label: 'Nama Nasabah'\n}, {\n  id: 'category',\n  numeric: false,\n  label: 'Kategori'\n}, {\n  id: 'created_time',\n  numeric: false,\n  type: 'datetime',\n  label: 'Tanggal Registrasi'\n}, {\n  id: 'loan_status',\n  numeric: false,\n  label: 'Status Nasabah'\n}];\n\nconst crypto = require('crypto');\n\nconst algorithm = 'aes-256-cfb';\n\nclass profileNasabah extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rows: [],\n      searchRows: '',\n      paging: true,\n      page: 1,\n      rowsPerPage: 10,\n      isEdit: false,\n      total_data: 0,\n      last_page: 1,\n      loading: true\n    };\n    this._isMount = false;\n\n    this.decryptText = (keyStr, text) => {\n      const hash = crypto.createHash('sha256');\n      hash.update(keyStr);\n      const keyBytes = hash.digest();\n      const contents = Buffer.from(text, 'base64');\n      const iv = contents.slice(0, 16);\n      const textBytes = contents.slice(16);\n      const decipher = crypto.createDecipheriv(algorithm, keyBytes, iv);\n      let res = decipher.update(textBytes, '', 'utf8');\n      res += decipher.final('utf8');\n      return res;\n    };\n\n    this.getProfileNasabah = async function () {\n      const param = {\n        rows: this.state.rowsPerPage,\n        page: this.state.page\n      };\n      let hasil = this.state.searchRows;\n\n      if (hasil) {\n        param.search_all = hasil;\n      }\n\n      const data = await getAllProfileNasabahFunction(param);\n      const dataNasabah = data.borrowerList.data;\n\n      for (const key in dataNasabah) {\n        dataNasabah[key].category = dataNasabah[key].category && dataNasabah[key].category === \"account_executive\" ? \"Account Executive\" : dataNasabah[key].category === \"agent\" ? \"Agent\" : \"Personal\";\n        dataNasabah[key].loan_status = dataNasabah[key].loan_status && dataNasabah[key].loan_status === \"active\" ? \"Aktif\" : \"Tidak Aktif\";\n      }\n\n      if (data) {\n        if (!data.error) {\n          this.setState({\n            loading: false,\n            rows: dataNasabah,\n            rowsPerPage: data.borrowerList.rows,\n            total_data: data.borrowerList.total_data,\n            last_page: data.borrowerList.last_page,\n            page: data.borrowerList.current_page\n          });\n        } else {\n          this.setState({\n            errorMessage: data.error\n          });\n        }\n      }\n    };\n\n    this.onBtnSearch = e => {\n      this.setState({\n        loading: true,\n        searchRows: e.target.value,\n        page: 1\n      }, () => {\n        if (this.state.paging) {\n          this.getProfileNasabah();\n        }\n      });\n    };\n\n    this.onChangePage = current => {\n      this.setState({\n        loading: true,\n        page: current\n      }, () => {\n        if (this.state.paging) {\n          this.getProfileNasabah();\n        }\n      });\n    };\n  }\n\n  //-----------------------------------NIKO FUNCTION-------------------------------------------------------------\n  componentDidMount() {\n    this._isMount = true;\n    this.getProfileNasabah();\n    let data = \"9CIasG71_CsCxJRdmT2QOXKmas2_EUZK79L_4C0Ud01UMHeIALtTuvcTJWsqvcBrKuKr9r21gLXgGQikEPbruTOz2oxVLzLhVv_oTluBuQC0HferBQNt3l7QgEY=\";\n    let key = 'BpLnfgDsc3WD9F3q';\n    const decrypted = this.decryptText(key, data);\n    console.log(decrypted);\n  }\n\n  componentWillUnmount() {\n    this._isMount = false;\n  } //   import (\n  //     \"crypto/aes\"\n  //     \"crypto/cipher\"\n  //     \"encoding/base64\"\n  //     \"fmt\"\n  // )\n  // func decrypt(encryptedText string, passphrase string) (string, error) {\n  //     ciphertext, _ := base64.URLEncoding.DecodeString(encryptedText)\n  //     block, err := aes.NewCipher([]byte(passphrase))\n  //     if err != nil {\n  //         return \"\", err\n  //     }\n  //     // The IV needs to be unique, but not secure. Therefore it's common to\n  //     // include it at the beginning of the ciphertext.\n  //     if len(ciphertext) < aes.BlockSize {\n  //         return \"\", fmt.Errorf(\"cannot decrypt\")\n  //     }\n  //     iv := ciphertext[:aes.BlockSize]\n  //     ciphertext = ciphertext[aes.BlockSize:]\n  //     stream := cipher.NewCFBDecrypter(block, iv)\n  //     // XORKeyStream can work in-place if the two arguments are the same.\n  //     stream.XORKeyStream(ciphertext, ciphertext)\n  //     return fmt.Sprintf(\"%s\", ciphertext), nil\n  // }\n\n\n  render() {\n    if (getTokenClient() && getTokenAuth()) {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        style: {\n          padding: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(TableComponent, {\n        id: \"id\",\n        title: 'Nasabah - List',\n        search: {\n          value: this.state.searchRows,\n          label: 'Search ID Nasabah, Nama Nasabah',\n          function: this.onBtnSearch\n        },\n        paging: this.state.paging,\n        loading: this.state.loading,\n        columnData: columnDataUser,\n        data: this.state.rows,\n        page: this.state.page,\n        rowsPerPage: this.state.rowsPerPage,\n        totalData: this.state.total_data,\n        onChangePage: this.onChangePage,\n        permissionDetail: checkPermission('lender_borrower_list_detail') ? '/profileNasabahDetail/' : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }));\n    } else if (getTokenAuth()) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nconst mapStateToProp = state => {\n  return {\n    id: state.user.id\n  };\n};\n\nexport default connect(mapStateToProp)(profileNasabah);","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_fe/src/components/profileNasabah/profileNasabah.js"],"names":["React","connect","Redirect","getAllProfileNasabahFunction","getTokenClient","getTokenAuth","TableComponent","checkPermission","columnDataUser","id","numeric","label","type","crypto","require","algorithm","profileNasabah","Component","state","rows","searchRows","paging","page","rowsPerPage","isEdit","total_data","last_page","loading","_isMount","decryptText","keyStr","text","hash","createHash","update","keyBytes","digest","contents","Buffer","from","iv","slice","textBytes","decipher","createDecipheriv","res","final","getProfileNasabah","param","hasil","search_all","data","dataNasabah","borrowerList","key","category","loan_status","error","setState","current_page","errorMessage","onBtnSearch","e","target","value","onChangePage","current","componentDidMount","decrypted","console","log","componentWillUnmount","render","padding","function","mapStateToProp","user"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport './../../support/css/pagination.css'\r\nimport {getAllProfileNasabahFunction} from './saga'\r\nimport 'moment/locale/id';\r\nimport { getTokenClient,getTokenAuth } from '../index/token'\r\nimport TableComponent from './../subComponent/TableComponent'\r\nimport { checkPermission } from '../global/globalFunction';\r\n\r\nconst columnDataUser = [\r\n  {\r\n      id: 'id',\r\n      numeric: false,\r\n      label: 'ID Nasabah',\r\n  },\r\n  {\r\n      id: 'fullname',\r\n      numeric: false,\r\n      label: 'Nama Nasabah',\r\n  },\r\n  {\r\n      id: 'category',\r\n      numeric: false,\r\n      label: 'Kategori',\r\n  },\r\n  {\r\n    id: 'created_time',\r\n    numeric: false,\r\n    type: 'datetime',\r\n    label: 'Tanggal Registrasi',\r\n  },\r\n  {\r\n    id: 'loan_status',\r\n    numeric: false,\r\n    label: 'Status Nasabah',\r\n  },\r\n]\r\n\r\nconst crypto = require('crypto');\r\nconst algorithm = 'aes-256-cfb';\r\n\r\nclass profileNasabah extends React.Component {\r\n  state = {\r\n    rows: [], \r\n    searchRows:'',\r\n    paging:true,\r\n    page: 1,\r\n    rowsPerPage: 10,\r\n    isEdit: false,\r\n    total_data:0,\r\n    last_page:1,\r\n    loading:true,\r\n  };\r\n  _isMount = false\r\n  //-----------------------------------NIKO FUNCTION-------------------------------------------------------------\r\n  componentDidMount(){\r\n    this._isMount=true\r\n    this.getProfileNasabah()\r\n\r\n    let data = \"9CIasG71_CsCxJRdmT2QOXKmas2_EUZK79L_4C0Ud01UMHeIALtTuvcTJWsqvcBrKuKr9r21gLXgGQikEPbruTOz2oxVLzLhVv_oTluBuQC0HferBQNt3l7QgEY=\";\r\n    let key='BpLnfgDsc3WD9F3q'\r\n\r\n    const decrypted = this.decryptText(key, data);\r\n\r\n    console.log(decrypted)\r\n  }\r\n  componentWillUnmount(){\r\n    this._isMount=false\r\n  }\r\n\r\n//   import (\r\n//     \"crypto/aes\"\r\n//     \"crypto/cipher\"\r\n//     \"encoding/base64\"\r\n//     \"fmt\"\r\n// )\r\n// func decrypt(encryptedText string, passphrase string) (string, error) {\r\n//     ciphertext, _ := base64.URLEncoding.DecodeString(encryptedText)\r\n//     block, err := aes.NewCipher([]byte(passphrase))\r\n//     if err != nil {\r\n//         return \"\", err\r\n//     }\r\n//     // The IV needs to be unique, but not secure. Therefore it's common to\r\n//     // include it at the beginning of the ciphertext.\r\n//     if len(ciphertext) < aes.BlockSize {\r\n//         return \"\", fmt.Errorf(\"cannot decrypt\")\r\n//     }\r\n//     iv := ciphertext[:aes.BlockSize]\r\n//     ciphertext = ciphertext[aes.BlockSize:]\r\n//     stream := cipher.NewCFBDecrypter(block, iv)\r\n//     // XORKeyStream can work in-place if the two arguments are the same.\r\n//     stream.XORKeyStream(ciphertext, ciphertext)\r\n//     return fmt.Sprintf(\"%s\", ciphertext), nil\r\n// }\r\n\r\n decryptText = (keyStr, text) => {\r\n  const hash = crypto.createHash('sha256');\r\n  hash.update(keyStr);\r\n  const keyBytes = hash.digest();\r\n\r\n  const contents = Buffer.from(text, 'base64');\r\n  const iv = contents.slice(0, 16);\r\n  const textBytes = contents.slice(16);\r\n  const decipher = crypto.createDecipheriv(algorithm, keyBytes, iv);\r\n  let res = decipher.update(textBytes, '', 'utf8');\r\n  res += decipher.final('utf8');\r\n  return res;\r\n} \r\n\r\n  \r\n  \r\n  //Ambil data pertama kali\r\n  getProfileNasabah = async function(){\r\n    const param ={\r\n      rows:this.state.rowsPerPage,\r\n      page:this.state.page\r\n    }\r\n    let hasil = this.state.searchRows\r\n\r\n    if(hasil){\r\n      param.search_all = hasil\r\n    }\r\n    const data = await getAllProfileNasabahFunction(param)\r\n    const dataNasabah = data.borrowerList.data;\r\n    \r\n    for (const key in dataNasabah){\r\n      dataNasabah[key].category = dataNasabah[key].category && dataNasabah[key].category===\"account_executive\"?\"Account Executive\" :dataNasabah[key].category === \"agent\"?\"Agent\":\"Personal\"\r\n      dataNasabah[key].loan_status = dataNasabah[key].loan_status && dataNasabah[key].loan_status===\"active\"?\"Aktif\" :\"Tidak Aktif\"\r\n   }\r\n    if(data){\r\n      if(!data.error){\r\n        this.setState({loading:false,\r\n          rows:dataNasabah,\r\n          rowsPerPage:data.borrowerList.rows,\r\n          total_data:data.borrowerList.total_data,\r\n          last_page:data.borrowerList.last_page,\r\n          page:data.borrowerList.current_page})\r\n      }else{\r\n        this.setState({errorMessage:data.error})\r\n      }\r\n    }\r\n  }\r\n\r\n  onBtnSearch = (e)=>{\r\n    this.setState({loading:true,searchRows:e.target.value,page:1},()=>{\r\n      if(this.state.paging){\r\n      this.getProfileNasabah()\r\n    }\r\n    })\r\n  }\r\n  \r\n  onChangePage = (current) => {\r\n    \r\n    this.setState({loading:true,page:current},()=>{\r\n\r\n      if(this.state.paging){\r\n        this.getProfileNasabah()\r\n      }\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    if(getTokenClient()&&getTokenAuth()){\r\n      return (\r\n        <div className=\"container\" style={{padding:0}}>\r\n\r\n          < TableComponent\r\n            id={\"id\"}\r\n            title={'Nasabah - List'}\r\n            search={\r\n              {\r\n                value: this.state.searchRows,\r\n                label: 'Search ID Nasabah, Nama Nasabah',\r\n                function: this.onBtnSearch,\r\n              }\r\n            }\r\n            paging={this.state.paging}\r\n            loading={this.state.loading}\r\n            columnData={columnDataUser}\r\n            data={this.state.rows}\r\n            page={this.state.page}\r\n            rowsPerPage={this.state.rowsPerPage}\r\n            totalData={this.state.total_data}\r\n            onChangePage={this.onChangePage}             \r\n            permissionDetail={ checkPermission('lender_borrower_list_detail') ? '/profileNasabahDetail/' : null}\r\n          /> \r\n        \r\n        </div>\r\n      );\r\n    }\r\n    else if(getTokenAuth()){\r\n      return  <Redirect to='/login' />\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProp = (state)=>{\r\n  return{     \r\n      id: state.user.id\r\n  }\r\n}\r\nexport default connect (mapStateToProp)(profileNasabah) ;"]},"metadata":{},"sourceType":"module"}