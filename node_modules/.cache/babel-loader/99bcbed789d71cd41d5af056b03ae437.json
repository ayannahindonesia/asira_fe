{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { serverUrl } from '../url';\nimport { getTokenClient } from '../index/token';\nexport function getAllLayananListFunction(_x, _x2) {\n  return _getAllLayananListFunction.apply(this, arguments);\n}\n\nfunction _getAllLayananListFunction() {\n  _getAllLayananListFunction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(param, next) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", new Promise( /*#__PURE__*/function () {\n              var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(resolve) {\n                var filter, key, config;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        filter = '';\n\n                        for (key in param) {\n                          filter += \"&\".concat(key, \"=\").concat(param[key]);\n                        }\n\n                        config = {\n                          headers: {\n                            'Authorization': \"Bearer \" + getTokenClient()\n                          }\n                        };\n                        axios.get(serverUrl + \"lender/services?orderby=updated_at&sort=desc\".concat(filter), config).then(function (res) {\n                          param.layananList = res.data;\n                          resolve(param);\n                        }).catch(function (err) {\n                          var error = err.response && err.response.data && err.response.data.message && \"Error : \".concat(err.response.data.message.toString().toUpperCase());\n                          param.error = error;\n                          resolve(param);\n                        });\n\n                      case 4:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x5) {\n                return _ref.apply(this, arguments);\n              };\n            }()));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getAllLayananListFunction.apply(this, arguments);\n}\n\nexport function getAllLayananDetailFunction(_x3, _x4) {\n  return _getAllLayananDetailFunction.apply(this, arguments);\n}\n\nfunction _getAllLayananDetailFunction() {\n  _getAllLayananDetailFunction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(param, next) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", new Promise( /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(resolve) {\n                var config;\n                return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        config = {\n                          headers: {\n                            'Authorization': \"Bearer \" + getTokenClient()\n                          }\n                        };\n                        axios.get(serverUrl + \"lender/services/\".concat(param.id), config).then(function (res) {\n                          param.layananListDetail = res.data;\n                          resolve(param);\n                        }).catch(function (err) {\n                          var error = err.response && err.response.data && err.response.data.message && \"Error : \".concat(err.response.data.message.toString().toUpperCase());\n                          param.error = error;\n                          resolve(param);\n                        });\n\n                      case 2:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function (_x6) {\n                return _ref2.apply(this, arguments);\n              };\n            }()));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _getAllLayananDetailFunction.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_fe/src/components/layanan/saga.js"],"names":["axios","serverUrl","getTokenClient","getAllLayananListFunction","param","next","Promise","resolve","filter","key","config","headers","get","then","res","layananList","data","catch","err","error","response","message","toString","toUpperCase","getAllLayananDetailFunction","id","layananListDetail"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,QAAxB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,gBAAsBC,yBAAtB;AAAA;AAAA;;;wFAAO,kBAA0CC,KAA1C,EAAgDC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,8CACI,IAAIC,OAAJ;AAAA,kFAAY,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,wBAAAA,MADW,GACF,EADE;;AAEf,6BAAUC,GAAV,IAAiBL,KAAjB,EAAwB;AACpBI,0BAAAA,MAAM,eAAQC,GAAR,cAAeL,KAAK,CAACK,GAAD,CAApB,CAAN;AACH;;AAEKC,wBAAAA,MANS,GAMA;AACXC,0BAAAA,OAAO,EAAE;AAAC,6CAAiB,YAAYT,cAAc;AAA5C;AADE,yBANA;AAUfF,wBAAAA,KAAK,CAACY,GAAN,CAAUX,SAAS,yDAAgDO,MAAhD,CAAnB,EAA4EE,MAA5E,EACCG,IADD,CACM,UAACC,GAAD,EAAO;AACTV,0BAAAA,KAAK,CAACW,WAAN,GAAoBD,GAAG,CAACE,IAAxB;AACAT,0BAAAA,OAAO,CAACH,KAAD,CAAP;AACH,yBAJD,EAKCa,KALD,CAKO,UAACC,GAAD,EAAO;AACV,8BAAMC,KAAK,GAAGD,GAAG,CAACE,QAAJ,IAAgBF,GAAG,CAACE,QAAJ,CAAaJ,IAA7B,IAAqCE,GAAG,CAACE,QAAJ,CAAaJ,IAAb,CAAkBK,OAAvD,sBAA6EH,GAAG,CAACE,QAAJ,CAAaJ,IAAb,CAAkBK,OAAlB,CAA0BC,QAA1B,GAAqCC,WAArC,EAA7E,CAAd;AACAnB,0BAAAA,KAAK,CAACe,KAAN,GAAcA,KAAd;AACAZ,0BAAAA,OAAO,CAACH,KAAD,CAAP;AACH,yBATD;;AAVe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAZ;;AAAA;AAAA;AAAA;AAAA,gBADJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAwBP,gBAAsBoB,2BAAtB;AAAA;AAAA;;;0FAAO,kBAA4CpB,KAA5C,EAAkDC,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,8CACI,IAAIC,OAAJ;AAAA,mFAAY,kBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACTG,wBAAAA,MADS,GACA;AACXC,0BAAAA,OAAO,EAAE;AAAC,6CAAiB,YAAYT,cAAc;AAA5C;AADE,yBADA;AAIfF,wBAAAA,KAAK,CAACY,GAAN,CAAUX,SAAS,6BAAoBG,KAAK,CAACqB,EAA1B,CAAnB,EAAkDf,MAAlD,EACCG,IADD,CACM,UAACC,GAAD,EAAO;AACTV,0BAAAA,KAAK,CAACsB,iBAAN,GAA0BZ,GAAG,CAACE,IAA9B;AACAT,0BAAAA,OAAO,CAACH,KAAD,CAAP;AACH,yBAJD,EAKCa,KALD,CAKO,UAACC,GAAD,EAAO;AACV,8BAAMC,KAAK,GAAGD,GAAG,CAACE,QAAJ,IAAgBF,GAAG,CAACE,QAAJ,CAAaJ,IAA7B,IAAqCE,GAAG,CAACE,QAAJ,CAAaJ,IAAb,CAAkBK,OAAvD,sBAA6EH,GAAG,CAACE,QAAJ,CAAaJ,IAAb,CAAkBK,OAAlB,CAA0BC,QAA1B,GAAqCC,WAArC,EAA7E,CAAd;AACAnB,0BAAAA,KAAK,CAACe,KAAN,GAAcA,KAAd;AACAZ,0BAAAA,OAAO,CAACH,KAAD,CAAP;AACH,yBATD;;AAJe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAZ;;AAAA;AAAA;AAAA;AAAA,gBADJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import axios from 'axios'\r\nimport {serverUrl} from '../url'\r\nimport { getTokenClient } from '../index/token'\r\n\r\nexport async function getAllLayananListFunction (param,next){\r\n    return new Promise(async (resolve)=>{\r\n        let filter = '';\r\n        for(const key in param) {\r\n            filter += `&${key}=${param[key]}`\r\n        }\r\n        \r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + getTokenClient()}\r\n        };\r\n\r\n        axios.get(serverUrl+`lender/services?orderby=updated_at&sort=desc${filter}`,config)\r\n        .then((res)=>{\r\n            param.layananList = res.data;\r\n            resolve(param)\r\n        })\r\n        .catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}\r\n\r\nexport async function getAllLayananDetailFunction (param,next){\r\n    return new Promise(async (resolve)=>{  \r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + getTokenClient()}\r\n        };\r\n        axios.get(serverUrl+`lender/services/${param.id}`,config)\r\n        .then((res)=>{\r\n            param.layananListDetail = res.data;\r\n            resolve(param)\r\n        })\r\n        .catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}