{"ast":null,"code":"import axios from 'axios';\nimport Cookie from 'universal-cookie';\nimport { serverUrl, serverUrlBorrower } from '../url';\nimport { setTokenClient, setTokenBorrower, getTokenAuth, getTokenClient, setProfileUser } from './token';\nconst cookie = new Cookie();\nexport async function postLoginBankDashboardFunction(param, next) {\n  return new Promise(async resolve => {\n    const tokenAuth = getTokenAuth();\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + tokenAuth\n      }\n    };\n    let newLink = serverUrl + \"client/lender_login\";\n    const logindata = {\n      key: param.key,\n      password: param.password\n    };\n    axios.post(newLink, logindata, config).then(res => {\n      param.dataTokenLender = res.data.token;\n      let date = new Date();\n      date.setTime(date.getTime() + res.data.expires * 1000);\n      delete param.password;\n      cookie.set('tokenClient', res.data.token, {\n        expires: date\n      });\n      setTokenClient(res.data.token, date.getTime() + res.data.expires_in * 1000);\n\n      if (next) {\n        resolve(next(param));\n      }\n\n      resolve(param);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && \"Error : \".concat(err.response.data.message.toString().toUpperCase());\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getTokenBorrowerFunction(param, next) {\n  return new Promise(async resolve => {\n    let newLink = serverUrlBorrower + \"clientauth\";\n    const logindata = {\n      auth: {\n        username: 'androkey',\n        password: 'androsecret'\n      }\n    };\n    axios.post(newLink, logindata).then(res => {\n      const date = new Date();\n      date.setTime(date.getTime() + res.data.expires * 1000);\n      param.dataTokenBorrower = res.data.token;\n      cookie.set('tokenBorrower', res.data.token, {\n        expires: date\n      });\n      setTokenBorrower(res.data.token);\n\n      if (next) {\n        resolve(next(param));\n      }\n\n      resolve(param);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && \"Error : \".concat(err.response.data.message.toString().toUpperCase());\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getProfileFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getTokenClient()\n      }\n    };\n    console.log(getTokenClient());\n    Axios.get(serverUrl + \"lender/profile\", config).then(res => {\n      setProfileUser(res.data);\n\n      if (next) {\n        resolve(next(param));\n      }\n\n      resolve(param);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && \"Error : \".concat(err.response.data.message.toString().toUpperCase());\n      param.error = error;\n      resolve(param);\n    });\n  });\n}","map":{"version":3,"sources":["C:\\Users\\pc\\Desktop\\asira_fe\\src\\components\\index\\saga.js"],"names":["axios","Cookie","serverUrl","serverUrlBorrower","setTokenClient","setTokenBorrower","getTokenAuth","getTokenClient","setProfileUser","cookie","postLoginBankDashboardFunction","param","next","Promise","resolve","tokenAuth","config","headers","newLink","logindata","key","password","post","then","res","dataTokenLender","data","token","date","Date","setTime","getTime","expires","set","expires_in","catch","err","error","response","message","toString","toUpperCase","getTokenBorrowerFunction","auth","username","dataTokenBorrower","getProfileFunction","console","log","Axios","get"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport Cookie from 'universal-cookie'\r\nimport {serverUrl, serverUrlBorrower} from '../url'\r\nimport { setTokenClient, setTokenBorrower, getTokenAuth, getTokenClient, setProfileUser } from './token'\r\nconst cookie = new Cookie()\r\n\r\nexport async function postLoginBankDashboardFunction (param, next) {\r\n    return new Promise(async (resolve)=>{\r\n        const tokenAuth = getTokenAuth();\r\n\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + tokenAuth}\r\n        };\r\n\r\n        let newLink = serverUrl+`client/lender_login`;  \r\n        const logindata ={key: param.key,password: param.password};\r\n          \r\n        axios.post(newLink, logindata, config)\r\n        .then((res)=>{\r\n            param.dataTokenLender = res.data.token;\r\n            let date = new Date();\r\n            date.setTime(date.getTime() + (res.data.expires*1000));\r\n\r\n            delete param.password;\r\n            cookie.set('tokenClient',res.data.token,{expires: date})\r\n            setTokenClient(res.data.token, date.getTime() + (res.data.expires_in*1000))\r\n\r\n            if(next){\r\n                resolve(next(param))\r\n            }\r\n            resolve(param)\r\n        })\r\n        .catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n    \r\n}\r\n\r\nexport async function getTokenBorrowerFunction (param, next) {\r\n    return new Promise(async (resolve)=>{\r\n        let newLink = serverUrlBorrower +`clientauth`;  \r\n        const logindata = {\r\n            auth : {\r\n                username : 'androkey',\r\n                password : 'androsecret'\r\n            }\r\n        };\r\n          \r\n        axios.post(newLink, logindata)\r\n        .then((res)=>{\r\n            const date = new Date();\r\n            date.setTime(date.getTime() + (res.data.expires*1000));\r\n            \r\n            param.dataTokenBorrower = res.data.token;\r\n            cookie.set('tokenBorrower',res.data.token,{expires: date})\r\n\r\n            setTokenBorrower(res.data.token);\r\n\r\n            if(next){\r\n                resolve(next(param))\r\n            }\r\n            resolve(param)\r\n        })\r\n        .catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n    \r\n}\r\n\r\nexport async function getProfileFunction (param, next) {\r\n    return new Promise(async (resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + getTokenClient()}\r\n        };\r\n        console.log(getTokenClient())\r\n        Axios.get(serverUrl+\"lender/profile\",config)\r\n        .then((res)=>{\r\n            setProfileUser(res.data);\r\n\r\n            if(next){\r\n                resolve(next(param))\r\n            }\r\n            resolve(param)\r\n        })\r\n        .catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}