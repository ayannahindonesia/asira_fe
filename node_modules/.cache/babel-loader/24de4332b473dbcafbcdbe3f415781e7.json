{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\src\\\\components\\\\index\\\\login.js\";\nimport React from 'react';\nimport Logo from './../../support/img/logo.jpeg';\nimport './../../support/css/login.css';\nimport Loader from 'react-loader-spinner';\nimport swal from 'sweetalert';\nimport { Redirect } from 'react-router-dom';\nimport { keepLogin } from '../../1.actions';\nimport { connect } from 'react-redux';\nimport { postLoginBankDashboardFunction, getTokenBorrowerFunction, getUserProfileFunction } from './saga';\nimport { setProfileUser } from './token';\nimport { Grid, Button, TextField } from '@material-ui/core';\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this._isMounted = false;\n    this.state = {\n      loading: false,\n      isLogin: false,\n      username: '',\n      password: ''\n    };\n\n    this.btnLogin = () => {\n      this.setState({\n        loading: true\n      });\n      var username = this.state.username;\n      var password = this.state.password;\n      const param = {\n        key: username,\n        password\n      };\n\n      if (username === \"\" || password === \"\") {\n        swal(\"Error\", \"Username and Password Empty\", \"error\");\n        this.setState({\n          loading: false\n        });\n      } else {\n        this.postLogin(param);\n      }\n    };\n\n    this.postLogin = async function (param) {\n      const data = await postLoginBankDashboardFunction(param, getTokenBorrowerFunction, getUserProfileFunction);\n\n      if (data) {\n        if (!data.error) {\n          let userPermission = data.dataPermission || {};\n          setProfileUser(JSON.stringify(userPermission));\n          this.setState({\n            loading: false,\n            isLogin: true\n          });\n        } else {\n          this.setState({\n            loading: false\n          });\n          swal(\"Gagal Login\", \"Cek ulang Username dan Password\", \"info\");\n        }\n      }\n    };\n\n    this.renderBtnOrLoading = () => {\n      if (this.state.loading) {\n        return React.createElement(Loader, {\n          type: \"Circles\",\n          color: \"#00BFFF\",\n          height: \"10\",\n          width: \"10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"input\", {\n          type: \"button\",\n          className: \"loginBtn\",\n          onClick: this.btnLogin,\n          style: {\n            marginTop: \"20px\"\n          },\n          value: \"Sign in\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.handleChangeTextField = e => {\n      const label = e.target.id;\n      this.setState({\n        [label]: e.target.value\n      });\n    };\n\n    this.handleEnter = e => {\n      if (e.charCode === 13) {\n        console.log('hit');\n        e.preventDefault();\n        e.stopPropagation();\n        this.btnLogin();\n      }\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  } //LOGIN BUTTON\n\n\n  render() {\n    if (this.state.isLogin) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      });\n    } // alert('masuk')\n\n\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      className: \"loginContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require('./../../icons/LogoAsira.png'),\n      alt: \"\",\n      style: {\n        width: '60%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      className: \"loginBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      style: {\n        marginTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Bank Dashboard\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      style: {\n        marginTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: 'username',\n      size: \"small\",\n      margin: \"dense\",\n      variant: \"outlined\",\n      style: {\n        width: \"70%\"\n      },\n      label: 'Username',\n      value: this.state.username,\n      onChange: this.handleChangeTextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: 'password',\n      type: \"password\",\n      size: \"small\",\n      margin: \"dense\",\n      variant: \"outlined\",\n      style: {\n        width: \"70%\"\n      },\n      label: 'Password',\n      onKeyPress: this.handleEnter,\n      value: this.state.password,\n      onChange: this.handleChangeTextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      style: {\n        fontSize: '12px',\n        paddingRight: '15%',\n        marginTop: 5,\n        textAlign: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Lupa Password ?\"), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      style: {\n        marginTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, this.state.loading && React.createElement(Loader, {\n      type: \"Circles\",\n      color: \"#00BFFF\",\n      height: \"50\",\n      width: \"50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), !this.state.loading && React.createElement(Button, {\n      variant: \"contained\",\n      style: {\n        backgroundColor: '#20B889',\n        width: '70%',\n        color: 'white'\n      },\n      onClick: this.btnLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Masuk\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      style: {\n        marginTop: 20,\n        marginBottom: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require('./../../icons/powered.svg'),\n      alt: \"\",\n      style: {\n        width: '30%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })))))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    })) // <div className=\"App loginContainer mr-3\">\n    //     <div className=\"row mt-2\">\n    //         <div className=\"col-6 col-md-6 mt-3\">\n    //            <h5>Bank Dashboard</h5> \n    //         </div>\n    //         <div className=\"col-6 col-md-6 mt-2\">\n    //             <img src={Logo} alt=\"logo\" width=\"60%\"></img>\n    //         </div>\n    //     </div>\n    //     <div className=\"row\">\n    //         <div className=\"col-12 col-md-12\">\n    //             <hr/>\n    //             <h2>Sign In</h2>\n    //             <input type=\"text\" placeholder=\"Username\" ref=\"username\" className=\"form-control\"/>\n    //             <input type=\"password\" placeholder=\"Password\" ref=\"password\" className=\"form-control\"/>\n    //             {this.renderBtnOrLoading()}\n    //             <p style={{marginTop:\"5px\"}}>Forgot your password?</p>\n    //         </div>\n    //     </div>\n    // </div>\n    ;\n  }\n\n}\n\nexport default connect(null, {\n  keepLogin\n})(Login);","map":{"version":3,"sources":["C:\\Users\\pc\\Desktop\\asira_fe\\src\\components\\index\\login.js"],"names":["React","Logo","Loader","swal","Redirect","keepLogin","connect","postLoginBankDashboardFunction","getTokenBorrowerFunction","getUserProfileFunction","setProfileUser","Grid","Button","TextField","Login","Component","_isMounted","state","loading","isLogin","username","password","btnLogin","setState","param","key","postLogin","data","error","userPermission","dataPermission","JSON","stringify","renderBtnOrLoading","marginTop","handleChangeTextField","e","label","target","id","value","handleEnter","charCode","console","log","preventDefault","stopPropagation","componentDidMount","componentWillUnmount","render","textAlign","require","width","fontSize","paddingRight","backgroundColor","color","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Logo from './../../support/img/logo.jpeg'\r\nimport './../../support/css/login.css'\r\nimport Loader from 'react-loader-spinner'\r\nimport swal from 'sweetalert'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {keepLogin} from '../../1.actions'\r\nimport {connect} from 'react-redux'\r\nimport { postLoginBankDashboardFunction, getTokenBorrowerFunction, getUserProfileFunction } from './saga'\r\nimport { setProfileUser } from './token'\r\nimport { Grid, Button, TextField } from '@material-ui/core'\r\n\r\n\r\n \r\nclass Login extends React.Component{\r\n    _isMounted = false;\r\n\r\n    state={\r\n        loading:false, \r\n        isLogin:false,\r\n        username: '',\r\n        password: '', \r\n    }\r\n\r\n    componentDidMount(){\r\n        this._isMounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;     \r\n    }\r\n  \r\n    //LOGIN BUTTON\r\n    btnLogin = ()=>{\r\n        this.setState({loading:true})\r\n\r\n        var username=this.state.username\r\n        var password=this.state.password\r\n\r\n        const param = {\r\n            key: username,\r\n            password\r\n        }\r\n\r\n        if (username===\"\" || password===\"\"){\r\n            swal(\"Error\",\"Username and Password Empty\",\"error\")\r\n            this.setState({loading:false})\r\n\r\n        }else{\r\n            this.postLogin(param)\r\n        }\r\n      \r\n    } \r\n    \r\n    postLogin = async function (param) {\r\n        const data = await postLoginBankDashboardFunction(param, getTokenBorrowerFunction, getUserProfileFunction)\r\n\r\n            if(data) {\r\n                if(!data.error) {\r\n                    let userPermission = data.dataPermission || {};  \r\n                \r\n                    setProfileUser(JSON.stringify(userPermission))\r\n\r\n                    this.setState({loading:false , isLogin : true})\r\n                } else {\r\n                    this.setState({loading:false})\r\n                    swal(\"Gagal Login\",\"Cek ulang Username dan Password\",\"info\")\r\n                }\r\n            }\r\n    }\r\n\r\n    renderBtnOrLoading =()=>{\r\n        if (this.state.loading){\r\n            return (\r\n                <Loader \r\n                    type=\"Circles\"\r\n                    color=\"#00BFFF\"\r\n                    height=\"10\"\t\r\n                    width=\"10\"\r\n                />   \r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <input type=\"button\" className=\"loginBtn\" onClick={this.btnLogin} style={{marginTop:\"20px\"}} value=\"Sign in\"/> \r\n            )\r\n        }\r\n    }\r\n\r\n    handleChangeTextField = (e) => {\r\n        const label = e.target.id;\r\n\r\n        this.setState({\r\n            [label] : e.target.value,\r\n        })\r\n    }\r\n\r\n    handleEnter =(e)=> {\r\n        if (e.charCode === 13) {\r\n            console.log('hit')\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            this.btnLogin();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLogin){\r\n            return(\r\n                <Redirect to='/' />\r\n            )\r\n        }\r\n        // alert('masuk')\r\n       \r\n\r\n            return (\r\n                <Grid container>\r\n                    <Grid item xs={12} sm={4}>\r\n                        \r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Grid container className='loginContainer'>\r\n                            <Grid item xs={12} sm={12} style={{textAlign:'center'}}>\r\n                                <img src={require('./../../icons/LogoAsira.png')} alt='' style={{width:'60%'}} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}  className='loginBox'>\r\n                                <Grid container>\r\n                                    <Grid item xs={12} sm={12} style={{marginTop:20}}>\r\n                                        <h5>Bank Dashboard</h5> \r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12} style={{marginTop:20}}>\r\n                                        <TextField\r\n                                            id={'username'}\r\n                                            size=\"small\"\r\n                                            margin=\"dense\"\r\n                                            variant='outlined'\r\n                                            style={{width:\"70%\"}}\r\n                                            label={'Username'}\r\n                                            value={this.state.username}\r\n                                            onChange={this.handleChangeTextField}\r\n                                        /> \r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12} style={{marginTop:10}}>\r\n                                        <TextField\r\n                                            id={'password'}\r\n                                            type='password'\r\n                                            size=\"small\"\r\n                                            margin=\"dense\"\r\n                                            variant='outlined'\r\n                                            style={{width:\"70%\"}}\r\n                                            label={'Password'}\r\n                                            onKeyPress={this.handleEnter}\r\n                                            value={this.state.password}\r\n                                            onChange={this.handleChangeTextField}\r\n                                        />  \r\n                                        \r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={12} sm={12} style={{fontSize:'12px' ,paddingRight:'15%', marginTop:5, textAlign:'right'}}>\r\n                                        Lupa Password ?\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={12} sm={12} style={{marginTop:20}}>\r\n                                        {\r\n                                            this.state.loading && \r\n                                            <Loader \r\n                                                type=\"Circles\"\r\n                                                color=\"#00BFFF\"\r\n                                                height=\"50\"\t\r\n                                                width=\"50\"\r\n                                            />   \r\n                                            \r\n                                        }\r\n                                        {\r\n                                            !this.state.loading && \r\n                                            <Button\r\n                                                variant='contained'\r\n                                                style={{backgroundColor: '#20B889', width:'70%', color:'white'}}\r\n                                                onClick={this.btnLogin}\r\n                                            >\r\n                                                Masuk\r\n                                            </Button>\r\n                                        }\r\n                                        \r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12} style={{marginTop:20, marginBottom:20}}>\r\n                                        <img src={require('./../../icons/powered.svg')} alt='' style={{width:'30%'}} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                \r\n                            </Grid>\r\n                        </Grid>\r\n                        \r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        \r\n                    </Grid>\r\n                </Grid>\r\n                // <div className=\"App loginContainer mr-3\">\r\n                //     <div className=\"row mt-2\">\r\n                //         <div className=\"col-6 col-md-6 mt-3\">\r\n                //            <h5>Bank Dashboard</h5> \r\n                //         </div>\r\n                //         <div className=\"col-6 col-md-6 mt-2\">\r\n                //             <img src={Logo} alt=\"logo\" width=\"60%\"></img>\r\n                //         </div>\r\n                //     </div>\r\n    \r\n                //     <div className=\"row\">\r\n                //         <div className=\"col-12 col-md-12\">\r\n                //             <hr/>\r\n                //             <h2>Sign In</h2>\r\n                //             <input type=\"text\" placeholder=\"Username\" ref=\"username\" className=\"form-control\"/>\r\n                //             <input type=\"password\" placeholder=\"Password\" ref=\"password\" className=\"form-control\"/>\r\n                //             {this.renderBtnOrLoading()}\r\n                //             <p style={{marginTop:\"5px\"}}>Forgot your password?</p>\r\n                       \r\n                //         </div>\r\n                //     </div>\r\n                // </div>\r\n            )\r\n\r\n        }\r\n      \r\n       \r\n    \r\n}\r\n\r\nexport default connect(null,{keepLogin}) (Login);\r\n"]},"metadata":{},"sourceType":"module"}