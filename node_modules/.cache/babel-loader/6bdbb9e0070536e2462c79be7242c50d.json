{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\src\\\\components\\\\subComponent\\\\TableComponent.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport localeInfo from 'rc-pagination/lib/locale/id_ID';\nimport Pagination from 'rc-pagination';\nimport { Link } from 'react-router-dom';\nimport Loader from 'react-loader-spinner';\nimport { formatNumber, handleFormatDate } from '../global/globalFunction';\nimport CheckBox from '@material-ui/core/Checkbox';\nimport './../../support/css/table.css';\nimport { Grid } from '@material-ui/core';\nimport TitleBar from './TitleBar';\n\nclass TableComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChecked = (id, arrayCheckedBox) => {\n      let flag = false;\n\n      for (const key in arrayCheckedBox) {\n        if (arrayCheckedBox[key].toString() === id.toString()) {\n          flag = true;\n          break;\n        }\n      }\n\n      return flag;\n    };\n\n    this.state = {\n      data: props.data,\n      page: 1,\n      rowsPerPage: 10\n    };\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(TitleBar, {\n      title: 'Nasabah - Detail',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      xs: 12,\n      style: {\n        padding: 10,\n        marginBottom: 20,\n        boxShadow: '0px -3px 25px rgba(99,167,181,0.24)',\n        WebkitBoxShadow: '0px -3px 25px rgba(99,167,181,0.24)',\n        borderRadius: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table table-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"theadCustom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.props.checkBoxAction && React.createElement(\"th\", {\n      className: \"text-center\",\n      scope: \"col\",\n      key: 'CheckBox',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-check-square\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      className: \"text-center\",\n      scope: \"col\",\n      key: '#',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"#\"), this.props.columnData.map((data, index) => {\n      return React.createElement(\"th\", {\n        className: \"text-center\",\n        scope: \"col\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, data.label);\n    }, this), React.createElement(\"th\", {\n      className: \"text-center\",\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Action\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.props.loading && React.createElement(\"tr\", {\n      key: \"zz\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      align: \"center\",\n      colSpan: this.props.columnData.length + 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      type: \"Circles\",\n      color: \"#00BFFF\",\n      height: \"40\",\n      width: \"40\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }))), !this.props.loading && (!this.props.data || this.props.data && this.props.data.length === 0) && React.createElement(\"tr\", {\n      key: \"failed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      align: \"center\",\n      colSpan: this.props.columnData.length + 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, 'No Data')), !this.props.loading && this.props.data && this.props.data.length > 0 && this.props.data.map((dataTable, index) => {\n      if (this.props.paging || index >= (this.props.page - 1) * this.props.rowsPerPage && index <= this.props.rowsPerPage * this.props.page - 1) {\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, this.props.checkBoxAction && React.createElement(\"td\", {\n          align: \"center\",\n          style: {\n            paddingTop: '0px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(CheckBox, {\n          checked: this.onChecked(dataTable[this.props.id], this.props.arrayCheckBox),\n          onClick: this.props.checkBoxAction,\n          value: dataTable[this.props.id],\n          color: \"default\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, this.props.paging ? index + 1 + this.props.rowsPerPage * (this.props.page - 1) : index + 1), this.props.columnData.map((dataRow, indexRow) => {\n          return React.createElement(\"td\", {\n            align: dataRow.numeric ? \"right\" : \"center\",\n            key: indexRow,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }, dataRow.type && dataRow.type === 'datetime' ? handleFormatDate(dataTable[dataRow.id]) : dataRow.numeric ? formatNumber(dataTable[dataRow.id]) : dataTable[dataRow.id] || '-');\n        }, this), React.createElement(\"td\", {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, this.props.permissionEdit && React.createElement(Link, {\n          to: \"\".concat(this.props.permissionEdit).concat(dataTable[this.props.id]),\n          className: \"mr-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-edit\",\n          style: {\n            color: \"black\",\n            fontSize: \"18px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        })), this.props.permissionDetail && React.createElement(Link, {\n          to: \"\".concat(this.props.permissionDetail).concat(dataTable[this.props.id]),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-eye\",\n          style: {\n            color: \"black\",\n            fontSize: \"18px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }))));\n      } else {\n        return null;\n      }\n    }, this))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"nav\", {\n      className: \"navbar\",\n      style: {\n        float: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      className: \"ant-pagination\",\n      current: this.props.page,\n      showTotal: (total, range) => \"\".concat(range[0], \" - \").concat(range[1], \" of \").concat(total, \" items\"),\n      total: this.props.totalData,\n      showLessItems: true,\n      pageSize: this.props.rowsPerPage,\n      onChange: this.props.onChangePage,\n      locale: localeInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nTableComponent.propTypes = {\n  paging: PropTypes.bool,\n  page: PropTypes.number,\n  rowsPerPage: PropTypes.number,\n  onChangePage: PropTypes.func,\n  totalData: PropTypes.number,\n  disabled: PropTypes.bool,\n  permissionEdit: PropTypes.string,\n  permissionDetail: PropTypes.string,\n  id: PropTypes.string,\n  loading: PropTypes.bool\n};\nexport default TableComponent;","map":{"version":3,"sources":["C:\\Users\\pc\\Desktop\\asira_fe\\src\\components\\subComponent\\TableComponent.js"],"names":["React","PropTypes","localeInfo","Pagination","Link","Loader","formatNumber","handleFormatDate","CheckBox","Grid","TitleBar","TableComponent","Component","constructor","props","onChecked","id","arrayCheckedBox","flag","key","toString","state","data","page","rowsPerPage","render","padding","marginBottom","boxShadow","WebkitBoxShadow","borderRadius","checkBoxAction","columnData","map","index","label","loading","length","dataTable","paging","paddingTop","arrayCheckBox","dataRow","indexRow","numeric","type","permissionEdit","color","fontSize","permissionDetail","float","total","range","totalData","onChangePage","propTypes","bool","number","func","disabled","string"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport localeInfo from 'rc-pagination/lib/locale/id_ID';\r\nimport Pagination from 'rc-pagination';\r\nimport {Link} from 'react-router-dom';\r\nimport Loader from 'react-loader-spinner';\r\nimport { formatNumber, handleFormatDate } from '../global/globalFunction';\r\nimport CheckBox from '@material-ui/core/Checkbox';\r\nimport './../../support/css/table.css'\r\nimport { Grid } from '@material-ui/core';\r\nimport TitleBar from './TitleBar';\r\n\r\nclass TableComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: props.data,\r\n      page: 1,\r\n      rowsPerPage: 10,\r\n    };\r\n  }\r\n\r\n  onChecked = (id, arrayCheckedBox) => {\r\n    let flag = false;\r\n\r\n    for(const key in arrayCheckedBox) {\r\n      if(arrayCheckedBox[key].toString() === id.toString()) {\r\n        flag = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return flag;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid container>\r\n        <Grid item sm={12} xs={12}>\r\n          <TitleBar\r\n            title={'Nasabah - Detail'}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item sm={12} xs={12}>\r\n          \r\n        </Grid>\r\n\r\n        <Grid \r\n          item \r\n          sm={12} xs={12}\r\n          style={{padding:10, marginBottom:20, boxShadow:'0px -3px 25px rgba(99,167,181,0.24)', WebkitBoxShadow:'0px -3px 25px rgba(99,167,181,0.24)', borderRadius:'15px'}}                                     \r\n        >\r\n          \r\n          <table className=\"table table-hover\">\r\n            <thead className=\"theadCustom\">\r\n              <tr >\r\n                {\r\n                  this.props.checkBoxAction &&\r\n                  <th className=\"text-center\" scope=\"col\" key={'CheckBox'}>\r\n                    <i class=\"fas fa-check-square\"></i>\r\n                  </th>\r\n                }\r\n                <th className=\"text-center\" scope=\"col\" key={'#'}>#</th>\r\n                {\r\n                  this.props.columnData.map((data,index) => {\r\n                    return (\r\n                      <th className=\"text-center\" scope=\"col\" key={index}>{data.label}</th>\r\n                    );\r\n                  },this) \r\n                }\r\n                <th className=\"text-center\" scope=\"col\">Action</th>\r\n              </tr>     \r\n            </thead>\r\n            <tbody>\r\n              {\r\n                \r\n                this.props.loading &&\r\n                <tr  key=\"zz\">\r\n                  <td align=\"center\" colSpan={this.props.columnData.length + 2}>\r\n                    <Loader \r\n                      type=\"Circles\"\r\n                      color=\"#00BFFF\"\r\n                      height=\"40\"\t\r\n                      width=\"40\"\r\n                    />   \r\n                  </td>\r\n                </tr>\r\n              }\r\n\r\n              {\r\n                !this.props.loading && (!this.props.data || (this.props.data &&  this.props.data.length === 0 )) &&\r\n                <tr  key=\"failed\"><td align=\"center\" colSpan={this.props.columnData.length + 2}>{'No Data'}</td></tr>\r\n              }\r\n            \r\n              {\r\n                !this.props.loading && this.props.data && this.props.data.length > 0 && this.props.data.map((dataTable,index) => {  \r\n\r\n                  if(this.props.paging || (index >= ((this.props.page-1) * (this.props.rowsPerPage)) && index <= (this.props.rowsPerPage * this.props.page) - 1 )) {   \r\n                    return (\r\n                      <tr key={index}> \r\n                        {\r\n                          this.props.checkBoxAction &&\r\n                          <td align=\"center\" style={{paddingTop: '0px'}}>\r\n                            <CheckBox\r\n                              checked={this.onChecked(dataTable[this.props.id], this.props.arrayCheckBox)}\r\n                              onClick={this.props.checkBoxAction}\r\n                              value={dataTable[this.props.id]}\r\n                              color=\"default\"\r\n                            />\r\n                          </td>\r\n                        }\r\n                      \r\n                        <td align=\"center\">{this.props.paging ? (index+1 + this.props.rowsPerPage*(this.props.page-1)) : index+1}</td>\r\n                        {\r\n                          this.props.columnData.map((dataRow, indexRow) => {                         \r\n                            return(\r\n                              <td align={dataRow.numeric ? \"right\" : \"center\"} key={indexRow}>\r\n                                {\r\n                                  dataRow.type && dataRow.type === 'datetime' ? handleFormatDate(dataTable[dataRow.id]) : \r\n                                (dataRow.numeric ? formatNumber(dataTable[dataRow.id]) : (dataTable[dataRow.id] || '-'))}\r\n                              </td>\r\n                            );               \r\n                          }, this)\r\n                        }\r\n                        <td align=\"center\">\r\n                          { this.props.permissionEdit &&\r\n                            <Link to={`${this.props.permissionEdit}${dataTable[this.props.id]}`} className=\"mr-2\">\r\n                              <i className=\"fas fa-edit\" style={{color:\"black\",fontSize:\"18px\"}}/>\r\n                            </Link>\r\n                          }\r\n                          { this.props.permissionDetail &&\r\n                            <Link to={`${this.props.permissionDetail}${dataTable[this.props.id]}`} >\r\n                              <i className=\"fas fa-eye\" style={{color:\"black\",fontSize:\"18px\"}}/>\r\n                            </Link>\r\n                          }\r\n                        </td>\r\n                      \r\n\r\n                      </tr>\r\n                    )\r\n                  } else {\r\n                    return null\r\n                  }\r\n                }, this)\r\n              }\r\n            </tbody>\r\n          </table>\r\n          <hr></hr>\r\n          <nav className=\"navbar\" style={{float:\"right\"}}> \r\n\r\n            <Pagination className=\"ant-pagination\"  \r\n              current={this.props.page}\r\n              showTotal={(total, range) => `${range[0]} - ${range[1]} of ${total} items`}\r\n              total={this.props.totalData}\r\n              showLessItems\r\n              pageSize={this.props.rowsPerPage}\r\n              onChange={this.props.onChangePage}\r\n              locale={localeInfo}\r\n            />     \r\n          </nav>\r\n    \r\n\r\n        </Grid>\r\n        \r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nTableComponent.propTypes = {\r\n  paging:PropTypes.bool,\r\n  page: PropTypes.number,\r\n  rowsPerPage: PropTypes.number,\r\n  onChangePage: PropTypes.func,\r\n  totalData: PropTypes.number,\r\n  disabled: PropTypes.bool,\r\n  permissionEdit: PropTypes.string,\r\n  permissionDetail: PropTypes.string,\r\n  id: PropTypes.string,\r\n  loading: PropTypes.bool,\r\n};\r\n\r\nexport default (TableComponent);\r\n"]},"metadata":{},"sourceType":"module"}