{"ast":null,"code":"import axios from 'axios';\nimport { serverUrl } from '../url';\nimport { getTokenClient } from '../index/token';\nexport async function getAllProfileNasabahFunction(param, next) {\n  return new Promise(async resolve => {\n    let filter = '';\n\n    for (const key in param) {\n      filter += `&${key}=${param[key]}`;\n    }\n\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getTokenClient()\n      }\n    };\n    axios.get(serverUrl + `lender/borrower_list?account_number=not null&orderby=updated_time&sort=desc${filter}`, config).then(res => {\n      param.borrowerList = res.data;\n      param.config = res.config.url;\n      resolve(param);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getProfileNasabahDetailFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getTokenClient()\n      }\n    };\n    axios.get(serverUrl + `lender/borrower_list/${param.id}/detail`, config).then(res => {\n      param.detailProfileNasabah = res.data;\n      param.configUrl = res.data.config.url;\n\n      if (next) {\n        resolve(next(param));\n      } else {\n        resolve(param);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_fe/src/components/profileNasabah/saga.js"],"names":["axios","serverUrl","getTokenClient","getAllProfileNasabahFunction","param","next","Promise","resolve","filter","key","config","headers","get","then","res","borrowerList","data","url","catch","err","error","response","message","toString","toUpperCase","getProfileNasabahDetailFunction","id","detailProfileNasabah","configUrl"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,QAAxB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,OAAO,eAAeC,4BAAf,CAA6CC,KAA7C,EAAmDC,IAAnD,EAAwD;AAC3D,SAAO,IAAIC,OAAJ,CAAY,MAAOC,OAAP,IAAiB;AAChC,QAAIC,MAAM,GAAG,EAAb;;AACA,SAAI,MAAMC,GAAV,IAAiBL,KAAjB,EAAwB;AACpBI,MAAAA,MAAM,IAAK,IAAGC,GAAI,IAAGL,KAAK,CAACK,GAAD,CAAM,EAAhC;AACH;;AAED,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AAAC,yBAAiB,YAAYT,cAAc;AAA5C;AADE,KAAf;AAIAF,IAAAA,KAAK,CAACY,GAAN,CAAUX,SAAS,GAAE,8EAA6EO,MAAO,EAAzG,EAA2GE,MAA3G,EACCG,IADD,CACOC,GAAD,IAAO;AACTV,MAAAA,KAAK,CAACW,YAAN,GAAqBD,GAAG,CAACE,IAAzB;AACAZ,MAAAA,KAAK,CAACM,MAAN,GAAeI,GAAG,CAACJ,MAAJ,CAAWO,GAA1B;AACAV,MAAAA,OAAO,CAACH,KAAD,CAAP;AACH,KALD,EAMCc,KAND,CAMQC,GAAD,IAAO;AACV,YAAMC,KAAK,GAAGD,GAAG,CAACE,QAAJ,IAAgBF,GAAG,CAACE,QAAJ,CAAaL,IAA7B,IAAqCG,GAAG,CAACE,QAAJ,CAAaL,IAAb,CAAkBM,OAAvD,IAAmE,WAAUH,GAAG,CAACE,QAAJ,CAAaL,IAAb,CAAkBM,OAAlB,CAA0BC,QAA1B,GAAqCC,WAArC,EAAmD,EAA9I;AACApB,MAAAA,KAAK,CAACgB,KAAN,GAAcA,KAAd;AACAb,MAAAA,OAAO,CAACH,KAAD,CAAP;AACH,KAVD;AAWH,GArBM,CAAP;AAsBH;AAED,OAAO,eAAeqB,+BAAf,CAAgDrB,KAAhD,EAAsDC,IAAtD,EAA2D;AAC9D,SAAO,IAAIC,OAAJ,CAAY,MAAOC,OAAP,IAAiB;AAChC,UAAMG,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AAAC,yBAAiB,YAAYT,cAAc;AAA5C;AADE,KAAf;AAGEF,IAAAA,KAAK,CAACY,GAAN,CAAUX,SAAS,GAAE,wBAAuBG,KAAK,CAACsB,EAAG,SAArD,EAA8DhB,MAA9D,EACCG,IADD,CACOC,GAAD,IAAO;AACTV,MAAAA,KAAK,CAACuB,oBAAN,GAA6Bb,GAAG,CAACE,IAAjC;AACAZ,MAAAA,KAAK,CAACwB,SAAN,GAAkBd,GAAG,CAACE,IAAJ,CAASN,MAAT,CAAgBO,GAAlC;;AACA,UAAGZ,IAAH,EAAQ;AACJE,QAAAA,OAAO,CAACF,IAAI,CAACD,KAAD,CAAL,CAAP;AACH,OAFD,MAEK;AACDG,QAAAA,OAAO,CAACH,KAAD,CAAP;AACH;AACJ,KATD,EAUCc,KAVD,CAUQC,GAAD,IAAO;AACZ,YAAMC,KAAK,GAAGD,GAAG,CAACE,QAAJ,IAAgBF,GAAG,CAACE,QAAJ,CAAaL,IAA7B,IAAqCG,GAAG,CAACE,QAAJ,CAAaL,IAAb,CAAkBM,OAAvD,IAAmE,WAAUH,GAAG,CAACE,QAAJ,CAAaL,IAAb,CAAkBM,OAAlB,CAA0BC,QAA1B,GAAqCC,WAArC,EAAmD,EAA9I;AACApB,MAAAA,KAAK,CAACgB,KAAN,GAAcA,KAAd;AACAb,MAAAA,OAAO,CAACH,KAAD,CAAP;AACH,KAdC;AAeL,GAnBM,CAAP;AAoBH","sourcesContent":["import axios from 'axios'\r\nimport {serverUrl} from '../url'\r\nimport { getTokenClient } from '../index/token'\r\n\r\nexport async function getAllProfileNasabahFunction (param,next){\r\n    return new Promise(async (resolve)=>{\r\n        let filter = '';\r\n        for(const key in param) {\r\n            filter += `&${key}=${param[key]}`\r\n        }\r\n        \r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + getTokenClient()}\r\n        };\r\n\r\n        axios.get(serverUrl+`lender/borrower_list?account_number=not null&orderby=updated_time&sort=desc${filter}`,config)\r\n        .then((res)=>{\r\n            param.borrowerList = res.data;\r\n            param.config = res.config.url\r\n            resolve(param)\r\n        })\r\n        .catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}\r\n\r\nexport async function getProfileNasabahDetailFunction (param,next){\r\n    return new Promise(async (resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + getTokenClient()}\r\n          };\r\n          axios.get(serverUrl+`lender/borrower_list/${param.id}/detail`,config)\r\n          .then((res)=>{\r\n              param.detailProfileNasabah = res.data\r\n              param.configUrl = res.data.config.url\r\n              if(next){\r\n                  resolve(next(param))\r\n              }else{\r\n                  resolve(param)\r\n              }\r\n          })\r\n          .catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}