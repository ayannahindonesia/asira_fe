{"ast":null,"code":"import axios from 'axios';\nimport { serverUrl } from '../url';\nimport { getTokenClient } from '../index/token';\nexport async function getPermintaanPinjamanFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getTokenClient()\n      }\n    };\n    let filter = '';\n\n    for (const key in param) {\n      filter += `&${key}=${param[key]}`;\n    }\n\n    axios.get(serverUrl + `lender/loanrequest_list?orderby=updated_time&sort=desc${filter}`, config).then(res => {\n      param.loanRequest = res.data;\n      param.config = res.config.url;\n\n      if (next) {\n        resolve(next(param));\n      }\n\n      resolve(param);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getPermintaanPinjamanDetailFunction(param, status, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getTokenClient()\n      }\n    };\n    let newLink = serverUrl + `lender/loanrequest_list/${param.idLoan}/detail`;\n\n    if (status && status.toString().trim().length !== 0) {\n      if (status === 'tolak') {\n        newLink += `/reject?reason=${param.reason}`;\n      } else {\n        newLink += `/approve?disburse_date=${param.dateApprove}`;\n      }\n    }\n\n    axios.get(newLink, config).then(res => {\n      param.dataLender = res.data;\n      param.idBorrower = res.data.owner && res.data.owner.Int64 || 0;\n\n      if (next) {\n        resolve(next(param));\n      }\n\n      resolve(param);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function CSVDownloadFunction(param) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getTokenClient()\n      }\n    };\n    axios.get(serverUrl + `lender/loanrequest_list/download?id=${param.id}`, config).then(res => {\n      resolve(res);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function confirmDisburseFunction(param) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getTokenClient()\n      }\n    };\n    axios.get(serverUrl + `lender/loanrequest_list/${param.id}/detail/confirm_disbursement`, config).then(res => {\n      resolve(res);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function changeDisburseDateFunction(param) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getTokenClient()\n      }\n    };\n    axios.get(serverUrl + `lender/loanrequest_list/${param.id}/detail/change_disburse_date?disburse_date=${param.date}`, config).then(res => {\n      resolve(res);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_fe/src/components/permintaanPinjaman/saga.js"],"names":["axios","serverUrl","getTokenClient","getPermintaanPinjamanFunction","param","next","Promise","resolve","config","headers","filter","key","get","then","res","loanRequest","data","url","catch","err","error","response","message","toString","toUpperCase","getPermintaanPinjamanDetailFunction","status","newLink","idLoan","trim","length","reason","dateApprove","dataLender","idBorrower","owner","Int64","CSVDownloadFunction","id","confirmDisburseFunction","changeDisburseDateFunction","date"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {serverUrl} from '../url'\r\nimport { getTokenClient } from '../index/token'\r\n\r\nexport async function getPermintaanPinjamanFunction (param , next){\r\n    return new Promise (async (resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + getTokenClient()}\r\n        };\r\n       \r\n        let filter =''\r\n\r\n        for (const key in param){\r\n            filter += `&${key}=${param[key]}`\r\n        }\r\n\r\n      axios.get(serverUrl+`lender/loanrequest_list?orderby=updated_time&sort=desc${filter}`,config)\r\n      .then((res)=>{\r\n          param.loanRequest = res.data\r\n          param.config = res.config.url\r\n        if(next){\r\n            resolve(next(param))\r\n        }\r\n            resolve(param)\r\n         \r\n      })\r\n      .catch((err)=>{\r\n        const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n        param.error = error;\r\n        resolve(param);\r\n        })\r\n    })\r\n}\r\n\r\nexport async function getPermintaanPinjamanDetailFunction (param, status, next) {\r\n    return new Promise(async (resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + getTokenClient()}\r\n          };\r\n          let newLink = serverUrl+`lender/loanrequest_list/${param.idLoan}/detail`;\r\n\r\n          if(status && status.toString().trim().length !== 0) {\r\n              if(status === 'tolak') {\r\n                newLink += `/reject?reason=${param.reason}`\r\n              } else {\r\n                newLink += `/approve?disburse_date=${param.dateApprove}`\r\n              }\r\n          }\r\n          \r\n        axios.get(newLink,config)\r\n        .then((res)=>{\r\n            param.dataLender = res.data;\r\n            param.idBorrower = (res.data.owner && res.data.owner.Int64) || 0;\r\n            if(next){\r\n                resolve(next(param))\r\n            }\r\n            resolve(param)\r\n        })\r\n        .catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n    \r\n}\r\n\r\nexport async function CSVDownloadFunction (param){\r\n    return new Promise(async (resolve)=>{\r\n        const config = {\r\n        headers: {'Authorization': \"Bearer \" + getTokenClient()}\r\n        };\r\n        axios.get(serverUrl+`lender/loanrequest_list/download?id=${param.id}`,config)\r\n        .then((res)=>{\r\n            resolve(res)\r\n        })\r\n        .catch((err)=>{\r\n        const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n        param.error = error;\r\n        resolve(param);\r\n        })\r\n    })\r\n}\r\n\r\nexport async function confirmDisburseFunction (param){\r\n    return new Promise(async (resolve)=>{\r\n            const config = {\r\n            headers: {'Authorization': \"Bearer \" + getTokenClient()}\r\n            };\r\n\r\n            axios.get(serverUrl+`lender/loanrequest_list/${param.id}/detail/confirm_disbursement`,config)\r\n            .then((res)=>{\r\n                resolve(res)\r\n            })\r\n            .catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n            })\r\n    })\r\n}\r\n\r\nexport async function changeDisburseDateFunction (param){\r\n    return new Promise(async (resolve)=>{\r\n            const config = {\r\n            headers: {'Authorization': \"Bearer \" + getTokenClient()}\r\n            };\r\n\r\n            axios.get(serverUrl+`lender/loanrequest_list/${param.id}/detail/change_disburse_date?disburse_date=${param.date}`,config)\r\n            .then((res)=>{\r\n                resolve(res)\r\n            })\r\n            .catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n            })\r\n    })\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}