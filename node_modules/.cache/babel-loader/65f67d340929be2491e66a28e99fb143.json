{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\src\\\\components\\\\pinjaman\\\\pinjamanList.js\";\nimport React from 'react';\nimport swal from 'sweetalert';\nimport { CSVLink } from \"react-csv\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport './../../support/css/pagination.css';\nimport { getPermintaanPinjamanFunction, CSVDownloadFunction } from './saga';\nimport 'moment/locale/id';\nimport { getTokenClient, getTokenAuth } from '../index/token';\nimport { checkPermission } from '../global/globalFunction';\nimport './../../support/css/table.css';\nimport TableComponent from '../subComponent/TableComponent';\nimport { Button } from '@material-ui/core';\nimport { constructDataLoan } from './function';\nvar columnDataUser = [{\n  id: 'id',\n  label: 'ID Pinjaman'\n}, {\n  id: 'borrower_name',\n  label: 'Nama Nasabah'\n}, {\n  id: 'service',\n  label: 'Layanan'\n}, {\n  id: 'product',\n  label: 'Produk'\n}, {\n  id: 'created_at',\n  label: 'Tanggal Pengajuan',\n  type: 'datetime'\n}, {\n  id: 'approval_date',\n  label: 'Tanggal Penerimaan',\n  type: 'datetime'\n}, {\n  id: 'disburse_date',\n  label: 'Tanggal Pencairan',\n  type: 'datetime'\n}, {\n  id: 'status_string',\n  label: 'Status Pinjaman'\n}];\n\nvar ClassDataLoan = /*#__PURE__*/function (_React$Component) {\n  _inherits(ClassDataLoan, _React$Component);\n\n  var _super = _createSuper(ClassDataLoan);\n\n  function ClassDataLoan() {\n    var _this;\n\n    _classCallCheck(this, ClassDataLoan);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._isMounted = false;\n    _this.state = {\n      checkedData: [],\n      dataLoan: [],\n      page: 1,\n      paging: true,\n      rowsPerPage: 10,\n      startDate: new Date(),\n      endDate: new Date(),\n      downloadDataCSV: [],\n      headerCsv: [],\n      reportNameCsv: '',\n      downloadModal: false,\n      total_data: 0,\n      loading: true,\n      loadingBtn: false,\n      searching: false,\n      errorMessage: ''\n    };\n    _this.getAllData = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var param, data, dataLoan, key;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              param = {\n                rows: \"10\",\n                page: this.state.page\n              };\n\n              if (this.state.searching) {\n                param.start_date = this.formatSearchingDate(this.state.startDate);\n                param.end_date = this.formatSearchingDate(this.state.endDate, true);\n              }\n\n              _context.next = 4;\n              return getPermintaanPinjamanFunction(param);\n\n            case 4:\n              data = _context.sent;\n\n              if (data) {\n                if (!data.error) {\n                  dataLoan = data.loanRequest && data.loanRequest.data || [];\n\n                  for (key in dataLoan) {\n                    dataLoan[key].status_string = dataLoan[key].payment_status === \"failed\" ? 'Gagal Bayar' : dataLoan[key].payment_status === \"paid\" ? 'Telah Bayar' : dataLoan[key].status === \"approved\" && dataLoan[key].disburse_status === 'confirmed' ? 'Telah Cair' : dataLoan[key].status === \"approved\" ? \"Diterima\" : dataLoan[key].status === \"rejected\" ? \"Ditolak\" : \"Proses Pengajuan\";\n                  }\n\n                  this._isMounted && this.setState({\n                    loading: false,\n                    dataLoan: dataLoan,\n                    total_data: data.loanRequest && data.loanRequest.total_data || 0\n                  });\n                } else {\n                  this._isMounted && this.setState({\n                    errorMessage: data.error\n                  });\n                }\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.handleStartChange = function (date) {\n      _this.setState({\n        startDate: date\n      });\n    };\n\n    _this.handleEndChange = function (date) {\n      _this.setState({\n        endDate: date\n      });\n    };\n\n    _this.formatSearchingDate = function (dateData, endSearch) {\n      var startDate = dateData || new Date();\n      var startMonth = '' + (startDate.getMonth() + 1),\n          startDay = '' + startDate.getDate(),\n          startYear = startDate.getFullYear();\n      if (startMonth.length < 2) startMonth = '0' + startMonth;\n      if (startDay.length < 2) startDay = '0' + startDay;\n      var newFormatStartDate = startYear + \"-\" + startMonth + \"-\" + startDay;\n      newFormatStartDate += endSearch ? \"T23:59:59.999Z\" : \"T00:00:00.000Z\";\n      return newFormatStartDate;\n    };\n\n    _this.onBtnSearch = function () {\n      _this.setState({\n        loading: true,\n        searchModal: true,\n        searching: true,\n        checkedData: []\n      });\n\n      if (_this.state.endDate.getTime() < _this.state.startDate.getTime()) {\n        alert(\"Please input correct month range\");\n\n        _this.setState({\n          loading: false\n        });\n      } else {\n        _this.setState({\n          page: 1\n        }, function () {\n          _this.getAllData();\n        });\n      }\n    };\n\n    _this.onBtnReset = function () {\n      _this.setState({\n        loading: true,\n        searching: false,\n        page: 1\n      }, function () {\n        _this.getAllData();\n      });\n    };\n\n    _this.btnDownloadCsv = function () {\n      _this.setState({\n        loadingBtn: true\n      });\n\n      var arr = _this.state.checkedData;\n\n      if (arr.length === 0) {\n        swal(\"Info\", \"Silahkan Pilih Data yang ingin di download\", \"info\");\n\n        _this.setState({\n          loadingBtn: false\n        });\n      } else {\n        var id = [];\n\n        for (var j = 0; j < arr.length; j++) {\n          id.push(arr[j]);\n        }\n\n        var param = {\n          id: id.toString()\n        };\n\n        if (param.id === 'all') {\n          delete param.id;\n        }\n\n        if (_this.state.searching) {\n          param.start_date = _this.formatSearchingDate(_this.state.startDate);\n          param.end_date = _this.formatSearchingDate(_this.state.endDate, true);\n        }\n\n        _this.btnCSVDownload(param);\n      }\n    };\n\n    _this.btnCSVDownload = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(param) {\n        var data, dataCsv;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.setState({\n                  loading: true\n                });\n                _context2.next = 3;\n                return CSVDownloadFunction(param);\n\n              case 3:\n                data = _context2.sent;\n\n                if (data) {\n                  if (!data.error) {\n                    dataCsv = constructDataLoan(data.data) || [];\n                    this.setState({\n                      loading: false,\n                      loadingBtn: false,\n                      downloadModal: true,\n                      downloadDataCSV: dataCsv && dataCsv.data,\n                      headerCsv: dataCsv && dataCsv.header,\n                      reportNameCsv: dataCsv && dataCsv.name\n                    });\n                  } else {\n                    this.setState({\n                      loading: false,\n                      loadingBtn: false,\n                      downloadModal: false,\n                      errorMessage: data.error\n                    });\n                  }\n                }\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.onChangePage = function (current) {\n      _this.setState({\n        loading: true,\n        page: current\n      }, function () {\n        _this.getAllData();\n      });\n    };\n\n    _this.handleCheckBox = function (e) {\n      var checkedData = _this.state.checkedData;\n\n      if (e.target.checked) {\n        if (e.target.value.toString() === 'all') {\n          checkedData = ['all'];\n        } else {\n          checkedData.push(parseInt(e.target.value));\n        }\n      } else {\n        checkedData.splice(checkedData.indexOf(parseInt(e.target.value)), 1);\n      }\n\n      _this.setState({\n        checkedData: checkedData\n      });\n    };\n\n    _this.btnCancelModalDownload = function () {\n      _this.setState({\n        downloadModal: false,\n        downloadDataCSV: [],\n        searchModal: false\n      });\n\n      var checkboxes = document.querySelectorAll('input[type=checkbox]:checked');\n\n      for (var i = 0; i < checkboxes.length; i++) {\n        checkboxes[i].checked = false;\n      }\n\n      _this.setState({\n        checkedData: []\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ClassDataLoan, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      this._isMounted && this.getAllData();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (getTokenClient() && getTokenAuth()) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            padding: 0\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Modal, {\n          isOpen: this.state.downloadModal,\n          className: this.props.className,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(ModalHeader, {\n          toggle: this.toggle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }\n        }, \"Jumlah Download CSV: \", this.state.checkedData && this.state.checkedData[0] && this.state.checkedData[0] === 'all' ? this.state.total_data : this.state.checkedData.length, \" item(s)\"), /*#__PURE__*/React.createElement(ModalBody, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(CSVLink, {\n          headers: this.state.headerCsv,\n          data: this.state.downloadDataCSV,\n          filename: this.state.reportNameCsv,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }\n        }, \"Click Here to Download CSV\")), /*#__PURE__*/React.createElement(ModalFooter, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          disableElevation: true,\n          color: \"secondary\",\n          onClick: this.btnCancelModalDownload,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 96\n          }\n        }, \"Close\")))), /*#__PURE__*/React.createElement(TableComponent, {\n          id: \"id\",\n          title: 'Pinjaman - List',\n          errorMessage: this.state.errorMessage,\n          checkBoxAction: this.handleCheckBox,\n          searchDate: {\n            value: [this.state.startDate, this.state.endDate],\n            label: 'Tanggal Pengajuan',\n            function: [this.handleStartChange, this.handleEndChange],\n            button: [{\n              label: 'Cari',\n              color: '#20B889',\n              function: this.onBtnSearch\n            }, {\n              label: 'Reset',\n              color: '#EE6969',\n              function: this.onBtnReset\n            }]\n          },\n          arrayCheckBox: this.state.checkedData,\n          paging: this.state.paging,\n          loading: this.state.loading,\n          columnData: columnDataUser,\n          data: this.state.dataLoan,\n          page: this.state.page,\n          rowsPerPage: this.state.rowsPerPage,\n          totalData: this.state.total_data,\n          onChangePage: this.onChangePage,\n          button: [{\n            label: 'Download CSV',\n            color: '#20B889',\n            function: this.btnDownloadCsv\n          }],\n          permissionDetail: checkPermission('lender_loan_request_detail') ? '/pinjamanDetail/' : null,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 11\n          }\n        }));\n      } else if (getTokenAuth()) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/login\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }\n        });\n      }\n    }\n  }]);\n\n  return ClassDataLoan;\n}(React.Component);\n\nvar mapStateToProp = function mapStateToProp(state) {\n  return {\n    role: state.user.role,\n    id: state.user.id\n  };\n};\n\nexport default connect(mapStateToProp)(ClassDataLoan);","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_fe/src/components/pinjaman/pinjamanList.js"],"names":["React","swal","CSVLink","Modal","ModalHeader","ModalBody","ModalFooter","connect","Redirect","getPermintaanPinjamanFunction","CSVDownloadFunction","getTokenClient","getTokenAuth","checkPermission","TableComponent","Button","constructDataLoan","columnDataUser","id","label","type","ClassDataLoan","_isMounted","state","checkedData","dataLoan","page","paging","rowsPerPage","startDate","Date","endDate","downloadDataCSV","headerCsv","reportNameCsv","downloadModal","total_data","loading","loadingBtn","searching","errorMessage","getAllData","param","rows","start_date","formatSearchingDate","end_date","data","error","loanRequest","key","status_string","payment_status","status","disburse_status","setState","handleStartChange","date","handleEndChange","dateData","endSearch","startMonth","getMonth","startDay","getDate","startYear","getFullYear","length","newFormatStartDate","onBtnSearch","searchModal","getTime","alert","onBtnReset","btnDownloadCsv","arr","j","push","toString","btnCSVDownload","dataCsv","header","name","onChangePage","current","handleCheckBox","e","target","checked","value","parseInt","splice","indexOf","btnCancelModalDownload","checkboxes","document","querySelectorAll","i","padding","props","className","toggle","function","button","color","Component","mapStateToProp","role","user"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport swal from 'sweetalert'\r\nimport { CSVLink } from \"react-csv\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport './../../support/css/pagination.css'\r\nimport { getPermintaanPinjamanFunction, CSVDownloadFunction } from './saga';\r\nimport 'moment/locale/id'\r\nimport { getTokenClient, getTokenAuth } from '../index/token';\r\nimport {checkPermission} from '../global/globalFunction'\r\nimport './../../support/css/table.css'\r\nimport TableComponent from '../subComponent/TableComponent'\r\nimport { Button } from '@material-ui/core';\r\nimport { constructDataLoan } from './function';\r\n\r\nconst columnDataUser = [\r\n  {\r\n      id: 'id',\r\n      label: 'ID Pinjaman',\r\n  },\r\n  {\r\n      id: 'borrower_name',\r\n      label: 'Nama Nasabah',\r\n  },\r\n  {\r\n      id: 'service',\r\n      label: 'Layanan',\r\n  },\r\n  {\r\n    id: 'product',\r\n    label: 'Produk',\r\n  },\r\n  {\r\n    id: 'created_at',\r\n    label: 'Tanggal Pengajuan',\r\n    type:'datetime'\r\n  },\r\n  {\r\n    id: 'approval_date',\r\n    label: 'Tanggal Penerimaan',\r\n    type:'datetime'\r\n  },\r\n  {\r\n    id: 'disburse_date',\r\n    label: 'Tanggal Pencairan',\r\n    type:'datetime'\r\n  },\r\n  {\r\n    id: 'status_string',\r\n    label: 'Status Pinjaman',\r\n   },\r\n\r\n]\r\n\r\n\r\nclass ClassDataLoan extends React.Component {\r\n  _isMounted = false;\r\n\r\n  state = {\r\n    checkedData:[],\r\n    dataLoan: [],\r\n    page: 1,\r\n    paging:true,\r\n    rowsPerPage: 10,\r\n    startDate: new Date() ,\r\n    endDate: new Date(),\r\n    downloadDataCSV: [],\r\n    headerCsv: [],\r\n    reportNameCsv: '',\r\n    downloadModal:false,\r\n    total_data:0,\r\n    loading:true,\r\n    loadingBtn:false,\r\n    searching:false,\r\n    errorMessage:'',\r\n  };\r\n\r\n  componentDidMount(){\r\n    this._isMounted=true;\r\n    this._isMounted && this.getAllData();\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this._isMounted=false\r\n  }\r\n\r\n  getAllData = async function (){\r\n    const param ={\r\n      rows:\"10\",\r\n      page: this.state.page,\r\n    }\r\n    if(this.state.searching){\r\n      param.start_date = this.formatSearchingDate(this.state.startDate);\r\n      param.end_date = this.formatSearchingDate(this.state.endDate, true);\r\n    }\r\n\r\n\r\n    const data = await getPermintaanPinjamanFunction(param)\r\n    if(data){\r\n      if(!data.error){\r\n        \r\n        const dataLoan = (data.loanRequest && data.loanRequest.data) || [];\r\n\r\n        for(const key in dataLoan) {\r\n          dataLoan[key].status_string = \r\n          dataLoan[key].payment_status === \"failed\"  ? 'Gagal Bayar' :\r\n          dataLoan[key].payment_status === \"paid\"  ? 'Telah Bayar' :\r\n          dataLoan[key].status ===\"approved\" && dataLoan[key].disburse_status === 'confirmed' ? 'Telah Cair' :\r\n          dataLoan[key].status ===\"approved\" ? \"Diterima\" : \r\n          dataLoan[key].status===\"rejected\" ? \"Ditolak\" : \r\n          \"Proses Pengajuan\"\r\n        }\r\n        \r\n        this._isMounted && this.setState({\r\n          loading:false,\r\n          dataLoan,\r\n          total_data:(data.loanRequest && data.loanRequest.total_data) || 0,\r\n        })        \r\n      }else{\r\n        this._isMounted && this.setState({errorMessage:data.error})\r\n      }\r\n    }\r\n  }\r\n\r\n  //UNTUK TANGGAL \r\n  handleStartChange = (date)=> {\r\n    this.setState({\r\n      startDate: date\r\n    });\r\n  }\r\n\r\n  handleEndChange = (date)=> {\r\n    this.setState({\r\n      endDate: date\r\n    });\r\n  }\r\n\r\n  formatSearchingDate = (dateData, endSearch) => {\r\n    const startDate = dateData || new Date();\r\n\r\n    let startMonth =''+ (startDate.getMonth()+1),\r\n    startDay = '' + startDate.getDate(),\r\n    startYear = startDate.getFullYear();\r\n\r\n    if (startMonth.length < 2) startMonth = '0' + startMonth;\r\n    if (startDay.length < 2) startDay = '0' + startDay;\r\n\r\n    let newFormatStartDate = startYear+\"-\"+startMonth+\"-\"+startDay;\r\n    newFormatStartDate += endSearch ? \"T23:59:59.999Z\" : \"T00:00:00.000Z\"\r\n\r\n    return newFormatStartDate;\r\n  }\r\n  \r\n  onBtnSearch = ()=>{\r\n    this.setState({loading:true,searchModal:true,searching:true, checkedData:[]})\r\n    \r\n    \r\n      if(this.state.endDate.getTime() < this.state.startDate.getTime() ){\r\n        alert(\"Please input correct month range\")\r\n        this.setState({loading:false})\r\n      } else{\r\n        this.setState({page:1},()=>{\r\n            this.getAllData()\r\n        })\r\n      }\r\n  }\r\n\r\n  onBtnReset =()=>{\r\n    this.setState({loading:true,searching:false,page:1},()=>{\r\n      this.getAllData()\r\n\r\n    })\r\n\r\n  }\r\n\r\n  //BUAT DOWNLOAD CSV\r\n  btnDownloadCsv = ()=>{\r\n    this.setState({loadingBtn:true})\r\n\r\n    const arr = this.state.checkedData;\r\n  \r\n    if (arr.length===0){\r\n      swal(\"Info\",\"Silahkan Pilih Data yang ingin di download\",\"info\")\r\n      this.setState({loadingBtn:false})\r\n    }else{\r\n      var id=[];\r\n\r\n      for (var j=0;j<arr.length;j++){\r\n        id.push(arr[j])\r\n      }\r\n\r\n      const param = {\r\n        id: id.toString(),\r\n      }\r\n\r\n      if(param.id === 'all') {\r\n        delete param.id;\r\n      }\r\n\r\n      if(this.state.searching) {\r\n        param.start_date = this.formatSearchingDate(this.state.startDate);\r\n        param.end_date = this.formatSearchingDate(this.state.endDate, true);\r\n      }\r\n\r\n      this.btnCSVDownload(param)\r\n\r\n    }    \r\n  }\r\n\r\n  btnCSVDownload = async function (param){\r\n    this.setState({loading:true});\r\n\r\n    const data = await CSVDownloadFunction(param)\r\n\r\n    if(data){\r\n      \r\n      if(!data.error){\r\n        let dataCsv = constructDataLoan(data.data) || [];\r\n\r\n        this.setState({loading:false,loadingBtn:false,downloadModal:true,downloadDataCSV:dataCsv && dataCsv.data, headerCsv: dataCsv && dataCsv.header, reportNameCsv: dataCsv && dataCsv.name})\r\n      } else{\r\n        this.setState({loading:false,loadingBtn:false,downloadModal:false,errorMessage:data.error})\r\n      }\r\n    }\r\n  }\r\n\r\n  onChangePage = (current) => {\r\n    this.setState({loading:true,page:current},()=>{\r\n        this.getAllData()\r\n    })\r\n  } \r\n  \r\n  \r\n  handleCheckBox =(e)=>{\r\n    let checkedData = this.state.checkedData;\r\n    if(e.target.checked){\r\n      if(e.target.value.toString() === 'all') {\r\n        checkedData = ['all']\r\n      } else {\r\n        checkedData.push(parseInt(e.target.value))\r\n      }\r\n    }else{\r\n      checkedData.splice(checkedData.indexOf(parseInt(e.target.value)),1)\r\n    }\r\n\r\n    this.setState({checkedData});\r\n    \r\n  }\r\n\r\n  //FUNCTION BUAT MODAL\r\n  btnCancelModalDownload = ()=>{\r\n    this.setState({downloadModal:false,downloadDataCSV:[],searchModal:false})\r\n    var checkboxes = document.querySelectorAll('input[type=checkbox]:checked')\r\n    for (var i = 0; i < checkboxes.length; i++) {\r\n      checkboxes[i].checked = false;\r\n    }\r\n      this.setState({checkedData: []})\r\n  }\r\n    \r\n  render() {\r\n    if(getTokenClient() && getTokenAuth()){\r\n      \r\n      return (\r\n        <div style={{padding:0}}>\r\n\r\n          <Modal isOpen={this.state.downloadModal} className={this.props.className}>\r\n            <ModalHeader toggle={this.toggle}>Jumlah Download CSV: {this.state.checkedData && this.state.checkedData[0] && this.state.checkedData[0] === 'all' ? this.state.total_data : this.state.checkedData.length} item(s)</ModalHeader>\r\n            <ModalBody>\r\n              <CSVLink \r\n                headers={this.state.headerCsv}\r\n                data={this.state.downloadDataCSV} \r\n                filename={this.state.reportNameCsv}\r\n              > \r\n                Click Here to Download CSV \r\n              </CSVLink>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button disableElevation color=\"secondary\" onClick={this.btnCancelModalDownload}><b>Close</b></Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n\r\n       \r\n          < TableComponent\r\n            id={\"id\"}\r\n            title={'Pinjaman - List'}\r\n            errorMessage={this.state.errorMessage}\r\n            checkBoxAction={this.handleCheckBox}\r\n            searchDate={\r\n              {\r\n                value:[this.state.startDate, this.state.endDate],\r\n                label: 'Tanggal Pengajuan',\r\n                function: [this.handleStartChange, this.handleEndChange],\r\n                button: [\r\n                  {\r\n                    label:'Cari',\r\n                    color:'#20B889',\r\n                    function:this.onBtnSearch\r\n                  },\r\n                  {\r\n                    label:'Reset',\r\n                    color:'#EE6969',\r\n                    function:this.onBtnReset\r\n                  },\r\n                ]\r\n              }\r\n            }\r\n            arrayCheckBox={this.state.checkedData}\r\n            paging={this.state.paging}\r\n            loading={this.state.loading}\r\n            columnData={columnDataUser}\r\n            data={this.state.dataLoan}\r\n            page={this.state.page}\r\n            rowsPerPage={this.state.rowsPerPage}\r\n            totalData={this.state.total_data}\r\n            onChangePage={this.onChangePage}     \r\n            button={\r\n              [\r\n                {\r\n                  label:'Download CSV',\r\n                  color: '#20B889',\r\n                  function:this.btnDownloadCsv\r\n                },\r\n              ]\r\n            }        \r\n            permissionDetail={ checkPermission('lender_loan_request_detail') ? '/pinjamanDetail/' : null}\r\n          /> \r\n        \r\n        </div>\r\n      );\r\n    } else if (getTokenAuth()){\r\n      return  <Redirect to='/login' />\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProp = (state)=>{\r\n  return{\r\n      role: state.user.role,\r\n      id: state.user.id\r\n  }\r\n}\r\nexport default connect (mapStateToProp)(ClassDataLoan) ;\r\n"]},"metadata":{},"sourceType":"module"}