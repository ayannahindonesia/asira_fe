{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\src\\\\components\\\\pencairan\\\\pencairanDetail.js\";\nimport React from 'react';\nimport Cookies from 'universal-cookie';\nimport { Redirect } from 'react-router-dom'; // import CheckBox from '../subComponent/CheckBox';\n\nimport Loader from 'react-loader-spinner';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { withStyles } from '@material-ui/styles';\nimport { compose } from 'redux';\nimport { listAllRolePermission } from '../global/globalConstant';\nimport { getRoleFunction, getRolePermissionFunction } from '../pinjaman/saga';\n\nconst styles = theme => ({\n  container: {\n    flexGrow: 1\n  }\n});\n\nconst cookie = new Cookies();\n\nclass rolePermissionDetail extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this._isMounted = false;\n    this.state = {\n      diKlik: false,\n      errorMessage: '',\n      listAllRolePermission,\n      listRolePermission: [],\n      listRole: {},\n      role: {},\n      roleId: 0,\n      disabled: true,\n      loading: true\n    };\n\n    this.refresh = async function () {\n      const param = {};\n      param.roleId = this.state.roleId;\n      param.listAllRolePermission = this.state.listAllRolePermission;\n      const data = await getRoleFunction(param, getRolePermissionFunction);\n\n      if (data) {\n        if (!data.error) {\n          this.setState({\n            listRole: data.dataRole,\n            listRolePermission: data.dataRolePermission,\n            loading: false\n          });\n        } else {\n          this.setState({\n            errorMessage: data.error,\n            disabled: true,\n            loading: false\n          });\n        }\n      }\n    };\n\n    this.btnCancel = () => {\n      this.setState({\n        diKlik: true\n      });\n    };\n\n    this.checkingRole = (role, idRolePermission) => {\n      for (const key in role) {\n        if (role[key].id.toString().trim() === idRolePermission.toString().trim()) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.setState({\n      roleId: this.props.match.params.id\n    }, () => {\n      this.refresh();\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      errorMessage: newProps.error\n    });\n  }\n\n  render() {\n    if (this.state.diKlik) {\n      return React.createElement(Redirect, {\n        to: \"/listRolePermission\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      });\n    } else if (this.state.loading) {\n      return React.createElement(\"div\", {\n        key: \"zz\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        align: \"center\",\n        colSpan: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        type: \"Circles\",\n        color: \"#00BFFF\",\n        height: \"40\",\n        width: \"40\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })));\n    } else if (cookie.get('token')) {\n      return React.createElement(\"div\", {\n        className: \"container mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Role Permission - Detail\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        style: {\n          lineHeight: 3.5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Role Name\"), React.createElement(\"label\", {\n        className: \"col-sm-4 col-form-label\",\n        style: {\n          lineHeight: 3.5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, this.state.listRole && this.state.listRole.name)), React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12\",\n        style: {\n          color: \"red\",\n          fontSize: \"15px\",\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, this.state.errorMessage), React.createElement(\"div\", {\n        className: \"col-12\",\n        style: {\n          color: \"black\",\n          fontSize: \"15px\",\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-12 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Batal\",\n        className: \"btn\",\n        onClick: this.btnCancel,\n        style: {\n          backgroundColor: \"grey\",\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })))));\n    } else if (!cookie.get('token')) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport function mapDispatchToProps(dispatch) {\n  return {//   getSourceTransaction: () => {\n    //     dispatch(sourceTransactionRequest());\n    //   },\n    //   handleRedirect: (route) => {\n    //     dispatch(push(route));\n    //   },\n  };\n}\nexport const mapStateToProps = createStructuredSelector({// user: getUserState(),\n  // menu: getMenu(),\n  // fetching: getFetchStatus(),\n});\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withStyle = withStyles(styles);\nexport default compose(withConnect, withStyle, withRouter)(rolePermissionDetail);","map":{"version":3,"sources":["C:\\Users\\pc\\Desktop\\asira_fe\\src\\components\\pencairan\\pencairanDetail.js"],"names":["React","Cookies","Redirect","Loader","createStructuredSelector","connect","withRouter","withStyles","compose","listAllRolePermission","getRoleFunction","getRolePermissionFunction","styles","theme","container","flexGrow","cookie","rolePermissionDetail","Component","_isMounted","state","diKlik","errorMessage","listRolePermission","listRole","role","roleId","disabled","loading","refresh","param","data","error","setState","dataRole","dataRolePermission","btnCancel","checkingRole","idRolePermission","key","id","toString","trim","componentDidMount","props","match","params","componentWillUnmount","componentWillReceiveProps","newProps","render","get","lineHeight","name","color","fontSize","textAlign","backgroundColor","mapDispatchToProps","dispatch","mapStateToProps","withConnect","withStyle"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Cookies from 'universal-cookie';\r\nimport { Redirect } from 'react-router-dom'\r\n// import CheckBox from '../subComponent/CheckBox';\r\nimport Loader from 'react-loader-spinner'\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { compose } from 'redux';\r\nimport { listAllRolePermission } from '../global/globalConstant'\r\nimport {getRoleFunction, getRolePermissionFunction} from '../pinjaman/saga'\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n      flexGrow: 1,\r\n    },\r\n  });\r\n\r\nconst cookie = new Cookies();\r\n\r\nclass rolePermissionDetail extends React.Component{\r\n    _isMounted = false;\r\n    \r\n    state = {\r\n      diKlik:false,\r\n      errorMessage:'',\r\n      listAllRolePermission,\r\n      listRolePermission: [],\r\n      listRole: {},\r\n      role : {},\r\n      roleId: 0,\r\n      disabled: true,\r\n      loading: true,\r\n    };\r\n\r\n    componentDidMount(){\r\n      this._isMounted = true;\r\n      this.setState({\r\n        roleId: this.props.match.params.id,\r\n      },() => {\r\n        this.refresh();\r\n      })\r\n      \r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this._isMounted = false;\r\n    }\r\n\r\n    refresh = async function(){\r\n      const param = {};\r\n      param.roleId = this.state.roleId;\r\n      param.listAllRolePermission = this.state.listAllRolePermission;\r\n\r\n      const data = await getRoleFunction(param, getRolePermissionFunction);\r\n\r\n      if(data) {\r\n          if(!data.error) {\r\n            this.setState({\r\n              listRole: data.dataRole,\r\n              listRolePermission: data.dataRolePermission,\r\n              loading: false,\r\n            })\r\n          } else {\r\n            this.setState({\r\n              errorMessage: data.error,\r\n              disabled: true,\r\n              loading: false,\r\n            })\r\n          }      \r\n      }\r\n    }\r\n\r\n    btnCancel = ()=>{\r\n      this.setState({diKlik:true})\r\n    }\r\n    componentWillReceiveProps(newProps){\r\n      this.setState({errorMessage:newProps.error})\r\n    }\r\n\r\n    checkingRole = (role, idRolePermission) => {\r\n        for (const key in role) {\r\n          if (\r\n            role[key].id.toString().trim() ===\r\n            idRolePermission.toString().trim()\r\n          ) {\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    render(){\r\n        if(this.state.diKlik){\r\n            return <Redirect to='/listRolePermission'/>            \r\n        } else if (this.state.loading){\r\n          return  (\r\n            <div  key=\"zz\">\r\n              <div align=\"center\" colSpan={6}>\r\n                <Loader \r\n                  type=\"Circles\"\r\n                  color=\"#00BFFF\"\r\n                  height=\"40\"\t\r\n                  width=\"40\"\r\n                />   \r\n              </div>\r\n            </div>\r\n          )\r\n        } else if(cookie.get('token')){\r\n            return(\r\n                <div className=\"container mt-4\">\r\n                 <h3>Role Permission - Detail</h3>\r\n                 \r\n                 <hr/>\r\n                 \r\n                 <form>\r\n                    <div className=\"form-group row\">                   \r\n                      <label className=\"col-sm-2 col-form-label\" style={{lineHeight:3.5}}>\r\n                        Role Name\r\n                      </label>\r\n                      <label className=\"col-sm-4 col-form-label\" style={{lineHeight:3.5}}>\r\n                        {this.state.listRole && this.state.listRole.name}\r\n                      </label>               \r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col-12\" style={{color:\"red\",fontSize:\"15px\",textAlign:'left'}}>\r\n                            {this.state.errorMessage}\r\n                        </div>     \r\n                        <div className=\"col-12\" style={{color:\"black\",fontSize:\"15px\",textAlign:'left'}}>\r\n                          {/* <CheckBox\r\n                            label=\"Core - Permission Setup\"\r\n                            modulesName=\"Menu\"\r\n                            data={this.state.listAllRolePermission}\r\n                            id=\"id\"\r\n                            labelName=\"label\"\r\n                            modules=\"menu\"      \r\n                            labelPlacement= \"top\"            \r\n                            onChecked={(id) => this.checkingRole(this.state.listRolePermission, id)}\r\n                            style={{ width: '97%'}}\r\n                            disabled={this.state.disabled}\r\n                          /> */}\r\n                        </div>           \r\n                    </div>\r\n                    \r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col-sm-12 mt-3\">\r\n                          <input type=\"button\" value=\"Batal\" className=\"btn\" onClick={this.btnCancel} style={{backgroundColor:\"grey\",color:\"white\"}}/>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                 </form>\r\n                \r\n                </div>\r\n            )\r\n        } else if(!cookie.get('token')){\r\n          return (\r\n              <Redirect to='/login' />\r\n          )    \r\n        }\r\n       \r\n    }\r\n}\r\n\r\nexport function mapDispatchToProps(dispatch) {\r\n    return {\r\n    //   getSourceTransaction: () => {\r\n    //     dispatch(sourceTransactionRequest());\r\n    //   },\r\n    //   handleRedirect: (route) => {\r\n    //     dispatch(push(route));\r\n    //   },\r\n    };\r\n}\r\n  \r\nexport const mapStateToProps = createStructuredSelector({\r\n  // user: getUserState(),\r\n  // menu: getMenu(),\r\n  // fetching: getFetchStatus(),\r\n});\r\n\r\nconst withConnect = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n);\r\n\r\nconst withStyle = withStyles(styles);\r\n\r\nexport default compose(\r\n    withConnect,\r\n    withStyle,\r\n    withRouter\r\n  )(rolePermissionDetail);"]},"metadata":{},"sourceType":"module"}