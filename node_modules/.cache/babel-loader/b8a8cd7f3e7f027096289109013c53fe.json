{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\src\\\\components\\\\subComponent\\\\SubTable.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport SearchBar from './SearchBar';\nimport { handleFormatDate } from '../global/globalFunction';\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n} // const rows = [\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\n//   createData('Donut', 452, 25.0, 51, 4.9),\n//   createData('Eclair', 262, 16.0, 24, 6.0),\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\n//   createData('Honeycomb', 408, 3.2, 87, 6.5),\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n//   createData('Jelly Bean', 375, 0.0, 94, 0.0),\n//   createData('KitKat', 518, 26.0, 65, 7.0),\n//   createData('Lollipop', 392, 0.2, 98, 0.0),\n//   createData('Marshmallow', 318, 0, 81, 2.0),\n//   createData('Nougat', 360, 19.0, 9, 37.0),\n//   createData('Oreo', 437, 18.0, 63, 4.0),\n// ];\n\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  console.log(stabilizedThis);\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nfunction EnhancedTableHead(props) {\n  const classes = props.classes,\n        onSelectAllClick = props.onSelectAllClick,\n        order = props.order,\n        orderBy = props.orderBy,\n        numSelected = props.numSelected,\n        rowCount = props.rowCount,\n        onRequestSort = props.onRequestSort,\n        dataHead = props.dataHead;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, propsTable.checkBoxAction && React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), dataHead.map(headCell => React.createElement(TableCell, {\n    key: headCell.id,\n    align: 'left',\n    padding: 'default',\n    sortDirection: orderBy === headCell.id ? order : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(TableSortLabel, {\n    active: orderBy === headCell.id,\n    direction: order,\n    onClick: createSortHandler(headCell.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, headCell.label, orderBy === headCell.id ? React.createElement(\"span\", {\n    className: classes.visuallyHidden,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, order === 'desc' ? 'sorted descending' : 'sorted ascending') : null)))));\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  title: {\n    flex: '1 1 100%'\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const numSelected = props.numSelected,\n        search = props.search,\n        changeSearch = props.changeSearch;\n  return React.createElement(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, numSelected > 0 ? React.createElement(Typography, {\n    className: classes.title,\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, numSelected, \" selected\") : React.createElement(Typography, {\n    style: {\n      textAlign: 'right'\n    },\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(SearchBar, {\n    id: \"search\",\n    value: search,\n    placeholder: \"Search ID Nasabah, Nama Nasabah...\",\n    onChange: changeSearch,\n    style: {\n      textAlign: 'right'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  })), numSelected > 0 ? React.createElement(Tooltip, {\n    title: \"Delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }))) : null);\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}));\nexport default function EnhancedTable(propsTable) {\n  // console.log(propsTable)\n  const classes = useStyles();\n\n  const _React$useState = React.useState(propsTable.data),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        rows = _React$useState2[0],\n        setRows = _React$useState2[1];\n\n  const _React$useState3 = React.useState('asc'),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        order = _React$useState4[0],\n        setOrder = _React$useState4[1];\n\n  const _React$useState5 = React.useState('updated_time'),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        orderBy = _React$useState6[0],\n        setOrderBy = _React$useState6[1];\n\n  const _React$useState7 = React.useState([]),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        selected = _React$useState8[0],\n        setSelected = _React$useState8[1];\n\n  const _React$useState9 = React.useState(propsTable.page - 1),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        page = _React$useState10[0],\n        setPage = _React$useState10[1];\n\n  const _React$useState11 = React.useState(false),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        dense = _React$useState12[0],\n        setDense = _React$useState12[1];\n\n  const _React$useState13 = React.useState(propsTable.rowsPerPage),\n        _React$useState14 = _slicedToArray(_React$useState13, 1),\n        rowsPerPage = _React$useState14[0];\n\n  const _React$useState15 = React.useState(),\n        _React$useState16 = _slicedToArray(_React$useState15, 2),\n        updateState = _React$useState16[1];\n\n  const forceUpdate = React.useCallback(() => updateState({}), []); // console.log(propsTable.data)\n  // console.log(propsTable.rowsPerPage)\n\n  useEffect(() => {\n    function handlechangeRows(data) {\n      console.log(data);\n      setRows(data);\n    }\n\n    handlechangeRows(propsTable.data); // Specify how to clean up after this effect:\n\n    return function cleanup() {// handlechangeRows(propsTable.data);\n      // /ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n      // forceUpdate()\n    };\n  });\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.data.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    forceUpdate();\n    propsTable.onChangePage(newPage + 1);\n    setPage(newPage);\n  }; // const handleChangeRowsPerPage = event => {\n  //   setRowsPerPage(parseInt(event.target.value, 10));\n  //   setPage(0);\n  // };\n\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1; // const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n\n  console.log(rows);\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, React.createElement(EnhancedTableToolbar, {\n    numSelected: selected.length,\n    search: propsTable.search,\n    changeSearch: propsTable.onChangeSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }), React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: dense ? 'small' : 'medium',\n    \"aria-label\": \"enhanced table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }, React.createElement(EnhancedTableHead, {\n    classes: classes,\n    numSelected: selected.length,\n    dataHead: propsTable.columnData,\n    order: order,\n    orderBy: orderBy,\n    onSelectAllClick: handleSelectAllClick,\n    onRequestSort: handleRequestSort,\n    rowCount: rows.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, stableSort(rows, getSorting(order, orderBy)).slice(0, rowsPerPage).map((row, index) => {\n    console.log(row.id);\n    const isItemSelected = isSelected(row.id);\n    const labelId = \"enhanced-table-checkbox-\".concat(index);\n    return React.createElement(TableRow, {\n      hover: true,\n      onClick: event => handleClick(event, row.id),\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: row.id,\n      selected: isItemSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, propsTable.checkBoxAction && React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: isItemSelected,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    })), propsTable.columnData && propsTable.columnData.map(dataPerRow => {\n      return React.createElement(TableCell, {\n        align: \"left\",\n        key: \"\".concat(index, \"-\").concat(dataPerRow.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, dataPerRow.type && dataPerRow.type === 'datetime' ? handleFormatDate(row[dataPerRow.id]) : row[dataPerRow.id]);\n    }));\n  }))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [rowsPerPage],\n    component: \"div\",\n    count: propsTable.totalDataLength,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    labelDisplayedRows: () => \"\".concat(page * rowsPerPage + 1, \"-\").concat(page * rowsPerPage + rowsPerPage > propsTable.totalDataLength ? propsTable.totalDataLength : page * rowsPerPage + rowsPerPage, \" of \").concat(propsTable.totalDataLength, \" items\"),\n    backIconButtonProps: {\n      'aria-label': 'Previous Page',\n      disabled: page * rowsPerPage + 1 === 1 ? true : false\n    },\n    nextIconButtonProps: {\n      'aria-label': 'Next Page',\n      disabled: page * rowsPerPage + rowsPerPage >= propsTable.totalDataLength ? true : false\n    },\n    onChangePage: handleChangePage // onChangeRowsPerPage={handleChangeRowsPerPage}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375\n    },\n    __self: this\n  })), React.createElement(FormControlLabel, {\n    control: React.createElement(Switch, {\n      checked: dense,\n      onChange: handleChangeDense,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }),\n    label: \"Dense padding\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:\\Users\\pc\\Desktop\\asira_fe\\src\\components\\subComponent\\SubTable.js"],"names":["React","useEffect","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","FormControlLabel","Switch","DeleteIcon","FilterListIcon","SearchBar","handleFormatDate","createData","name","calories","fat","carbs","protein","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","console","log","getSorting","EnhancedTableHead","props","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","dataHead","createSortHandler","property","event","propsTable","checkBoxAction","headCell","id","label","visuallyHidden","propTypes","object","isRequired","number","func","oneOf","string","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","title","flex","EnhancedTableToolbar","search","changeSearch","textAlign","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","padding","position","top","EnhancedTable","useState","data","rows","setRows","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","updateState","forceUpdate","useCallback","handlechangeRows","cleanup","handleRequestSort","isDesc","handleSelectAllClick","target","checked","newSelecteds","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","onChangePage","handleChangeDense","isSelected","onChangeSearch","columnData","row","isItemSelected","labelId","dataPerRow","totalDataLength","disabled"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport SearchBar from './SearchBar';\nimport { handleFormatDate } from '../global/globalFunction';\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\n// const rows = [\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\n//   createData('Donut', 452, 25.0, 51, 4.9),\n//   createData('Eclair', 262, 16.0, 24, 6.0),\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\n//   createData('Honeycomb', 408, 3.2, 87, 6.5),\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n//   createData('Jelly Bean', 375, 0.0, 94, 0.0),\n//   createData('KitKat', 518, 26.0, 65, 7.0),\n//   createData('Lollipop', 392, 0.2, 98, 0.0),\n//   createData('Marshmallow', 318, 0, 81, 2.0),\n//   createData('Nougat', 360, 19.0, 9, 37.0),\n//   createData('Oreo', 437, 18.0, 63, 4.0),\n// ];\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  console.log(stabilizedThis);\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, dataHead } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {\n          propsTable.checkBoxAction &&\n          <TableCell padding=\"checkbox\">\n          </TableCell>\n        }\n        {dataHead.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={'left'}\n            padding={'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={order}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected, search, changeSearch } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography style={{textAlign:'right'}} color=\"inherit\" variant=\"subtitle1\">\n          <SearchBar\n            id=\"search\"\n            value={search}\n            placeholder=\"Search ID Nasabah, Nama Nasabah...\"\n            onChange={changeSearch} \n            style={{textAlign:'right'}}\n          />\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : null}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable(propsTable) {\n\n  // console.log(propsTable)\n\n  const classes = useStyles();\n  const [rows, setRows] = React.useState(propsTable.data);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('updated_time');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState((propsTable.page-1));\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage,] = React.useState(propsTable.rowsPerPage);\n  const [, updateState] = React.useState();\n  const forceUpdate = React.useCallback(() => updateState({}), []);\n\n  // console.log(propsTable.data)\n  // console.log(propsTable.rowsPerPage)\n\n  useEffect(() => {\n    function handlechangeRows(data) {\n      console.log(data)\n      setRows(data);\n    }\n    handlechangeRows(propsTable.data);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      // handlechangeRows(propsTable.data);\n      // /ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n      // forceUpdate()\n    };\n  })\n\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.data.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    forceUpdate();\n    propsTable.onChangePage(newPage+1);\n    \n    setPage(newPage);\n    \n  };\n\n  // const handleChangeRowsPerPage = event => {\n  //   setRowsPerPage(parseInt(event.target.value, 10));\n  //   setPage(0);\n  // };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  console.log(rows)\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} search={propsTable.search} changeSearch={propsTable.onChangeSearch} />\n\n        <Table\n          className={classes.table}\n          aria-labelledby=\"tableTitle\"\n          size={dense ? 'small' : 'medium'}\n          aria-label=\"enhanced table\"\n        >\n          <EnhancedTableHead\n            classes={classes}\n            numSelected={selected.length}\n            dataHead={propsTable.columnData}\n            order={order}\n            orderBy={orderBy}\n            onSelectAllClick={handleSelectAllClick}\n            onRequestSort={handleRequestSort}\n            rowCount={rows.length}\n          />\n          <TableBody>\n            {stableSort(rows, getSorting(order, orderBy))\n              .slice(0, rowsPerPage)\n              .map((row, index) => {\n                console.log(row.id)\n                const isItemSelected = isSelected(row.id);\n                const labelId = `enhanced-table-checkbox-${index}`;\n\n                return (\n                  <TableRow\n                    hover\n                    onClick={event => handleClick(event, row.id)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.id}\n                    selected={isItemSelected}\n                  >\n                    {\n                      propsTable.checkBoxAction &&\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                    }\n                    \n                    {\n                      propsTable.columnData && propsTable.columnData.map((dataPerRow) => {\n                        return (\n                          <TableCell align=\"left\" key={`${index}-${dataPerRow.id}`}>\n                            {\n                              dataPerRow.type && dataPerRow.type === 'datetime' ? handleFormatDate(row[dataPerRow.id]) : row[dataPerRow.id] \n                            }\n                          </TableCell>\n                        );\n                      })\n                    }\n                    {/* <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                      {row.name}\n                    </TableCell>\n                    <TableCell align=\"center\">{row.calories}</TableCell>\n                    <TableCell align=\"right\">{row.fat}</TableCell>\n                    <TableCell align=\"right\">{row.carbs}</TableCell>\n                    <TableCell align=\"right\">{row.protein}</TableCell> */}\n                  </TableRow>\n                );\n              })}\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        </Table>\n\n        <TablePagination\n          rowsPerPageOptions={[rowsPerPage]}\n          component=\"div\"\n          count={propsTable.totalDataLength}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          labelDisplayedRows={() => `${(page * rowsPerPage) + 1}-${(page * rowsPerPage) + rowsPerPage > propsTable.totalDataLength ? propsTable.totalDataLength : (page * rowsPerPage) + rowsPerPage } of ${propsTable.totalDataLength} items`}\n          backIconButtonProps={{\n            'aria-label': 'Previous Page',\n            disabled:((page * rowsPerPage) + 1 === 1 ) ? true : false,\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'Next Page',\n            disabled:((page * rowsPerPage) + rowsPerPage >= propsTable.totalDataLength) ? true : false,\n          }}\n          onChangePage={handleChangePage}\n          // onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}