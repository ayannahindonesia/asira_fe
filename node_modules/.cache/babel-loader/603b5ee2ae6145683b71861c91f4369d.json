{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\src\\\\components\\\\calonNasabah\\\\calonNasabahDetail.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Loader from 'react-loader-spinner';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { withStyles } from '@material-ui/styles';\nimport { compose } from 'redux';\nimport { getBorrowerFunction, getImageFunction } from './saga';\nimport { getTokenClient } from '../index/token';\nimport GridDetail from '../subComponent/GridDetail';\nimport { formatNumber, handleFormatDate } from '../global/globalFunction';\nimport DialogComponent from './../subComponent/DialogComponent';\nimport { TextField } from '@material-ui/core';\n\nconst styles = theme => ({\n  container: {\n    flexGrow: 1\n  }\n});\n\nclass CalonNasabahDetail extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this._isMounted = false;\n    this.state = {\n      diKlik: false,\n      errorMessage: '',\n      dataUser: {},\n      calonNasabahId: 0,\n      disabled: true,\n      loading: true,\n      dialog: false,\n      title: '',\n      message: '',\n      rekening: ''\n    };\n\n    this.isCategoryExist = category => {\n      if (category && category.toString().toLowerCase() === 'agent') {\n        return 'Agen';\n      } else if (category && category.toString().toLowerCase() === 'acount_executive') {\n        return 'Account Executive';\n      }\n\n      return 'Personal';\n    };\n\n    this.refresh = async function () {\n      const param = {};\n      param.calonNasabahId = this.state.calonNasabahId;\n      const data = await getBorrowerFunction(param);\n\n      if (data) {\n        if (!data.error) {\n          console.log(data);\n          const dataUser = data.dataUser || {};\n          dataUser.category = this.isCategoryExist(dataUser.category);\n          this.setState({\n            dataUser,\n            listRole: data.dataRole,\n            loading: false\n          });\n        } else {\n          this.setState({\n            errorMessage: data.error,\n            loading: false\n          });\n        }\n      }\n    };\n\n    this.btnCancel = () => {\n      this.setState({\n        diKlik: true\n      });\n    };\n\n    this.handleDialog = e => {\n      let label = e.target.value;\n      let title = '';\n\n      if (label.toLowerCase().includes('ktp')) {\n        title = 'KTP';\n      } else if (label.toLowerCase().includes('npwp')) {\n        title = 'NPWP';\n      }\n\n      this.setState({\n        title\n      }, () => {\n        this.getImage(this.state.title);\n      });\n    };\n\n    this.getImage = async function (title) {\n      let data = {\n        idImage: 0\n      };\n\n      if (title.toLowerCase().includes('ktp')) {\n        data.idImage = this.state.dataUser && this.state.dataUser.idcard_imageid;\n      } else if (title.toLowerCase().includes('npwp')) {\n        data.idImage = this.state.dataUser && this.state.dataUser.taxid_imageid;\n      }\n\n      data = await getImageFunction(data);\n\n      if (data) {\n        if (!data.error) {\n          let message = data.dataImage && data.dataImage.image_string;\n          this.setState({\n            dialog: true,\n            message\n          });\n        } else {\n          this.setState({\n            errorMessage: data.error,\n            loading: false\n          });\n        }\n      }\n    };\n\n    this.onChangeTextField = e => {\n      let value = e.target.value;\n      let labelName = e.target.id;\n      let flag = true;\n\n      if (value.includes(' ') || value.includes('\\'') || value.includes('\"') || value.includes(',')) {\n        flag = false;\n      }\n\n      if (labelName === 'rekening' && isNaN(value)) {\n        flag = false;\n      }\n\n      if (flag) {\n        this.setState({\n          [labelName]: value\n        });\n      }\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        dialog: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.setState({\n      calonNasabahId: this.props.match.params.id\n    }, () => {\n      this.refresh();\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      errorMessage: newProps.error\n    });\n  }\n\n  render() {\n    if (this.state.diKlik) {\n      return React.createElement(Redirect, {\n        to: \"/listCalonNasabah\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      });\n    } else if (this.state.loading) {\n      return React.createElement(\"div\", {\n        key: \"zz\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        align: \"center\",\n        colSpan: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        type: \"Circles\",\n        color: \"#00BFFF\",\n        height: \"40\",\n        width: \"40\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      })));\n    } else if (getTokenClient()) {\n      return React.createElement(\"div\", {\n        className: \"container mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Calon Nasabah - Detail\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-12\",\n        style: {\n          color: \"red\",\n          fontSize: \"15px\",\n          textAlign: 'left',\n          marginBottom: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, this.state.errorMessage), React.createElement(\"div\", {\n        className: \"col-sm-12\",\n        style: {\n          marginBottom: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"button\",\n        value: \"KTP Detail\",\n        className: \"btn\",\n        onClick: this.handleDialog,\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          marginRight: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"button\",\n        value: \"NPWP Detail\",\n        className: \"btn\",\n        onClick: this.handleDialog,\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      })), React.createElement(GridDetail, {\n        gridLabel: [4, 3, 5],\n        background: true,\n        label: [['Id Nasabah', 'Bank Nasabah'], ['Kategori', 'Agen / AE'], ['Tanggal Register']],\n        data: this.state.dataUser && [[this.state.dataUser.id, this.state.dataUser.bank_name], [this.state.dataUser.category, this.state.dataUser.agent_name && \"\".concat(this.state.dataUser.agent_name, \" \") + (this.state.dataUser.agent_provider_name && this.state.dataUser.agent_provider_name.trim().length !== 0 ? \"(\".concat(this.state.dataUser.agent_provider_name, \")\") : '')], [this.state.dataUser.created_time && handleFormatDate(this.state.dataUser.created_time)]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(GridDetail, {\n        title: \"Informasi Pribadi\",\n        gridLabel: [4, 5, 7],\n        label: [['Nama', 'Jenis Kelamin', 'No KTP', 'No NPWP', 'Email'], ['Tanggal Lahir', 'Tempat Lahir', 'Pendidikan', 'Nama Ibu Kandung', 'No HP'], ['Status Pernikahan', 'Nama Pasangan', 'Tanggal Lahir Pasangan', 'Pendidikan Pasangan', 'Tanggungan (orang)']],\n        data: this.state.dataUser && [[this.state.dataUser.fullname, this.state.dataUser.gender && (this.state.dataUser.gender === 'M' ? 'Pria' : 'Perempuan'), this.state.dataUser.idcard_number, this.state.dataUser.taxid_number, this.state.dataUser.email], [this.state.dataUser.birthday && handleFormatDate(this.state.dataUser.birthday), this.state.dataUser.birthplace, this.state.dataUser.last_education, this.state.dataUser.mother_name, this.state.dataUser.phone], [this.state.dataUser.marriage_status && this.state.dataUser.marriage_status === 'married' ? 'Menikah' : 'Belum Menikah', this.state.dataUser.marriage_status && this.state.dataUser.marriage_status === 'married' ? this.state.dataUser.spouse_name : '-', this.state.dataUser.marriage_status && this.state.dataUser.marriage_status === 'married' ? this.state.dataUser.spouse_birthday && handleFormatDate(this.state.dataUser.spouse_birthday) || '-' : '-', this.state.dataUser.marriage_status && this.state.dataUser.marriage_status === 'married' ? this.state.dataUser.spouse_lasteducation : '-', this.state.dataUser.dependants]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), React.createElement(GridDetail, {\n        title: \"Data Tempat Tinggal\",\n        gridLabel: [4, 5, 7],\n        label: [['Alamat', 'Provinsi', 'Kota', 'RT / RW', 'No Telp Rumah'], ['Kecamatan', 'Kelurahan', 'Status Tempat Tinggal', 'Lama Menempati Rumah'], []],\n        data: this.state.dataUser && [[this.state.dataUser.address, this.state.dataUser.province, this.state.dataUser.city, \"\".concat(this.state.dataUser.neighbour_association, \" / \").concat(this.state.dataUser.hamlets, \" \"), this.state.dataUser.home_phonenumber], [this.state.dataUser.subdistrict, this.state.dataUser.urban_village, this.state.dataUser.home_ownership, this.state.dataUser.lived_for && \"\".concat(this.state.dataUser.lived_for, \" tahun\")], []],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), React.createElement(GridDetail, {\n        title: \"Info Pekerjaan\",\n        gridLabel: [4, 5, 7],\n        label: [['Jenis Pekerjaan', 'No Induk Pegawai', 'Nama Instansi', 'Alamat Kantor'], ['Jabatan', 'Lama Bekerja', 'Nama Atasan', 'No Tlp Kantor'], ['Gaji (perbulan)', 'Pendapatan Lain', 'Sumber Pendapatan Lain']],\n        data: this.state.dataUser && [[this.state.dataUser.field_of_work, this.state.dataUser.employee_id, this.state.dataUser.employer_name, this.state.dataUser.employer_address], [this.state.dataUser.occupation, this.state.dataUser.been_workingfor && \"\".concat(this.state.dataUser.been_workingfor, \" tahun\"), this.state.dataUser.direct_superiorname, this.state.dataUser.employer_number], [this.state.dataUser.monthly_income && \"Rp \".concat(formatNumber(this.state.dataUser.monthly_income, true)), this.state.dataUser.other_income && \"Rp \".concat(formatNumber(this.state.dataUser.other_income, true)), this.state.dataUser.other_incomesource]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }), React.createElement(GridDetail, {\n        title: \"Lain lain\",\n        gridLabel: [7],\n        label: [['Nama Orang Tidak Serumah Yang Bisa Dihubungi', 'Hubungan', 'Alamat Rumah', 'No Tlp', 'No HP'], []],\n        data: this.state.dataUser && [[this.state.dataUser.related_personname, this.state.dataUser.related_relation, this.state.dataUser.related_address, this.state.dataUser.related_homenumber, this.state.dataUser.related_phonenumber], []],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container mt-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-3 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, \"Nomor Rekening\"), React.createElement(\"label\", {\n        className: \"col-sm-1 col-form-label\",\n        style: {\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, \":\"), React.createElement(\"div\", {\n        className: \"col-sm-4 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"rekening\",\n        onChange: this.onChangeTextField,\n        value: this.state.rekening,\n        hiddenLabel: true,\n        fullWidth: true,\n        placeholder: \"Telepon\",\n        style: {\n          border: '1px groove',\n          paddingLeft: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col-sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(DialogComponent, {\n        title: this.state.title,\n        openDialog: this.state.dialog,\n        message: this.state.message,\n        type: \"image\",\n        base64Boolean: true,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Kembali\",\n        className: \"btn\",\n        onClick: this.btnCancel,\n        style: {\n          backgroundColor: \"grey\",\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      })));\n    } else if (!getTokenClient()) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport function mapDispatchToProps(dispatch) {\n  return {//   getSourceTransaction: () => {\n    //     dispatch(sourceTransactionRequest());\n    //   },\n    //   handleRedirect: (route) => {\n    //     dispatch(push(route));\n    //   },\n  };\n}\nexport const mapStateToProps = createStructuredSelector({// user: getUserState(),\n  // menu: getMenu(),\n  // fetching: getFetchStatus(),\n});\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withStyle = withStyles(styles);\nexport default compose(withConnect, withStyle, withRouter)(CalonNasabahDetail);","map":{"version":3,"sources":["C:\\Users\\pc\\Desktop\\asira_fe\\src\\components\\calonNasabah\\calonNasabahDetail.js"],"names":["React","Redirect","Loader","createStructuredSelector","connect","withRouter","withStyles","compose","getBorrowerFunction","getImageFunction","getTokenClient","GridDetail","formatNumber","handleFormatDate","DialogComponent","TextField","styles","theme","container","flexGrow","CalonNasabahDetail","Component","_isMounted","state","diKlik","errorMessage","dataUser","calonNasabahId","disabled","loading","dialog","title","message","rekening","isCategoryExist","category","toString","toLowerCase","refresh","param","data","error","console","log","setState","listRole","dataRole","btnCancel","handleDialog","e","label","target","value","includes","getImage","idImage","idcard_imageid","taxid_imageid","dataImage","image_string","onChangeTextField","labelName","id","flag","isNaN","handleClose","componentDidMount","props","match","params","componentWillUnmount","componentWillReceiveProps","newProps","render","color","fontSize","textAlign","marginBottom","backgroundColor","marginRight","bank_name","agent_name","agent_provider_name","trim","length","created_time","fullname","gender","idcard_number","taxid_number","email","birthday","birthplace","last_education","mother_name","phone","marriage_status","spouse_name","spouse_birthday","spouse_lasteducation","dependants","address","province","city","neighbour_association","hamlets","home_phonenumber","subdistrict","urban_village","home_ownership","lived_for","field_of_work","employee_id","employer_name","employer_address","occupation","been_workingfor","direct_superiorname","employer_number","monthly_income","other_income","other_incomesource","related_personname","related_relation","related_address","related_homenumber","related_phonenumber","border","paddingLeft","mapDispatchToProps","dispatch","mapStateToProps","withConnect","withStyle"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Loader from 'react-loader-spinner'\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { compose } from 'redux';\r\nimport { getBorrowerFunction, getImageFunction } from './saga'\r\nimport { getTokenClient } from '../index/token';\r\nimport GridDetail from '../subComponent/GridDetail';\r\nimport { formatNumber, handleFormatDate } from '../global/globalFunction';\r\nimport DialogComponent from './../subComponent/DialogComponent'\r\nimport { TextField } from '@material-ui/core';\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n      flexGrow: 1,\r\n    },\r\n  });\r\n\r\nclass CalonNasabahDetail extends React.Component{\r\n    _isMounted = false;\r\n\r\n    state = {\r\n      diKlik:false,\r\n      errorMessage:'',\r\n      dataUser: {},\r\n      calonNasabahId: 0,\r\n      disabled: true,\r\n      loading: true,\r\n      dialog: false,\r\n      title: '',\r\n      message: '',\r\n      rekening: '',\r\n    };\r\n\r\n    componentDidMount(){\r\n      this._isMounted = true;\r\n\r\n      this.setState({\r\n        calonNasabahId: this.props.match.params.id,\r\n      },() => {\r\n        this.refresh();\r\n      })\r\n      \r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this._isMounted = false;\r\n    }\r\n\r\n    isCategoryExist = (category) => {\r\n      if(category && category.toString().toLowerCase() === 'agent') {\r\n        return 'Agen'\r\n      } else if(category && category.toString().toLowerCase() === 'acount_executive') {\r\n        return 'Account Executive'\r\n      } \r\n\r\n      return 'Personal';\r\n    }\r\n\r\n    refresh = async function(){\r\n      const param = {};\r\n      param.calonNasabahId = this.state.calonNasabahId;\r\n\r\n      const data = await getBorrowerFunction(param);\r\n      \r\n\r\n      if(data) {\r\n          if(!data.error) {\r\n            console.log(data)\r\n            const dataUser = data.dataUser || {};\r\n            \r\n            dataUser.category = this.isCategoryExist(dataUser.category) ;\r\n\r\n            this.setState({\r\n              dataUser,\r\n              listRole: data.dataRole,\r\n              loading: false,\r\n            })\r\n          } else {\r\n            this.setState({\r\n              errorMessage: data.error,\r\n              loading: false,\r\n            })\r\n          }      \r\n      }\r\n    }\r\n\r\n    btnCancel = ()=>{\r\n      this.setState({diKlik:true})\r\n    }\r\n\r\n    componentWillReceiveProps(newProps){\r\n      this.setState({errorMessage:newProps.error})\r\n    }\r\n\r\n    handleDialog = (e) => {\r\n      let label = e.target.value\r\n      let title = '';\r\n\r\n      if(label.toLowerCase().includes('ktp')) {\r\n        title = 'KTP'\r\n      } else if(label.toLowerCase().includes('npwp')) {\r\n        title = 'NPWP'\r\n      }\r\n\r\n      this.setState({\r\n        title,\r\n      }, () => {\r\n        this.getImage(this.state.title)\r\n      })\r\n    }\r\n\r\n    getImage = async function(title) {\r\n      let data = {\r\n        idImage: 0,\r\n      };\r\n\r\n      if(title.toLowerCase().includes('ktp')) {\r\n        data.idImage = this.state.dataUser && this.state.dataUser.idcard_imageid  \r\n      } else if(title.toLowerCase().includes('npwp')) {\r\n        data.idImage = this.state.dataUser && this.state.dataUser.taxid_imageid\r\n      }\r\n\r\n      data = await getImageFunction(data)\r\n\r\n      if(data) {\r\n        if(!data.error) {\r\n          let message = data.dataImage && data.dataImage.image_string;\r\n\r\n          this.setState({\r\n            dialog:true,\r\n            message,\r\n          })\r\n        } else {\r\n          this.setState({\r\n            errorMessage: data.error,\r\n            loading: false,\r\n          })\r\n        }      \r\n      }\r\n    }\r\n\r\n    onChangeTextField = (e) => {\r\n      let value = e.target.value;\r\n      let labelName = e.target.id;\r\n      let flag = true;\r\n\r\n      if(value.includes(' ') || value.includes('\\'') || value.includes('\"') || value.includes(',') ) {\r\n        flag = false\r\n      }\r\n\r\n      if(labelName === 'rekening' && isNaN(value)) {    \r\n        flag = false \r\n      }\r\n      \r\n      if(flag) {\r\n        this.setState({\r\n          [labelName]: value,\r\n        })\r\n      } \r\n    }\r\n\r\n\r\n    handleClose = () => {\r\n      this.setState({dialog: false})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.diKlik){\r\n            return <Redirect to='/listCalonNasabah'/>            \r\n        } else if (this.state.loading){\r\n          return  (\r\n            <div  key=\"zz\">\r\n              <div align=\"center\" colSpan={6}>\r\n                <Loader \r\n                  type=\"Circles\"\r\n                  color=\"#00BFFF\"\r\n                  height=\"40\"\t\r\n                  width=\"40\"\r\n                />   \r\n              </div>\r\n            </div>\r\n          )\r\n        } else if(getTokenClient()){\r\n            return(\r\n              <div className=\"container mt-4\">\r\n                <h3>Calon Nasabah - Detail</h3>\r\n                \r\n                <hr/>\r\n                 \r\n                <div className=\"col-12\" style={{color:\"red\",fontSize:\"15px\",textAlign:'left', marginBottom:'10px'}}>\r\n                  {this.state.errorMessage}\r\n                </div>   \r\n\r\n                <div className=\"col-sm-12\" style={{marginBottom:'10px'}}>\r\n                  <input type=\"button\" value=\"KTP Detail\" className=\"btn\" onClick={this.handleDialog} style={{backgroundColor:\"blue\",color:\"white\",marginRight:'10px'}}/>\r\n                  <input type=\"button\" value=\"NPWP Detail\" className=\"btn\" onClick={this.handleDialog} style={{backgroundColor:\"blue\",color:\"white\"}}/>               \r\n                </div>\r\n\r\n                <GridDetail\r\n                  gridLabel={[4,3,5]}\r\n                  background\r\n                  label={[\r\n                    ['Id Nasabah','Bank Nasabah'],\r\n                    ['Kategori','Agen / AE'],\r\n                    ['Tanggal Register'],\r\n                  ]}\r\n                  data={this.state.dataUser && [\r\n                    [\r\n                      this.state.dataUser.id, \r\n                      this.state.dataUser.bank_name\r\n                    ],\r\n                    [\r\n                      this.state.dataUser.category,\r\n                      this.state.dataUser.agent_name && (`${this.state.dataUser.agent_name} ` + (this.state.dataUser.agent_provider_name && this.state.dataUser.agent_provider_name.trim().length !== 0 ? `(${this.state.dataUser.agent_provider_name})` : '')),\r\n                    ],\r\n                    [\r\n                      this.state.dataUser.created_time && handleFormatDate(this.state.dataUser.created_time)\r\n                    ],\r\n                  ]}                 \r\n                />\r\n\r\n                <GridDetail\r\n                  title=\"Informasi Pribadi\"\r\n                  gridLabel={[4,5,7]}\r\n                  label={[\r\n                    ['Nama','Jenis Kelamin','No KTP','No NPWP','Email'],\r\n                    ['Tanggal Lahir','Tempat Lahir','Pendidikan','Nama Ibu Kandung','No HP'],\r\n                    ['Status Pernikahan','Nama Pasangan','Tanggal Lahir Pasangan','Pendidikan Pasangan','Tanggungan (orang)'],\r\n                  ]}\r\n                  data={this.state.dataUser && [\r\n                    [\r\n                      this.state.dataUser.fullname, \r\n                      this.state.dataUser.gender && (this.state.dataUser.gender === 'M' ? 'Pria' : 'Perempuan'),\r\n                      this.state.dataUser.idcard_number,\r\n                      this.state.dataUser.taxid_number,\r\n                      this.state.dataUser.email\r\n                    ],\r\n                    [\r\n                      this.state.dataUser.birthday && handleFormatDate(this.state.dataUser.birthday),\r\n                      this.state.dataUser.birthplace,\r\n                      this.state.dataUser.last_education,\r\n                      this.state.dataUser.mother_name,\r\n                      this.state.dataUser.phone\r\n                    ],\r\n                    [\r\n                      this.state.dataUser.marriage_status && this.state.dataUser.marriage_status === 'married' ? 'Menikah' : 'Belum Menikah',\r\n                      this.state.dataUser.marriage_status && this.state.dataUser.marriage_status === 'married' ? this.state.dataUser.spouse_name : '-',\r\n                      this.state.dataUser.marriage_status && this.state.dataUser.marriage_status === 'married' ? ((this.state.dataUser.spouse_birthday && handleFormatDate(this.state.dataUser.spouse_birthday)) || '-') : '-',\r\n                      this.state.dataUser.marriage_status && this.state.dataUser.marriage_status === 'married' ? this.state.dataUser.spouse_lasteducation : '-',\r\n                      this.state.dataUser.dependants\r\n                    ],\r\n                  ]}                 \r\n                />\r\n\r\n                <GridDetail\r\n                  title=\"Data Tempat Tinggal\"\r\n                  gridLabel={[4,5,7]}\r\n                  label={[\r\n                    ['Alamat','Provinsi','Kota','RT / RW','No Telp Rumah'],\r\n                    ['Kecamatan','Kelurahan','Status Tempat Tinggal','Lama Menempati Rumah'],\r\n                    [],\r\n                  ]}\r\n                  data={this.state.dataUser && [\r\n                    [\r\n                      this.state.dataUser.address, \r\n                      this.state.dataUser.province,\r\n                      this.state.dataUser.city,\r\n                      `${this.state.dataUser.neighbour_association} / ${this.state.dataUser.hamlets} `,\r\n                      this.state.dataUser.home_phonenumber\r\n                    ],\r\n                    [\r\n                      this.state.dataUser.subdistrict,\r\n                      this.state.dataUser.urban_village,\r\n                      this.state.dataUser.home_ownership,\r\n                      this.state.dataUser.lived_for && `${this.state.dataUser.lived_for} tahun`,\r\n                    ],\r\n                    [],\r\n                  ]}                 \r\n                />\r\n\r\n                <GridDetail\r\n                  title=\"Info Pekerjaan\"\r\n                  gridLabel={[4,5,7]}\r\n                  label={[\r\n                    ['Jenis Pekerjaan','No Induk Pegawai','Nama Instansi','Alamat Kantor'],\r\n                    ['Jabatan','Lama Bekerja','Nama Atasan','No Tlp Kantor'],\r\n                    ['Gaji (perbulan)','Pendapatan Lain','Sumber Pendapatan Lain',],\r\n                  ]}\r\n                  data={this.state.dataUser && [\r\n                    [\r\n                      this.state.dataUser.field_of_work, \r\n                      this.state.dataUser.employee_id,\r\n                      this.state.dataUser.employer_name,\r\n                      this.state.dataUser.employer_address\r\n                    ],\r\n                    [\r\n                      this.state.dataUser.occupation,\r\n                      this.state.dataUser.been_workingfor && `${this.state.dataUser.been_workingfor} tahun`,\r\n                      this.state.dataUser.direct_superiorname,\r\n                      this.state.dataUser.employer_number,\r\n                    ],\r\n                    [\r\n                      this.state.dataUser.monthly_income && `Rp ${formatNumber(this.state.dataUser.monthly_income,true)}`,\r\n                      this.state.dataUser.other_income && `Rp ${formatNumber(this.state.dataUser.other_income,true)}`,\r\n                      this.state.dataUser.other_incomesource,\r\n                    ],\r\n                  ]}                 \r\n                />\r\n\r\n                <GridDetail\r\n                  title=\"Lain lain\"\r\n                  gridLabel={[7]}\r\n                  label={[\r\n                    ['Nama Orang Tidak Serumah Yang Bisa Dihubungi','Hubungan','Alamat Rumah','No Tlp','No HP'],\r\n                    []\r\n                  ]}\r\n                  data={this.state.dataUser && [\r\n                    [\r\n                      this.state.dataUser.related_personname, \r\n                      this.state.dataUser.related_relation, \r\n                      this.state.dataUser.related_address,\r\n                      this.state.dataUser.related_homenumber,\r\n                      this.state.dataUser.related_phonenumber\r\n                    ],\r\n                    []\r\n                  ]}                 \r\n                />\r\n\r\n                <div className=\"container mt-12\">                   \r\n                  <label className=\"col-sm-3 col-form-label\">\r\n                    Nomor Rekening\r\n                  </label>\r\n                  <label className=\"col-sm-1 col-form-label\" style={{textAlign:'right'}}>\r\n                    :\r\n                  </label>\r\n                  <div className=\"col-sm-4 col-form-label\">\r\n                    <TextField\r\n                      id=\"rekening\"\r\n                      onChange={this.onChangeTextField}\r\n                      value={this.state.rekening}\r\n                      hiddenLabel\r\n                      fullWidth\r\n                      placeholder=\"Telepon\"\r\n                      style={{border:'1px groove', paddingLeft:'5px'}}\r\n                    />\r\n                  </div>                   \r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"col-sm-12\">\r\n                  <DialogComponent\r\n                    title={this.state.title}\r\n                    openDialog={this.state.dialog}\r\n                    message={this.state.message}\r\n                    type='image'\r\n                    base64Boolean\r\n                    onClose={this.handleClose}\r\n                  />\r\n                </div>\r\n\r\n                    \r\n                <div className=\"col-sm-12\">\r\n                  <input type=\"button\" value=\"Kembali\" className=\"btn\" onClick={this.btnCancel} style={{backgroundColor:\"grey\",color:\"white\"}}/>\r\n                </div>\r\n                    \r\n                    \r\n                 \r\n                \r\n              </div>\r\n            )\r\n        } else if(!getTokenClient()){\r\n          return (\r\n              <Redirect to='/login' />\r\n          )    \r\n        }\r\n       \r\n    }\r\n}\r\n\r\nexport function mapDispatchToProps(dispatch) {\r\n    return {\r\n    //   getSourceTransaction: () => {\r\n    //     dispatch(sourceTransactionRequest());\r\n    //   },\r\n    //   handleRedirect: (route) => {\r\n    //     dispatch(push(route));\r\n    //   },\r\n    };\r\n}\r\n  \r\nexport const mapStateToProps = createStructuredSelector({\r\n  // user: getUserState(),\r\n  // menu: getMenu(),\r\n  // fetching: getFetchStatus(),\r\n});\r\n\r\nconst withConnect = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n);\r\n\r\nconst withStyle = withStyles(styles);\r\n\r\nexport default compose(\r\n    withConnect,\r\n    withStyle,\r\n    withRouter\r\n  )(CalonNasabahDetail);"]},"metadata":{},"sourceType":"module"}