{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\src\\\\components\\\\subComponent\\\\DialogComponent.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      margin: 0,\n      padding: theme.spacing(2)\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500]\n    },\n    card: {\n      maxWidth: 500\n    },\n    media: {\n      height: 300\n    }\n  };\n};\n\nvar DialogTitle = withStyles(styles)(function (props) {\n  var children = props.children,\n      classes = props.classes,\n      onClose = props.onClose,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"onClose\"]);\n\n  return React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, children), React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })));\n});\nvar DialogContent = withStyles(function (theme) {\n  return {\n    root: {\n      padding: theme.spacing(2)\n    }\n  };\n})(MuiDialogContent);\nvar DialogActions = withStyles(function (theme) {\n  return {\n    root: {\n      margin: 0,\n      padding: theme.spacing(1)\n    }\n  };\n})(MuiDialogActions);\n\nvar DialogComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DialogComponent, _React$Component);\n\n  function DialogComponent(props) {\n    var _this;\n\n    _classCallCheck(this, DialogComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DialogComponent).call(this, props));\n\n    _this.imageArea = function (classes, message, title, base64Boolean) {\n      var dataImage = message;\n      return React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(CardActionArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, base64Boolean && React.createElement(\"img\", {\n        alt: title,\n        className: classes.media,\n        src: \"data:image/PNG;base64,\".concat(dataImage),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), !base64Boolean && React.createElement(CardMedia, {\n        className: classes.media,\n        image: dataImage,\n        title: title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })));\n    };\n\n    _this.state = {\n      errorText: ''\n    };\n    return _this;\n  }\n\n  _createClass(DialogComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          type = _this$props.type,\n          title = _this$props.title,\n          message = _this$props.message,\n          onClose = _this$props.onClose;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        \"aria-labelledby\": \"customized-dialog-title\",\n        open: this.props.openDialog ? true : false,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"customized-dialog-title\",\n        onClose: onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, title), React.createElement(DialogContent, {\n        dividers: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, type && type === 'image' && this.imageArea(classes, message, title, this.props.base64Boolean), type && type !== 'image' && React.createElement(Typography, {\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, message)), type && type !== 'image' && React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Button, {\n        disableElevation: true,\n        autoFocus: true,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"No\"))));\n    }\n  }]);\n\n  return DialogComponent;\n}(React.Component);\n\nDialogComponent.propTypes = {\n  title: PropTypes.string,\n  type: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func\n};\nexport default withStyles(styles)(DialogComponent);","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_fe/src/components/subComponent/DialogComponent.js"],"names":["React","PropTypes","withStyles","Button","Dialog","MuiDialogTitle","MuiDialogContent","MuiDialogActions","IconButton","CloseIcon","Typography","Card","CardActionArea","CardMedia","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","card","maxWidth","media","height","DialogTitle","props","children","classes","onClose","other","DialogContent","DialogActions","DialogComponent","imageArea","message","title","base64Boolean","dataImage","state","errorText","type","openDialog","Component","propTypes","string","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  card: {\r\n    maxWidth: 500,\r\n  },\r\n  media: {\r\n    height: 300,\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\n\r\nclass DialogComponent extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        errorText: '',\r\n      };\r\n    }\r\n\r\n    imageArea = (classes, message, title, base64Boolean) => {\r\n\r\n      const dataImage = message;\r\n\r\n      return (\r\n        <Card className={classes.card}>\r\n          <CardActionArea>\r\n            {\r\n              base64Boolean && \r\n              <img alt={title} className={classes.media} src={`data:image/PNG;base64,${dataImage}`}/>\r\n            }\r\n\r\n            {\r\n              !base64Boolean && \r\n              <CardMedia\r\n                className={classes.media}\r\n                image={dataImage}\r\n                title={title}\r\n              />\r\n            }\r\n            \r\n            \r\n          </CardActionArea>\r\n        </Card>\r\n      );\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            type,\r\n            title,\r\n            message,\r\n            onClose,\r\n        } = this.props;\r\n        \r\n        return ( \r\n            <div>\r\n                <Dialog aria-labelledby=\"customized-dialog-title\" open={this.props.openDialog ? true : false} fullWidth>\r\n                    <DialogTitle id=\"customized-dialog-title\" onClose={onClose}>\r\n                        {title}\r\n                    </DialogTitle>\r\n                    <DialogContent dividers>\r\n                        { type && type === 'image' && this.imageArea(classes, message, title, this.props.base64Boolean)}\r\n                        { type && type !== 'image' && \r\n                            <Typography gutterBottom>\r\n                                {message}\r\n                            </Typography>\r\n                        }\r\n                    </DialogContent>\r\n                    {\r\n                        type && type !== 'image' && \r\n                        <DialogActions>\r\n                            <Button disableElevation autoFocus color=\"primary\">\r\n                                No\r\n                            </Button>\r\n                        </DialogActions>\r\n                    }\r\n                    \r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogComponent.propTypes = {\r\n    title: PropTypes.string,\r\n    type: PropTypes.string,\r\n    message: PropTypes.string,\r\n    onClose: PropTypes.func,\r\n};\r\n  \r\nexport default withStyles(styles)(DialogComponent);"]},"metadata":{},"sourceType":"module"}