{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\src\\\\components\\\\subComponent\\\\GridDetail.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport Grid from '@material-ui/core/Grid';\nimport BrokenLink from './../../support/img/default.png';\nimport './../../support/css/gridDetail.css';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nvar styles = function styles(theme) {\n  return {\n    gridDetail: {\n      fontSize: 'calc(10px + 0.3vw)',\n      marginBottom: '5px',\n      wordWrap: 'break-word',\n      flexWrap: 'wrap'\n    }\n  };\n};\n\nvar GridDetails =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GridDetails, _React$Component);\n\n  function GridDetails(props) {\n    var _this;\n\n    _classCallCheck(this, GridDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GridDetails).call(this, props));\n\n    _this.renderDataColumn = function (dataColumn, dataLabel) {\n      var tester = '';\n      tester = dataColumn && dataColumn.map(function (dataRow, index) {\n        return React.createElement(Grid, {\n          item: true,\n          sm: parseInt(12 / dataColumn.length),\n          xs: 12,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          style: {\n            marginBottom: '10px',\n            flexWrap: 'wrap'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, _this.renderDataRow(dataRow, dataLabel && dataLabel[index], index)));\n      }, _assertThisInitialized(_this));\n      return tester;\n    };\n\n    _this.lengthGridLabel = function (lengthLabel) {\n      var pjgLabel = 6;\n\n      if (lengthLabel) {\n        pjgLabel = lengthLabel;\n      }\n\n      return pjgLabel;\n    };\n\n    _this.lengthGridValue = function (lengthLabel) {\n      var pjgValue = 6;\n\n      if (lengthLabel) {\n        pjgValue = 12 - lengthLabel;\n      }\n\n      return pjgValue;\n    };\n\n    _this.findBold = function (data) {\n      var dataNew = data && data.toString() || '-';\n\n      if (dataNew.includes('<b>')) {\n        dataNew = dataNew.split('<b>');\n        return React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \" \", dataNew[1], \" \");\n      }\n\n      return dataNew;\n    };\n\n    _this.imageArea = function (message, title, base64Boolean) {\n      var dataImage = message;\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(CardActionArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, base64Boolean && React.createElement(\"img\", {\n        alt: title,\n        onError: function onError(e) {\n          e.target.attributes.getNamedItem(\"src\").value = BrokenLink;\n        },\n        src: \"data:image/PNG;base64,\".concat(dataImage),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), !base64Boolean && React.createElement(CardMedia, {\n        image: dataImage && dataImage.includes('http') ? dataImage : require('./../../support/img/default.png'),\n        title: title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })));\n    };\n\n    _this.renderDataRow = function (dataRow, dataPerLabel, indexColumn) {\n      var tester = '';\n      tester = dataRow && dataRow.map(function (dataPerRow, index) {\n        return React.createElement(Grid, {\n          item: true,\n          sm: 12,\n          xs: 12,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          style: {\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          sm: _this.lengthGridLabel(_this.props.gridLabel && _this.props.gridLabel[indexColumn]),\n          xs: _this.lengthGridLabel(_this.props.gridLabel && _this.props.gridLabel[indexColumn]),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, dataPerLabel && dataPerLabel[index])), React.createElement(Grid, {\n          item: true,\n          sm: _this.lengthGridValue(_this.props.gridLabel && _this.props.gridLabel[indexColumn]),\n          xs: _this.lengthGridValue(_this.props.gridLabel && _this.props.gridLabel[indexColumn]),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          sm: 1,\n          xs: 1,\n          style: {\n            maxWidth: '15px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, !_this.props.noEquals && React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, \" : \")), _this.renderDataPerRow(dataPerRow)))));\n      }, _assertThisInitialized(_this));\n      return tester;\n    };\n\n    _this.renderDataPerRow = function (dataPerRow) {\n      if (dataPerRow) {\n        if (dataPerRow && dataPerRow.type && dataPerRow.type === 'image') {\n          return React.createElement(Grid, {\n            item: true,\n            sm: 11,\n            xs: 11,\n            style: {\n              paddingRight: '10px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151\n            },\n            __self: this\n          }, _this.imageArea(dataPerRow.value, dataPerRow.label, dataPerRow.base64Boolean));\n        }\n\n        return React.createElement(Grid, {\n          item: true,\n          sm: 11,\n          xs: 11,\n          style: {\n            color: dataPerRow && dataPerRow.color ? dataPerRow.color : dataPerRow,\n            paddingRight: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, dataPerRow.value ? _this.findBold(dataPerRow.value) : _this.findBold(dataPerRow));\n      }\n\n      return React.createElement(Grid, {\n        item: true,\n        sm: 11,\n        xs: 11,\n        style: {\n          paddingRight: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, '-');\n    };\n\n    _this.state = {\n      errorText: ''\n    };\n    return _this;\n  } // componentDidMount() {\n  //   if(this.props.data) {\n  //     this.refresh(this.props.data)\n  //   }\n  // }\n\n\n  _createClass(GridDetails, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          title = _this$props.title,\n          label = _this$props.label,\n          data = _this$props.data;\n      return React.createElement(Grid, {\n        container: true,\n        className: classes.gridDetail,\n        style: {\n          backgroundColor: this.props.background ? '#D8E6FF' : 'none',\n          padding: this.props.background ? '10px 0px 0px 10px' : '0px 0px 0px 10px',\n          fontWeight: this.props.background ? 'bold' : 'normal',\n          borderRadius: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        style: {\n          color: \"#2076B8\",\n          marginBottom: !this.props.noTitleLine && title ? '20px' : '0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, !this.props.noTitleLine && title && React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          backgroundColor: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, title && title)), !this.props.noTitleLine && !title && React.createElement(\"hr\", {\n        style: {\n          borderTop: '1px solid rgba(32,118,184,1)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), this.props.noTitleLine && title && React.createElement(\"div\", {\n        style: {\n          fontSize: '1rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, title)), data && label && this.renderDataColumn(data, label));\n    }\n  }]);\n\n  return GridDetails;\n}(React.Component);\n\nGridDetails.propTypes = {\n  title: PropTypes.string,\n  label: PropTypes.array,\n  data: PropTypes.array\n};\nexport default withStyles(styles)(GridDetails);","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_fe/src/components/subComponent/GridDetail.js"],"names":["React","PropTypes","withStyles","Grid","BrokenLink","Card","CardActionArea","CardMedia","styles","theme","gridDetail","fontSize","marginBottom","wordWrap","flexWrap","GridDetails","props","renderDataColumn","dataColumn","dataLabel","tester","map","dataRow","index","parseInt","length","renderDataRow","lengthGridLabel","lengthLabel","pjgLabel","lengthGridValue","pjgValue","findBold","data","dataNew","toString","includes","split","imageArea","message","title","base64Boolean","dataImage","e","target","attributes","getNamedItem","value","require","dataPerLabel","indexColumn","dataPerRow","gridLabel","maxWidth","noEquals","renderDataPerRow","type","paddingRight","label","color","state","errorText","classes","backgroundColor","background","padding","fontWeight","borderRadius","noTitleLine","borderTop","Component","propTypes","string","array"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport BrokenLink from './../../support/img/default.png';\r\nimport './../../support/css/gridDetail.css';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nconst styles = (theme) => ({\r\n\r\n  gridDetail: {\r\n    fontSize: 'calc(10px + 0.3vw)',\r\n    marginBottom: '5px',\r\n    wordWrap:'break-word',\r\n    flexWrap:'wrap',\r\n  },\r\n\r\n});\r\n\r\nclass GridDetails extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      errorText: '',\r\n    };\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   if(this.props.data) {\r\n  //     this.refresh(this.props.data)\r\n  //   }\r\n  // }\r\n\r\n  renderDataColumn = (dataColumn, dataLabel) => {\r\n    let tester = '';\r\n    \r\n    tester = dataColumn && dataColumn.map((dataRow, index) => {\r\n      return(\r\n        <Grid item sm={parseInt(12 / dataColumn.length)} xs={12} key={index}>\r\n          <Grid container style={{marginBottom:'10px', flexWrap:'wrap'}}> \r\n            {this.renderDataRow(dataRow, dataLabel && dataLabel[index], index)}\r\n          </Grid>\r\n        </Grid>\r\n      )\r\n    }, this)\r\n      \r\n    \r\n\r\n    return tester\r\n  }\r\n\r\n  lengthGridLabel = (lengthLabel) => {\r\n    let pjgLabel = 6;\r\n\r\n    if(lengthLabel) {\r\n      pjgLabel = lengthLabel\r\n    }\r\n\r\n    return pjgLabel\r\n  }\r\n\r\n  lengthGridValue = (lengthLabel) => {\r\n    let pjgValue = 6;\r\n\r\n    if(lengthLabel) {\r\n      pjgValue = 12 - lengthLabel\r\n    }\r\n\r\n    return pjgValue\r\n  }\r\n\r\n  findBold = (data) => {\r\n    let dataNew = (data && data.toString()) || '-';\r\n\r\n    if(dataNew.includes('<b>')) {\r\n      dataNew = dataNew.split('<b>')\r\n      return <b> {dataNew[1]} </b>;\r\n    }\r\n    \r\n    return dataNew;\r\n  }\r\n\r\n  imageArea = (message, title, base64Boolean) => {\r\n\r\n    const dataImage = message;\r\n\r\n    return (\r\n      <Card>\r\n        <CardActionArea>\r\n          {\r\n            base64Boolean && \r\n            <img alt={title}\r\n            onError={(e)=>{e.target.attributes.getNamedItem(\"src\").value = BrokenLink}}\r\n            src={`data:image/PNG;base64,${dataImage}`}/>\r\n          }\r\n\r\n          {\r\n            !base64Boolean && \r\n            <CardMedia\r\n              image={dataImage && dataImage.includes('http') ? dataImage : require('./../../support/img/default.png')}\r\n              title={title}\r\n            />\r\n          }\r\n          \r\n          \r\n        </CardActionArea>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  renderDataRow = (dataRow, dataPerLabel, indexColumn) => {\r\n    let tester = '';\r\n\r\n    tester = dataRow && dataRow.map((dataPerRow, index) => {\r\n      return (\r\n        <Grid item sm={12} xs={12} key={index}>\r\n\r\n          <Grid container style={{marginBottom:'5px'}}> \r\n            <Grid item sm={this.lengthGridLabel(this.props.gridLabel && this.props.gridLabel[indexColumn])} xs={this.lengthGridLabel(this.props.gridLabel && this.props.gridLabel[indexColumn])}>\r\n              <b>{ dataPerLabel && dataPerLabel[index] }</b>\r\n            </Grid>\r\n\r\n            <Grid item sm={this.lengthGridValue(this.props.gridLabel && this.props.gridLabel[indexColumn])} xs={this.lengthGridValue(this.props.gridLabel && this.props.gridLabel[indexColumn])}>\r\n              <Grid container>\r\n                <Grid item sm={1} xs={1} style={{maxWidth:'15px'}}>\r\n                  {\r\n                    (!this.props.noEquals) && <b> : </b>\r\n                  }\r\n                </Grid>\r\n\r\n                { this.renderDataPerRow(dataPerRow) }\r\n\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      )\r\n    }, this);\r\n      \r\n    return tester\r\n  }\r\n\r\n  renderDataPerRow = (dataPerRow) => {\r\n    if(dataPerRow) {\r\n      if(dataPerRow && dataPerRow.type && dataPerRow.type==='image') {\r\n        return(\r\n          <Grid item sm={11} xs={11} style={{paddingRight:'10px'}} >\r\n            {\r\n              this.imageArea(dataPerRow.value, dataPerRow.label, dataPerRow.base64Boolean)\r\n            }\r\n          </Grid> \r\n        )\r\n      }\r\n      return (\r\n        <Grid item sm={11} xs={11} style={{color:dataPerRow&& dataPerRow.color? dataPerRow.color:dataPerRow, paddingRight:'10px'}} >\r\n          {\r\n            dataPerRow.value ? this.findBold(dataPerRow.value) : this.findBold(dataPerRow)\r\n          }\r\n        </Grid>\r\n      )                 \r\n    }\r\n\r\n    return (\r\n      <Grid item sm={11} xs={11} style={{paddingRight:'10px'}} >\r\n        {'-'}\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      title,\r\n      label,\r\n      data,\r\n    } = this.props;\r\n    \r\n    return ( \r\n      <Grid container \r\n        className={classes.gridDetail} \r\n        style={\r\n          {\r\n            backgroundColor: this.props.background ? '#D8E6FF' : 'none', \r\n            padding: this.props.background ? '10px 0px 0px 10px' : '0px 0px 0px 10px',\r\n            fontWeight: this.props.background ? 'bold' : 'normal',\r\n            borderRadius:'5px'\r\n          }\r\n        }\r\n      >\r\n\r\n        <Grid item sm={12} xs={12} style={{color:\"#2076B8\", marginBottom: !this.props.noTitleLine && title ?'20px' :'0px'}}>\r\n              { !this.props.noTitleLine && title &&\r\n                <h4>\r\n                \r\n                  <span style={{backgroundColor:'white'}}> \r\n                \r\n                    {title && title} \r\n\r\n                  </span>\r\n                \r\n\r\n                \r\n                \r\n                </h4>\r\n              }\r\n\r\n              {\r\n                !this.props.noTitleLine && !title &&\r\n                <hr style={{borderTop: '1px solid rgba(32,118,184,1)'}}/>\r\n              }\r\n\r\n              { this.props.noTitleLine && title &&\r\n                <div style={{fontSize:'1rem'}}>{ title }</div>\r\n              }\r\n            </Grid>\r\n        \r\n        {data && label && this.renderDataColumn(data, label)}\r\n\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nGridDetails.propTypes = {\r\n  title: PropTypes.string,\r\n  label: PropTypes.array,\r\n  data: PropTypes.array,\r\n};\r\n\r\nexport default withStyles(styles)(GridDetails);\r\n"]},"metadata":{},"sourceType":"module"}