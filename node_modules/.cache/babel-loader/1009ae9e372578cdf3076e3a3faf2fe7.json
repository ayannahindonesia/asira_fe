{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\src\\\\components\\\\calonNasabah\\\\calonNasabahDetail.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Loader from 'react-loader-spinner';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { withStyles } from '@material-ui/styles';\nimport { compose } from 'redux';\nimport { getUserFunction } from './saga';\nimport { getAllRoleFunction } from '../rolePermission/saga';\nimport { getToken } from '../index/token';\nimport GridDetail from '../subComponent/GridDetail';\nimport { formatNumber, handleFormatDate } from '../global/globalFunction';\n\nconst styles = theme => ({\n  container: {\n    flexGrow: 1\n  }\n});\n\nclass CalonNasabahDetail extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this._isMounted = false;\n    this.state = {\n      diKlik: false,\n      errorMessage: '',\n      dataUser: {},\n      calonNasabahId: 0,\n      disabled: true,\n      loading: true\n    };\n\n    this.refresh = async function () {\n      const param = {};\n      param.calonNasabahId = this.state.calonNasabahId;\n      const data = await getUserFunction(param, getAllRoleFunction);\n\n      if (data) {\n        if (!data.error) {\n          const dataUser = data.dataUser || {};\n          this.setState({\n            dataUser,\n            listRole: data.dataRole,\n            loading: false\n          });\n        } else {\n          this.setState({\n            errorMessage: data.error,\n            disabled: true,\n            loading: false\n          });\n        }\n      }\n    };\n\n    this.btnCancel = () => {\n      this.setState({\n        diKlik: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.setState({\n      calonNasabahId: this.props.match.params.id\n    }, () => {\n      this.refresh();\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      errorMessage: newProps.error\n    });\n  }\n\n  render() {\n    if (this.state.diKlik) {\n      return React.createElement(Redirect, {\n        to: \"/listCalonNasabah\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      });\n    } else if (this.state.loading) {\n      return React.createElement(\"div\", {\n        key: \"zz\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        align: \"center\",\n        colSpan: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        type: \"Circles\",\n        color: \"#00BFFF\",\n        height: \"40\",\n        width: \"40\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })));\n    } else if (getToken()) {\n      return React.createElement(\"div\", {\n        className: \"container mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Calon Nasabah - Detail\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-12\",\n        style: {\n          color: \"red\",\n          fontSize: \"15px\",\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.state.errorMessage), React.createElement(GridDetail, {\n        gridLabel: [4, 5, 7],\n        background: true,\n        label: [['Id Nasabah', 'Bank Nasabah'], ['Kategori', 'Agen / AE'], ['Tanggal Register']],\n        data: this.state.dataUser && [[this.state.dataUser.id, this.state.dataUser.bank_name], [this.state.dataUser.kategori, this.state.dataUser.agency_provider], [handleFormatDate(this.state.dataUser.created_time)]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(GridDetail, {\n        title: \"Informasi Pribadi\",\n        gridLabel: [4, 5, 7],\n        label: [['Nama', 'Jenis Kelamin', 'No KTP', 'No NPWP', 'Email'], ['Tanggal Lahir', 'Tempat Lahir', 'Pendidikan', 'Nama Ibu Kandung', 'No HP'], ['Status Pernikahan', 'Nama Pasangan', 'Tanggal Lahir Pasangan', 'Pendidikan Pasangan', 'Tanggungan (orang)']],\n        data: this.state.dataUser && [[this.state.dataUser.fullname, this.state.dataUser.gender && this.state.dataUser.gender === 'M' ? 'Pria' : 'Perempuan', this.state.dataUser.idcard_number, this.state.dataUser.taxid_number, this.state.dataUser.email], [handleFormatDate(this.state.dataUser.birthday), this.state.dataUser.birthplace, this.state.dataUser.last_education, this.state.dataUser.mother_name, this.state.dataUser.phone], [this.state.dataUser.marriage_status && this.state.dataUser.marriage_status === 'married' ? 'Menikah' : 'Belum Menikah', this.state.dataUser.marriage_status && this.state.dataUser.marriage_status === 'married' ? this.state.dataUser.spouse_name : '-', this.state.dataUser.marriage_status && this.state.dataUser.marriage_status === 'married' ? this.state.dataUser.spouse_birthday && handleFormatDate(this.state.dataUser.spouse_birthday) || '-' : '-', this.state.dataUser.marriage_status && this.state.dataUser.marriage_status === 'married' ? this.state.dataUser.spouse_lasteducation : '-', this.state.dataUser.dependants]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(GridDetail, {\n        title: \"Data Tempat Tinggal\",\n        gridLabel: [4, 5, 7],\n        label: [['Alamat', 'Provinsi', 'Kota', 'RT / RW', 'No Telp Rumah'], ['Kecamatan', 'Kelurahan', 'Status Tempat Tinggal', 'Lama Menempati Rumah'], []],\n        data: this.state.dataUser && [[this.state.dataUser.address, this.state.dataUser.province, this.state.dataUser.city, \"\".concat(this.state.dataUser.neighbour_association, \" / \").concat(this.state.dataUser.hamlets, \" \"), this.state.dataUser.home_phonenumber], [this.state.dataUser.subdistrict, this.state.dataUser.urban_village, this.state.dataUser.home_ownership, \"\".concat(this.state.dataUser.lived_for, \" bulan\")], []],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(GridDetail, {\n        title: \"Info Pekerjaan\",\n        gridLabel: [4, 5, 7],\n        label: [['Jenis Pekerjaan', 'No Induk Pegawai', 'Nama Instansi', 'Alamat Kantor'], ['Jabatan', 'Lama Bekerja', 'Nama Atasan', 'No Tlp Kantor'], ['Gaji (perbulan)', 'Pendapatan Lain', 'Sumber Pendapatan Lain']],\n        data: this.state.dataUser && [[this.state.dataUser.field_of_work, this.state.dataUser.employee_id, this.state.dataUser.employer_name, this.state.dataUser.employer_address], [this.state.dataUser.occupation, \"\".concat(this.state.dataUser.been_workingfor, \" bulan\"), this.state.dataUser.direct_superiorname, this.state.dataUser.employer_number], [\"Rp \".concat(formatNumber(this.state.dataUser.monthly_income, true)), \"Rp \".concat(formatNumber(this.state.dataUser.other_income, true)), this.state.dataUser.other_incomesource]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(GridDetail, {\n        title: \"Lain lain\",\n        gridLabel: [7],\n        label: [['Nama Orang Tidak Serumah Yang Bisa Dihubungi', 'Hubungan', 'Alamat Rumah', 'No Tlp', 'No HP'], []],\n        data: this.state.dataUser && [[this.state.dataUser.related_personname, this.state.dataUser.related_relation, this.state.dataUser.related_address, this.state.dataUser.related_homenumber, this.state.dataUser.related_phonenumber], []],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Batal\",\n        className: \"btn\",\n        onClick: this.btnCancel,\n        style: {\n          backgroundColor: \"grey\",\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      })));\n    } else if (!getToken()) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport function mapDispatchToProps(dispatch) {\n  return {//   getSourceTransaction: () => {\n    //     dispatch(sourceTransactionRequest());\n    //   },\n    //   handleRedirect: (route) => {\n    //     dispatch(push(route));\n    //   },\n  };\n}\nexport const mapStateToProps = createStructuredSelector({// user: getUserState(),\n  // menu: getMenu(),\n  // fetching: getFetchStatus(),\n});\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withStyle = withStyles(styles);\nexport default compose(withConnect, withStyle, withRouter)(CalonNasabahDetail);","map":{"version":3,"sources":["C:\\Users\\pc\\Desktop\\asira_fe\\src\\components\\calonNasabah\\calonNasabahDetail.js"],"names":["React","Redirect","Loader","createStructuredSelector","connect","withRouter","withStyles","compose","getUserFunction","getAllRoleFunction","getToken","GridDetail","formatNumber","handleFormatDate","styles","theme","container","flexGrow","CalonNasabahDetail","Component","_isMounted","state","diKlik","errorMessage","dataUser","calonNasabahId","disabled","loading","refresh","param","data","error","setState","listRole","dataRole","btnCancel","componentDidMount","props","match","params","id","componentWillUnmount","componentWillReceiveProps","newProps","render","color","fontSize","textAlign","bank_name","kategori","agency_provider","created_time","fullname","gender","idcard_number","taxid_number","email","birthday","birthplace","last_education","mother_name","phone","marriage_status","spouse_name","spouse_birthday","spouse_lasteducation","dependants","address","province","city","neighbour_association","hamlets","home_phonenumber","subdistrict","urban_village","home_ownership","lived_for","field_of_work","employee_id","employer_name","employer_address","occupation","been_workingfor","direct_superiorname","employer_number","monthly_income","other_income","other_incomesource","related_personname","related_relation","related_address","related_homenumber","related_phonenumber","backgroundColor","mapDispatchToProps","dispatch","mapStateToProps","withConnect","withStyle"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Loader from 'react-loader-spinner'\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { compose } from 'redux';\r\nimport { getUserFunction } from './saga'\r\nimport { getAllRoleFunction } from '../rolePermission/saga';\r\nimport { getToken } from '../index/token';\r\nimport GridDetail from '../subComponent/GridDetail';\r\nimport { formatNumber, handleFormatDate } from '../global/globalFunction';\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n      flexGrow: 1,\r\n    },\r\n  });\r\n\r\nclass CalonNasabahDetail extends React.Component{\r\n    _isMounted = false;\r\n\r\n    state = {\r\n      diKlik:false,\r\n      errorMessage:'',\r\n      dataUser: {},\r\n      calonNasabahId: 0,\r\n      disabled: true,\r\n      loading: true,\r\n    };\r\n\r\n    componentDidMount(){\r\n      this._isMounted = true;\r\n\r\n      this.setState({\r\n        calonNasabahId: this.props.match.params.id,\r\n      },() => {\r\n        this.refresh();\r\n      })\r\n      \r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this._isMounted = false;\r\n    }\r\n\r\n    refresh = async function(){\r\n      const param = {};\r\n      param.calonNasabahId = this.state.calonNasabahId;\r\n\r\n      const data = await getUserFunction(param, getAllRoleFunction);\r\n      \r\n\r\n      if(data) {\r\n          if(!data.error) {\r\n            const dataUser = data.dataUser || {};\r\n\r\n            this.setState({\r\n              dataUser,\r\n              listRole: data.dataRole,\r\n              loading: false,\r\n            })\r\n          } else {\r\n            this.setState({\r\n              errorMessage: data.error,\r\n              disabled: true,\r\n              loading: false,\r\n            })\r\n          }      \r\n      }\r\n    }\r\n\r\n    btnCancel = ()=>{\r\n      this.setState({diKlik:true})\r\n    }\r\n\r\n    componentWillReceiveProps(newProps){\r\n      this.setState({errorMessage:newProps.error})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.diKlik){\r\n            return <Redirect to='/listCalonNasabah'/>            \r\n        } else if (this.state.loading){\r\n          return  (\r\n            <div  key=\"zz\">\r\n              <div align=\"center\" colSpan={6}>\r\n                <Loader \r\n                  type=\"Circles\"\r\n                  color=\"#00BFFF\"\r\n                  height=\"40\"\t\r\n                  width=\"40\"\r\n                />   \r\n              </div>\r\n            </div>\r\n          )\r\n        } else if(getToken()){\r\n            return(\r\n              <div className=\"container mt-4\">\r\n                <h3>Calon Nasabah - Detail</h3>\r\n                \r\n                <hr/>\r\n                 \r\n                <div className=\"col-12\" style={{color:\"red\",fontSize:\"15px\",textAlign:'left'}}>\r\n                  {this.state.errorMessage}\r\n                </div>   \r\n\r\n                <GridDetail\r\n                  gridLabel={[4,5,7]}\r\n                  background\r\n                  label={[\r\n                    ['Id Nasabah','Bank Nasabah'],\r\n                    ['Kategori','Agen / AE'],\r\n                    ['Tanggal Register'],\r\n                  ]}\r\n                  data={this.state.dataUser && [\r\n                    [\r\n                      this.state.dataUser.id, \r\n                      this.state.dataUser.bank_name\r\n                    ],\r\n                    [\r\n                      this.state.dataUser.kategori,\r\n                      this.state.dataUser.agency_provider,\r\n                    ],\r\n                    [\r\n                      handleFormatDate(this.state.dataUser.created_time)\r\n                    ],\r\n                  ]}                 \r\n                />\r\n\r\n                <GridDetail\r\n                  title=\"Informasi Pribadi\"\r\n                  gridLabel={[4,5,7]}\r\n                  label={[\r\n                    ['Nama','Jenis Kelamin','No KTP','No NPWP','Email'],\r\n                    ['Tanggal Lahir','Tempat Lahir','Pendidikan','Nama Ibu Kandung','No HP'],\r\n                    ['Status Pernikahan','Nama Pasangan','Tanggal Lahir Pasangan','Pendidikan Pasangan','Tanggungan (orang)'],\r\n                  ]}\r\n                  data={this.state.dataUser && [\r\n                    [\r\n                      this.state.dataUser.fullname, \r\n                      this.state.dataUser.gender && this.state.dataUser.gender === 'M' ? 'Pria' : 'Perempuan',\r\n                      this.state.dataUser.idcard_number,\r\n                      this.state.dataUser.taxid_number,\r\n                      this.state.dataUser.email\r\n                    ],\r\n                    [\r\n                      handleFormatDate(this.state.dataUser.birthday),\r\n                      this.state.dataUser.birthplace,\r\n                      this.state.dataUser.last_education,\r\n                      this.state.dataUser.mother_name,\r\n                      this.state.dataUser.phone\r\n                    ],\r\n                    [\r\n                      this.state.dataUser.marriage_status && this.state.dataUser.marriage_status === 'married' ? 'Menikah' : 'Belum Menikah',\r\n                      this.state.dataUser.marriage_status && this.state.dataUser.marriage_status === 'married' ? this.state.dataUser.spouse_name : '-',\r\n                      this.state.dataUser.marriage_status && this.state.dataUser.marriage_status === 'married' ? ((this.state.dataUser.spouse_birthday && handleFormatDate(this.state.dataUser.spouse_birthday)) || '-') : '-',\r\n                      this.state.dataUser.marriage_status && this.state.dataUser.marriage_status === 'married' ? this.state.dataUser.spouse_lasteducation : '-',\r\n                      this.state.dataUser.dependants\r\n                    ],\r\n                  ]}                 \r\n                />\r\n\r\n                <GridDetail\r\n                  title=\"Data Tempat Tinggal\"\r\n                  gridLabel={[4,5,7]}\r\n                  label={[\r\n                    ['Alamat','Provinsi','Kota','RT / RW','No Telp Rumah'],\r\n                    ['Kecamatan','Kelurahan','Status Tempat Tinggal','Lama Menempati Rumah'],\r\n                    [],\r\n                  ]}\r\n                  data={this.state.dataUser && [\r\n                    [\r\n                      this.state.dataUser.address, \r\n                      this.state.dataUser.province,\r\n                      this.state.dataUser.city,\r\n                      `${this.state.dataUser.neighbour_association} / ${this.state.dataUser.hamlets} `,\r\n                      this.state.dataUser.home_phonenumber\r\n                    ],\r\n                    [\r\n                      this.state.dataUser.subdistrict,\r\n                      this.state.dataUser.urban_village,\r\n                      this.state.dataUser.home_ownership,\r\n                      `${this.state.dataUser.lived_for} bulan`,\r\n                    ],\r\n                    [],\r\n                  ]}                 \r\n                />\r\n\r\n                <GridDetail\r\n                  title=\"Info Pekerjaan\"\r\n                  gridLabel={[4,5,7]}\r\n                  label={[\r\n                    ['Jenis Pekerjaan','No Induk Pegawai','Nama Instansi','Alamat Kantor'],\r\n                    ['Jabatan','Lama Bekerja','Nama Atasan','No Tlp Kantor'],\r\n                    ['Gaji (perbulan)','Pendapatan Lain','Sumber Pendapatan Lain',],\r\n                  ]}\r\n                  data={this.state.dataUser && [\r\n                    [\r\n                      this.state.dataUser.field_of_work, \r\n                      this.state.dataUser.employee_id,\r\n                      this.state.dataUser.employer_name,\r\n                      this.state.dataUser.employer_address\r\n                    ],\r\n                    [\r\n                      this.state.dataUser.occupation,\r\n                      `${this.state.dataUser.been_workingfor} bulan`,\r\n                      this.state.dataUser.direct_superiorname,\r\n                      this.state.dataUser.employer_number,\r\n                    ],\r\n                    [\r\n                      `Rp ${formatNumber(this.state.dataUser.monthly_income,true)}`,\r\n                      `Rp ${formatNumber(this.state.dataUser.other_income,true)}`,\r\n                      this.state.dataUser.other_incomesource,\r\n                    ],\r\n                  ]}                 \r\n                />\r\n\r\n                <GridDetail\r\n                  title=\"Lain lain\"\r\n                  gridLabel={[7]}\r\n                  label={[\r\n                    ['Nama Orang Tidak Serumah Yang Bisa Dihubungi','Hubungan','Alamat Rumah','No Tlp','No HP'],\r\n                    []\r\n                  ]}\r\n                  data={this.state.dataUser && [\r\n                    [\r\n                      this.state.dataUser.related_personname, \r\n                      this.state.dataUser.related_relation, \r\n                      this.state.dataUser.related_address,\r\n                      this.state.dataUser.related_homenumber,\r\n                      this.state.dataUser.related_phonenumber\r\n                    ],\r\n                    []\r\n                  ]}                 \r\n                />\r\n\r\n\r\n                    \r\n                <div className=\"col-sm-12\">\r\n                  <input type=\"button\" value=\"Batal\" className=\"btn\" onClick={this.btnCancel} style={{backgroundColor:\"grey\",color:\"white\"}}/>\r\n                </div>\r\n                    \r\n                    \r\n                 \r\n                \r\n              </div>\r\n            )\r\n        } else if(!getToken()){\r\n          return (\r\n              <Redirect to='/login' />\r\n          )    \r\n        }\r\n       \r\n    }\r\n}\r\n\r\nexport function mapDispatchToProps(dispatch) {\r\n    return {\r\n    //   getSourceTransaction: () => {\r\n    //     dispatch(sourceTransactionRequest());\r\n    //   },\r\n    //   handleRedirect: (route) => {\r\n    //     dispatch(push(route));\r\n    //   },\r\n    };\r\n}\r\n  \r\nexport const mapStateToProps = createStructuredSelector({\r\n  // user: getUserState(),\r\n  // menu: getMenu(),\r\n  // fetching: getFetchStatus(),\r\n});\r\n\r\nconst withConnect = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n);\r\n\r\nconst withStyle = withStyles(styles);\r\n\r\nexport default compose(\r\n    withConnect,\r\n    withStyle,\r\n    withRouter\r\n  )(CalonNasabahDetail);"]},"metadata":{},"sourceType":"module"}