{"ast":null,"code":"import toDate from '../toDate/index.js';\n/**\r\n * @name getDay\r\n * @category Weekday Helpers\r\n * @summary Get the day of the week of the given date.\r\n *\r\n * @description\r\n * Get the day of the week of the given date.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the given date\r\n * @returns {Number} the day of week\r\n * @throws {TypeError} 1 argument required\r\n *\r\n * @example\r\n * // Which day of the week is 29 February 2012?\r\n * var result = getDay(new Date(2012, 1, 29))\r\n * //=> 3\r\n */\n\nexport default function getDay(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day;\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_fe/node_modules/date-fns/esm/getDay/index.js"],"names":["toDate","getDay","dirtyDate","arguments","length","TypeError","date","day"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,oBAAnB;AACA;;;;;;;;;;;;;;;;;;;;;;AAsBA,eAAe,SAASC,MAAT,CAAgBC,SAAhB,EAA2B;AACxC,MAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,UAAM,IAAIC,SAAJ,CAAc,mCAAmCF,SAAS,CAACC,MAA7C,GAAsD,UAApE,CAAN;AACD;;AAED,MAAIE,IAAI,GAAGN,MAAM,CAACE,SAAD,CAAjB;AACA,MAAIK,GAAG,GAAGD,IAAI,CAACL,MAAL,EAAV;AACA,SAAOM,GAAP;AACD","sourcesContent":["import toDate from '../toDate/index.js';\r\n/**\r\n * @name getDay\r\n * @category Weekday Helpers\r\n * @summary Get the day of the week of the given date.\r\n *\r\n * @description\r\n * Get the day of the week of the given date.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the given date\r\n * @returns {Number} the day of week\r\n * @throws {TypeError} 1 argument required\r\n *\r\n * @example\r\n * // Which day of the week is 29 February 2012?\r\n * var result = getDay(new Date(2012, 1, 29))\r\n * //=> 3\r\n */\r\n\r\nexport default function getDay(dirtyDate) {\r\n  if (arguments.length < 1) {\r\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\r\n  }\r\n\r\n  var date = toDate(dirtyDate);\r\n  var day = date.getDay();\r\n  return day;\r\n}"]},"metadata":{},"sourceType":"module"}