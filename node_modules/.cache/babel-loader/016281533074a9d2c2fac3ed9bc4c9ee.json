{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\src\\\\components\\\\subComponent\\\\DialogComponent.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  },\n  card: {\n    maxWidth: 500\n  },\n  media: {\n    height: 300\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const children = props.children,\n        classes = props.classes,\n        onClose = props.onClose,\n        other = _objectWithoutProperties(props, [\"children\", \"classes\", \"onClose\"]);\n\n  return React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, children), React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })));\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\n\nclass DialogComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.imageArea = (classes, message, title, base64Boolean) => {\n      const dataImage = message;\n      console.log(dataImage);\n      return React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(CardActionArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, base64Boolean && React.createElement(\"img\", {\n        alt: title,\n        className: classes.media,\n        src: `data:image/PNG;base64,${dataImage}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), !base64Boolean && React.createElement(CardMedia, {\n        className: classes.media,\n        image: dataImage,\n        title: title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })));\n    };\n\n    this.state = {\n      errorText: ''\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          type = _this$props.type,\n          title = _this$props.title,\n          message = _this$props.message,\n          onClose = _this$props.onClose;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Dialog, {\n      \"aria-labelledby\": \"customized-dialog-title\",\n      open: this.props.openDialog ? true : false,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"customized-dialog-title\",\n      onClose: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, title), React.createElement(DialogContent, {\n      dividers: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, type && type === 'image' && this.imageArea(classes, message, title, this.props.base64Boolean), type && type !== 'image' && React.createElement(Typography, {\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, message)), type && type !== 'image' && React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Button, {\n      autoFocus: true,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"No\"))));\n  }\n\n}\n\nDialogComponent.propTypes = {\n  title: PropTypes.string,\n  type: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func\n};\nexport default withStyles(styles)(DialogComponent);","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_fe/src/components/subComponent/DialogComponent.js"],"names":["React","PropTypes","withStyles","Button","Dialog","MuiDialogTitle","MuiDialogContent","MuiDialogActions","IconButton","CloseIcon","Typography","Card","CardActionArea","CardMedia","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","card","maxWidth","media","height","DialogTitle","props","children","classes","onClose","other","DialogContent","DialogActions","DialogComponent","Component","constructor","imageArea","message","title","base64Boolean","dataImage","console","log","state","errorText","render","type","openDialog","propTypes","string","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  card: {\r\n    maxWidth: 500,\r\n  },\r\n  media: {\r\n    height: 300,\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\n\r\nclass DialogComponent extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        errorText: '',\r\n      };\r\n    }\r\n\r\n    imageArea = (classes, message, title, base64Boolean) => {\r\n\r\n      const dataImage = message;\r\n      console.log(dataImage)\r\n      return (\r\n        <Card className={classes.card}>\r\n          <CardActionArea>\r\n            {\r\n              base64Boolean && \r\n              <img alt={title} className={classes.media} src={`data:image/PNG;base64,${dataImage}`}/>\r\n            }\r\n\r\n            {\r\n              !base64Boolean && \r\n              <CardMedia\r\n                className={classes.media}\r\n                image={dataImage}\r\n                title={title}\r\n              />\r\n            }\r\n            \r\n            \r\n          </CardActionArea>\r\n        </Card>\r\n      );\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            type,\r\n            title,\r\n            message,\r\n            onClose,\r\n        } = this.props;\r\n        \r\n        return ( \r\n            <div>\r\n                <Dialog aria-labelledby=\"customized-dialog-title\" open={this.props.openDialog ? true : false} fullWidth>\r\n                    <DialogTitle id=\"customized-dialog-title\" onClose={onClose}>\r\n                        {title}\r\n                    </DialogTitle>\r\n                    <DialogContent dividers>\r\n                        { type && type === 'image' && this.imageArea(classes, message, title, this.props.base64Boolean)}\r\n                        { type && type !== 'image' && \r\n                            <Typography gutterBottom>\r\n                                {message}\r\n                            </Typography>\r\n                        }\r\n                    </DialogContent>\r\n                    {\r\n                        type && type !== 'image' && \r\n                        <DialogActions>\r\n                            <Button autoFocus color=\"primary\">\r\n                                No\r\n                            </Button>\r\n                        </DialogActions>\r\n                    }\r\n                    \r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogComponent.propTypes = {\r\n    title: PropTypes.string,\r\n    type: PropTypes.string,\r\n    message: PropTypes.string,\r\n    onClose: PropTypes.func,\r\n};\r\n  \r\nexport default withStyles(styles)(DialogComponent);"]},"metadata":{},"sourceType":"module"}