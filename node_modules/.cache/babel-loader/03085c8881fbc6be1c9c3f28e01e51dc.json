{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\src\\\\components\\\\index\\\\login.js\";\nimport React from 'react';\nimport Logo from './../../support/img/logo.jpeg';\nimport './../../support/css/login.css';\nimport Loader from 'react-loader-spinner';\nimport swal from 'sweetalert';\nimport { Redirect } from 'react-router-dom';\nimport { keepLogin } from '../../1.actions';\nimport { connect } from 'react-redux';\nimport { postLoginBankDashboardFunction, getTokenBorrowerFunction, getUserProfileFunction, sendEmailFunction } from './saga';\nimport { setProfileUser } from './token';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this._isMounted = false;\n    this.state = {\n      loading: false,\n      isLogin: false,\n      open: false,\n      loadMail: false,\n      email: '',\n      error: ''\n    };\n\n    this.btnLogin = () => {\n      this.setState({\n        loading: true\n      });\n      var username = this.refs.username.value;\n      var password = this.refs.password.value;\n      const param = {\n        key: username,\n        password\n      };\n\n      if (username === \"\" || password === \"\") {\n        swal(\"Error\", \"Username and Password Empty\", \"error\");\n        this.setState({\n          loading: false\n        });\n      } else {\n        this.postLogin(param);\n      }\n    };\n\n    this.postLogin = async function (param) {\n      const data = await postLoginBankDashboardFunction(param, getTokenBorrowerFunction, getUserProfileFunction);\n\n      if (data) {\n        if (!data.error) {\n          let userPermission = data.dataPermission || {};\n          setProfileUser(JSON.stringify(userPermission));\n          this.setState({\n            loading: false,\n            isLogin: true\n          });\n        } else {\n          this.setState({\n            loading: false\n          });\n          swal(\"Gagal Login\", \"Cek ulang Username dan Password\", \"info\");\n        }\n      }\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleEmail = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.handleSend = () => {\n      this.setState({\n        loadMail: true\n      });\n\n      if (!this.state.email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n        this.setState({\n          error: \"Masukan format email yang benar\",\n          loadMail: false\n        });\n      } else {\n        let newData = {\n          email: this.state.email\n        };\n        this.sendEmail(newData);\n      }\n    };\n\n    this.sendEmail = async function (params) {\n      const data = await sendEmailFunction(params);\n\n      if (data) {\n        if (!data.error) {\n          swal(\"Email Terkirim\", \"Harap cek di \".concat(this.state.email), \"success\");\n          this.setState({\n            error: '',\n            open: false,\n            loadMail: false\n          });\n        } else {\n          this.setState({\n            error: data.error,\n            loadMail: false\n          });\n        }\n      }\n    };\n\n    this.renderBtnOrLoading = () => {\n      if (this.state.loading) {\n        return React.createElement(Loader, {\n          type: \"Circles\",\n          color: \"#00BFFF\",\n          height: \"10\",\n          width: \"10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"input\", {\n          type: \"button\",\n          className: \"loginBtn\",\n          onClick: this.btnLogin,\n          style: {\n            marginTop: \"20px\"\n          },\n          value: \"Sign in\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.renderBtnEmail = () => {\n      if (this.state.loadMail) {\n        return React.createElement(Button, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(Loader, {\n          type: \"ThreeDots\",\n          color: \"#00BFFF\",\n          height: \"10\",\n          width: \"10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(Button, {\n          onClick: this.handleSend,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, \"Kirim\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  } //LOGIN BUTTON\n\n\n  render() {\n    if (this.state.isLogin) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      });\n    } // alert('masuk')\n\n\n    return React.createElement(\"div\", {\n      className: \"App loginContainer mr-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Lupa Password?\", React.createElement(\"div\", {\n      style: {\n        color: \"red\",\n        fontSize: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, this.state.error)), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Harap isi Email yang sudah terdaftar, Kami akan mengirimkan password anda disana.\"), React.createElement(TextField, {\n      autoFocus: true,\n      margin: \"dense\",\n      id: \"name\",\n      label: \"Email Address\",\n      type: \"email\",\n      fullWidth: true,\n      onChange: this.handleEmail,\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Cancel\"), this.renderBtnEmail())), React.createElement(\"div\", {\n      className: \"row mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-6 col-md-6 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Bank Dashboard\")), React.createElement(\"div\", {\n      className: \"col-6 col-md-6 mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: Logo,\n      alt: \"logo\",\n      width: \"60%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      ref: \"username\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      ref: \"password\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), this.renderBtnOrLoading(), React.createElement(\"p\", {\n      style: {\n        marginTop: \"20px\",\n        cursor: \"pointer\"\n      },\n      onClick: this.handleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Forgot your password?\"))));\n  }\n\n}\n\nexport default connect(null, {\n  keepLogin\n})(Login);","map":{"version":3,"sources":["C:\\Users\\pc\\Desktop\\asira_fe\\src\\components\\index\\login.js"],"names":["React","Logo","Loader","swal","Redirect","keepLogin","connect","postLoginBankDashboardFunction","getTokenBorrowerFunction","getUserProfileFunction","sendEmailFunction","setProfileUser","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Login","Component","_isMounted","state","loading","isLogin","open","loadMail","email","error","btnLogin","setState","username","refs","value","password","param","key","postLogin","data","userPermission","dataPermission","JSON","stringify","handleOpen","handleClose","handleEmail","e","target","handleSend","match","newData","sendEmail","params","renderBtnOrLoading","marginTop","renderBtnEmail","componentDidMount","componentWillUnmount","render","color","fontSize","cursor"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Logo from './../../support/img/logo.jpeg'\r\nimport './../../support/css/login.css'\r\nimport Loader from 'react-loader-spinner'\r\nimport swal from 'sweetalert'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {keepLogin} from '../../1.actions'\r\nimport {connect} from 'react-redux'\r\nimport { postLoginBankDashboardFunction, getTokenBorrowerFunction, getUserProfileFunction ,sendEmailFunction} from './saga'\r\nimport { setProfileUser } from './token'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n \r\nclass Login extends React.Component{\r\n    _isMounted = false;\r\n\r\n    state={loading:false, isLogin : false,\r\n        open:false, loadMail:false,\r\n        email:'',\r\n        error:''}\r\n\r\n    componentDidMount(){\r\n        this._isMounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;     \r\n    }\r\n  \r\n    //LOGIN BUTTON\r\n    btnLogin = ()=>{\r\n        this.setState({loading:true})\r\n\r\n        var username=this.refs.username.value\r\n        var password=this.refs.password.value\r\n\r\n        const param = {\r\n            key: username,\r\n            password\r\n        }\r\n\r\n        if (username===\"\" || password===\"\"){\r\n            swal(\"Error\",\"Username and Password Empty\",\"error\")\r\n            this.setState({loading:false})\r\n\r\n        }else{\r\n            this.postLogin(param)\r\n        }\r\n      \r\n    } \r\n    \r\n    postLogin = async function (param) {\r\n        const data = await postLoginBankDashboardFunction(param, getTokenBorrowerFunction, getUserProfileFunction)\r\n\r\n            if(data) {\r\n                if(!data.error) {\r\n                    let userPermission = data.dataPermission || {};  \r\n                \r\n                    setProfileUser(JSON.stringify(userPermission))\r\n\r\n                    this.setState({loading:false , isLogin : true})\r\n                } else {\r\n                    this.setState({loading:false})\r\n                    swal(\"Gagal Login\",\"Cek ulang Username dan Password\",\"info\")\r\n                }\r\n            }\r\n    }\r\n    \r\n    //Forgot Password\r\n\r\n    handleOpen = ()=>{\r\n        this.setState({open:true})\r\n    }\r\n    handleClose = ()=>{\r\n        this.setState({open:false})\r\n    }\r\n    handleEmail=(e)=>{\r\n        this.setState({email:e.target.value})\r\n        \r\n    }\r\n    handleSend=()=>{\r\n        this.setState({loadMail:true})\r\n        if(!(this.state.email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i))){\r\n            this.setState({error:\"Masukan format email yang benar\",loadMail:false})\r\n        }else{\r\n            let newData = {\r\n                email:this.state.email\r\n            }\r\n            this.sendEmail(newData)\r\n        }\r\n    }\r\n    sendEmail = async function (params){\r\n        const data = await sendEmailFunction (params)\r\n        if(data){\r\n            if(!data.error){\r\n                swal(\"Email Terkirim\",`Harap cek di ${this.state.email}`,\"success\")\r\n                this.setState({error:'',open:false,loadMail:false})\r\n            }else{\r\n                this.setState({error:data.error,loadMail:false})\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    renderBtnOrLoading =()=>{\r\n        if (this.state.loading){\r\n            return (\r\n                <Loader \r\n                    type=\"Circles\"\r\n                    color=\"#00BFFF\"\r\n                    height=\"10\"\t\r\n                    width=\"10\"\r\n                />   \r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <input type=\"button\" className=\"loginBtn\" onClick={this.btnLogin} style={{marginTop:\"20px\"}} value=\"Sign in\"/> \r\n            )\r\n        }\r\n    }\r\n\r\n    renderBtnEmail =()=>{\r\n        if(this.state.loadMail){\r\n            return(\r\n                <Button color=\"primary\">\r\n                    <Loader \r\n                    type=\"ThreeDots\"\r\n                    color=\"#00BFFF\"\r\n                    height=\"10\"\t\r\n                    width=\"10\"\r\n                />   \r\n                </Button>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <Button onClick={this.handleSend} color=\"primary\">\r\n                    Kirim\r\n                </Button>\r\n            )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLogin){\r\n            return(\r\n                <Redirect to='/' />\r\n            )\r\n        }\r\n        // alert('masuk')\r\n       \r\n\r\n            return (\r\n                <div className=\"App loginContainer mr-3\">\r\n                      <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\r\n    <DialogTitle id=\"form-dialog-title\">Lupa Password? \r\n    <div style={{color:\"red\",fontSize:\"10px\"}}>\r\n             {this.state.error}\r\n    </div>\r\n    </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Harap isi Email yang sudah terdaftar, Kami akan mengirimkan password anda disana.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n            onChange={this.handleEmail}\r\n            value={this.state.email}\r\n            \r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          {this.renderBtnEmail()}\r\n        </DialogActions>\r\n      </Dialog>\r\n                    <div className=\"row mt-2\">\r\n                        <div className=\"col-6 col-md-6 mt-3\">\r\n                           <h5>Bank Dashboard</h5> \r\n                        </div>\r\n                        <div className=\"col-6 col-md-6 mt-2\">\r\n                            <img src={Logo} alt=\"logo\" width=\"60%\"></img>\r\n                        </div>\r\n                    </div>\r\n    \r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-12\">\r\n                            <hr/>\r\n                            <h2>Sign In</h2>\r\n                            <input type=\"text\" placeholder=\"Username\" ref=\"username\" className=\"form-control\"/>\r\n                            <input type=\"password\" placeholder=\"Password\" ref=\"password\" className=\"form-control\"/>\r\n                            {this.renderBtnOrLoading()}\r\n                           \r\n                            <p style={{marginTop:\"20px\",cursor:\"pointer\"}} onClick={this.handleOpen}>Forgot your password?</p>\r\n\r\n                       \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        }\r\n      \r\n       \r\n    \r\n}\r\n\r\nexport default connect(null,{keepLogin}) (Login);\r\n"]},"metadata":{},"sourceType":"module"}