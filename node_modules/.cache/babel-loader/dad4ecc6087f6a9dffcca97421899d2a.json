{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\src\\\\components\\\\index\\\\changePassword.js\";\nimport React from 'react';\nimport { Grid, Button, TextField } from '@material-ui/core';\nimport './../../support/css/login.css';\nimport { Redirect } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { changePasswordFunction, changeFirstLoginFunction } from './saga';\nimport Loader from 'react-loader-spinner';\n\nvar changePassword = /*#__PURE__*/function (_React$Component) {\n  _inherits(changePassword, _React$Component);\n\n  var _super = _createSuper(changePassword);\n\n  function changePassword() {\n    var _this;\n\n    _classCallCheck(this, changePassword);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._isMounted = false;\n    _this.state = {\n      loading: false,\n      errorMessage: '',\n      diKlik: false,\n      password1: '',\n      password2: ''\n    };\n\n    _this.btnChangePassword = function () {\n      _this.setState({\n        loading: true\n      });\n\n      var password1 = _this.state.password1;\n      var password2 = _this.state.password2;\n\n      if (password1.toLowerCase() !== password2.toLowerCase()) {\n        _this.setState({\n          errorMessage: \"Password tidak sesuai - Harap periksa kembali\",\n          loading: false\n        });\n      } else if (password1.trim() === '' || password2.trim() === '') {\n        _this.setState({\n          errorMessage: \"Field ada yang kosong - Harap periksa kembali\",\n          loading: false\n        });\n      } else {\n        if (!_this.props.type) {\n          var arr = window.location.href.split(\"?\");\n\n          if (arr.length > 1) {\n            var token = arr[1].slice(arr[1].indexOf('=') + 1, arr[1].length);\n            var param = {\n              token: token,\n              password: password1\n            };\n\n            _this.changePass(param);\n          } else {\n            _this.setState({\n              errorMessage: \"Token kosong/ Invalid\"\n            });\n          }\n        } else {\n          var _param = {\n            password: password1\n          };\n\n          _this.changePass(_param);\n        }\n      }\n    };\n\n    _this.handleChangeTextField = function (e) {\n      var label = e.target.id;\n\n      _this.setState(_defineProperty({}, label, e.target.value));\n    };\n\n    _this.changePass = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(param) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.props.type && this.props.type === 'firstlogin')) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 3;\n                return changeFirstLoginFunction(param);\n\n              case 3:\n                _context.t0 = _context.sent;\n                _context.next = 9;\n                break;\n\n              case 6:\n                _context.next = 8;\n                return changePasswordFunction(param);\n\n              case 8:\n                _context.t0 = _context.sent;\n\n              case 9:\n                data = _context.t0;\n\n                if (data) {\n                  if (!data.error) {\n                    localStorage.clear();\n                    swal(\"Berhasil\", \"Password berhasil dirubah\", \"success\");\n                    this._isMounted && this.setState({\n                      errorMessage: null,\n                      diKlik: true\n                    });\n                  } else {\n                    this._isMounted && this.setState({\n                      errorMessage: data.error,\n                      loading: false\n                    });\n                  }\n                }\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.renderBtnOrLoading = function () {\n      if (_this.state.loading) {\n        return /*#__PURE__*/React.createElement(Button, {\n          disableElevation: true,\n          color: \"primary\",\n          variant: \"contained\",\n          style: {\n            backgroundColor: '#20B889',\n            width: '70%',\n            color: 'white'\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Loader, {\n          type: \"ThreeDots\",\n          color: \"#00BFFF\",\n          height: \"10\",\n          width: \"10\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(Button, {\n          disableElevation: true,\n          variant: \"contained\",\n          style: {\n            backgroundColor: '#20B889',\n            width: '70%',\n            color: 'white'\n          },\n          onClick: _this.btnChangePassword,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }\n        }, \"Ubah Password\"));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(changePassword, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(newProps) {\n      this.setState({\n        errorMessage: newProps.error\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.diKlik) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 20\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: \"loginContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: require('./../../icons/LogoAsira.png'),\n        alt: \"\",\n        style: {\n          width: '60%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        className: \"loginBox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        style: {\n          marginTop: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 41\n        }\n      }, \"Ubah Password \"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"red\",\n          fontSize: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 41\n        }\n      }, this.state.errorMessage)), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        style: {\n          marginTop: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: 'password1',\n        type: \"password\",\n        size: \"small\",\n        margin: \"dense\",\n        variant: \"outlined\",\n        style: {\n          width: \"70%\"\n        },\n        label: 'Password Baru',\n        value: this.state.password1,\n        onChange: this.handleChangeTextField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        style: {\n          marginTop: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: 'password2',\n        type: \"password\",\n        size: \"small\",\n        margin: \"dense\",\n        variant: \"outlined\",\n        style: {\n          width: \"70%\"\n        },\n        label: 'Konfirmasi Password Baru',\n        onKeyPress: this.handleEnter,\n        value: this.state.password2,\n        onChange: this.handleChangeTextField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        style: {\n          marginTop: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 37\n        }\n      }, this.renderBtnOrLoading()), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        style: {\n          marginTop: 20,\n          marginBottom: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: require('./../../icons/powered.svg'),\n        alt: \"\",\n        style: {\n          width: '30%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 41\n        }\n      })))))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }\n      }));\n    }\n  }]);\n\n  return changePassword;\n}(React.Component);\n\nexport default changePassword;","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_fe/src/components/index/changePassword.js"],"names":["React","Grid","Button","TextField","Redirect","swal","changePasswordFunction","changeFirstLoginFunction","Loader","changePassword","_isMounted","state","loading","errorMessage","diKlik","password1","password2","btnChangePassword","setState","toLowerCase","trim","props","type","arr","window","location","href","split","length","token","slice","indexOf","param","password","changePass","handleChangeTextField","e","label","target","id","value","data","error","localStorage","clear","renderBtnOrLoading","backgroundColor","width","color","newProps","textAlign","require","marginTop","fontSize","handleEnter","marginBottom","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Grid, Button, TextField } from '@material-ui/core'\r\nimport './../../support/css/login.css'\r\nimport { Redirect  } from 'react-router-dom'\r\nimport swal from 'sweetalert'\r\nimport { changePasswordFunction, changeFirstLoginFunction} from './saga'\r\n\r\nimport Loader from 'react-loader-spinner'\r\n\r\nclass changePassword extends React.Component{\r\n    _isMounted = false\r\n\r\n    state = {\r\n        loading:false,\r\n        errorMessage:'',\r\n        diKlik:false,password1:'',password2:''\r\n    }\r\n\r\n    componentDidMount(){\r\n        this._isMounted=true\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this._isMounted=false\r\n    }\r\n    UNSAFE_componentWillReceiveProps(newProps){\r\n        this.setState({errorMessage:newProps.error})\r\n    }\r\n    btnChangePassword = ()=>{   \r\n    this.setState({loading:true})\r\n\r\n    const password1 = this.state.password1\r\n    const password2 = this.state.password2\r\n\r\n    if(password1.toLowerCase() !== password2.toLowerCase()){\r\n        this.setState({errorMessage:\"Password tidak sesuai - Harap periksa kembali\",loading:false})\r\n    }else if(password1.trim()==='' || password2.trim()===''){\r\n        this.setState({errorMessage:\"Field ada yang kosong - Harap periksa kembali\",loading:false})\r\n    }else {\r\n        \r\n        if(!this.props.type) {\r\n            const arr =  window.location.href.split(\"?\")\r\n\r\n            if (arr.length>1){\r\n                const token = arr[1].slice(arr[1].indexOf('=')+1,arr[1].length)\r\n                \r\n                const param = {\r\n                    token,\r\n                    password:password1\r\n                }\r\n                this.changePass(param)\r\n            }else{\r\n               this.setState({errorMessage:\"Token kosong/ Invalid\"})\r\n            }\r\n        } else {\r\n            const param = {\r\n                password:password1\r\n            }\r\n            this.changePass(param)\r\n        }\r\n        \r\n    }\r\n\r\n    }\r\n    \r\n    handleChangeTextField = (e) => {\r\n        const label = e.target.id;\r\n\r\n        this.setState({\r\n            [label] : e.target.value,\r\n        })\r\n    }\r\n\r\n     changePass = async function (param){\r\n         const data = this.props.type && this.props.type === 'firstlogin' ? await changeFirstLoginFunction(param) : await changePasswordFunction (param)\r\n         if(data){\r\n             if(!data.error){\r\n                localStorage.clear();\r\n                swal(\"Berhasil\",\"Password berhasil dirubah\",\"success\")\r\n                this._isMounted && this.setState({errorMessage:null,diKlik:true})\r\n             }else{\r\n                this._isMounted && this.setState({errorMessage:data.error,loading:false})\r\n             }\r\n         }\r\n\r\n     }\r\n    renderBtnOrLoading =()=>{\r\n        if (this.state.loading){\r\n            return ( \r\n                <Button disableElevation color=\"primary\"\r\n                variant='contained'\r\n                style={{backgroundColor: '#20B889', width:'70%', color:'white'}}\r\n                >\r\n                    <Loader \r\n                    type=\"ThreeDots\"\r\n                    color=\"#00BFFF\"\r\n                    height=\"10\"\t\r\n                    width=\"10\"\r\n                />   \r\n                </Button>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <Button disableElevation\r\n                variant='contained'\r\n                style={{backgroundColor: '#20B889', width:'70%', color:'white'}}\r\n                onClick={this.btnChangePassword}>\r\n                    <b>Ubah Password</b>\r\n                </Button>\r\n            )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.diKlik){\r\n            return <Redirect to='/'/>            \r\n        }\r\n        return(\r\n            <Grid container>\r\n                    <Grid item xs={12} sm={4}>\r\n                        \r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Grid container className='loginContainer'>\r\n                            <Grid item xs={12} sm={12} style={{textAlign:'center'}}>\r\n                                <img src={require('./../../icons/LogoAsira.png')} alt='' style={{width:'60%'}} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}  className='loginBox'>\r\n                                <Grid container>\r\n                                    <Grid item xs={12} sm={12} style={{marginTop:20}}>\r\n                                        <h5>Ubah Password </h5>\r\n                                        <div style={{color:\"red\",fontSize:\"10px\"}}>\r\n                                                {this.state.errorMessage}\r\n                                        </div>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12} style={{marginTop:20}}>\r\n                                        <TextField\r\n                                            id={'password1'}\r\n                                            type='password'\r\n                                            size=\"small\"\r\n                                            margin=\"dense\"\r\n                                            variant='outlined'\r\n                                            style={{width:\"70%\"}}\r\n                                            label={'Password Baru'}\r\n                                            value={this.state.password1}\r\n                                            onChange={this.handleChangeTextField}\r\n                                        /> \r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12} style={{marginTop:10}}>\r\n                                        <TextField\r\n                                            id={'password2'}\r\n                                            type='password'\r\n                                            size=\"small\"\r\n                                            margin=\"dense\"\r\n                                            variant='outlined'\r\n                                            style={{width:\"70%\"}}\r\n                                            label={'Konfirmasi Password Baru'}\r\n                                            onKeyPress={this.handleEnter}\r\n                                            value={this.state.password2}\r\n                                            onChange={this.handleChangeTextField}\r\n                                        />  \r\n                                        \r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={12} sm={12} style={{marginTop:20}}>\r\n                                        {this.renderBtnOrLoading()}\r\n                                        \r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12} style={{marginTop:20, marginBottom:20}}>\r\n                                        <img src={require('./../../icons/powered.svg')} alt='' style={{width:'30%'}} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                \r\n                            </Grid>\r\n                        </Grid>\r\n                        \r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        \r\n                    </Grid>\r\n\r\n                  \r\n                </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default changePassword;"]},"metadata":{},"sourceType":"module"}