{"ast":null,"code":"import toDate from '../toDate/index.js';\n/**\r\n * @name isFuture\r\n * @category Common Helpers\r\n * @summary Is the given date in the future?\r\n * @pure false\r\n *\r\n * @description\r\n * Is the given date in the future?\r\n *\r\n * > ⚠️ Please note that this function is not present in the FP submodule as\r\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the date to check\r\n * @returns {Boolean} the date is in the future\r\n * @throws {TypeError} 1 argument required\r\n *\r\n * @example\r\n * // If today is 6 October 2014, is 31 December 2014 in the future?\r\n * var result = isFuture(new Date(2014, 11, 31))\r\n * //=> true\r\n */\n\nexport default function isFuture(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return toDate(dirtyDate).getTime() > Date.now();\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_fe/node_modules/date-fns/esm/isFuture/index.js"],"names":["toDate","isFuture","dirtyDate","arguments","length","TypeError","getTime","Date","now"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,oBAAnB;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,eAAe,SAASC,QAAT,CAAkBC,SAAlB,EAA6B;AAC1C,MAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,UAAM,IAAIC,SAAJ,CAAc,mCAAmCF,SAAS,CAACC,MAA7C,GAAsD,UAApE,CAAN;AACD;;AAED,SAAOJ,MAAM,CAACE,SAAD,CAAN,CAAkBI,OAAlB,KAA8BC,IAAI,CAACC,GAAL,EAArC;AACD","sourcesContent":["import toDate from '../toDate/index.js';\r\n/**\r\n * @name isFuture\r\n * @category Common Helpers\r\n * @summary Is the given date in the future?\r\n * @pure false\r\n *\r\n * @description\r\n * Is the given date in the future?\r\n *\r\n * > ⚠️ Please note that this function is not present in the FP submodule as\r\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the date to check\r\n * @returns {Boolean} the date is in the future\r\n * @throws {TypeError} 1 argument required\r\n *\r\n * @example\r\n * // If today is 6 October 2014, is 31 December 2014 in the future?\r\n * var result = isFuture(new Date(2014, 11, 31))\r\n * //=> true\r\n */\r\n\r\nexport default function isFuture(dirtyDate) {\r\n  if (arguments.length < 1) {\r\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\r\n  }\r\n\r\n  return toDate(dirtyDate).getTime() > Date.now();\r\n}"]},"metadata":{},"sourceType":"module"}