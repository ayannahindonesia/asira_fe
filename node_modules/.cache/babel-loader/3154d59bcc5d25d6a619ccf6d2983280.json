{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\src\\\\components\\\\calonNasabah\\\\calonNasabahDetail.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Loader from 'react-loader-spinner';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { withStyles } from '@material-ui/styles';\nimport { compose } from 'redux';\nimport { getBorrowerFunction, getImageFunction, approveRejectFunction } from './saga';\nimport { getTokenClient } from '../index/token';\nimport GridDetail from '../subComponent/GridDetail';\nimport { formatNumber, handleFormatDate, checkPermission } from '../global/globalFunction';\nimport DialogComponent from './../subComponent/DialogComponent';\nimport { TextField, Grid } from '@material-ui/core';\nimport swal from 'sweetalert';\nimport TitleBar from '../subComponent/TitleBar';\nimport './../../support/css/profilenasabahdetail.css';\n\nconst styles = theme => ({\n  container: {\n    flexGrow: 1\n  }\n});\n\nclass CalonNasabahDetail extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this._isMounted = false;\n    this.state = {\n      diKlik: false,\n      errorMessage: '',\n      dataUser: {},\n      calonNasabahId: 0,\n      disabled: true,\n      loading: true,\n      dialog: false,\n      title: '',\n      message: '',\n      rekening: ''\n    };\n\n    this.isCategoryExist = category => {\n      if (category && category.toString().toLowerCase() === 'agent') {\n        return 'Agen';\n      } else if (category && category.toString().toLowerCase() === 'account_executive') {\n        return 'Account Executive';\n      }\n\n      return 'Personal';\n    };\n\n    this.refresh = async function () {\n      const param = {};\n      param.calonNasabahId = this.state.calonNasabahId;\n      const data = await getBorrowerFunction(param);\n\n      if (data) {\n        console.log(data);\n\n        if (!data.error) {\n          const dataUser = data.dataUser || {};\n          let flag = false;\n\n          if (dataUser && dataUser.status && dataUser.status === 'rejected') {\n            flag = true;\n          }\n\n          dataUser.category = this.isCategoryExist(dataUser.category);\n\n          if (dataUser && dataUser.bank_accountnumber && dataUser.bank_accountnumber.trim().length !== 0) {\n            flag = true;\n          }\n\n          this.setState({\n            diKlik: flag,\n            dataUser,\n            listRole: data.dataRole,\n            loading: false\n          });\n        } else {\n          this.setState({\n            errorMessage: data.error,\n            loading: false\n          });\n        }\n      }\n    };\n\n    this.btnCancel = () => {\n      this.setState({\n        diKlik: true\n      });\n    };\n\n    this.handleDialog = e => {\n      let label = e.target.value;\n      let title = '';\n\n      if (label.toLowerCase().includes('ktp')) {\n        title = 'KTP';\n      } else if (label.toLowerCase().includes('npwp')) {\n        title = 'NPWP';\n      }\n\n      console.log(title);\n      this.setState({\n        dialog: true,\n        title\n      }, () => {\n        this.getImage(this.state.title);\n      });\n    };\n\n    this.getImage = async function (title) {\n      let data = {\n        idImage: 0\n      };\n\n      if (title.toLowerCase().includes('ktp')) {\n        data.idImage = this.state.dataUser && this.state.dataUser.idcard_image && this.state.dataUser.idcard_image.Int64 || 0;\n      } else if (title.toLowerCase().includes('npwp')) {\n        data.idImage = this.state.dataUser && this.state.dataUser.taxid_image && this.state.dataUser.idcard_image.Int64 || 0;\n      }\n\n      data = await getImageFunction(data);\n\n      if (data) {\n        if (!data.error) {\n          let message = data.image && data.image.image_string;\n          this.setState({\n            message\n          });\n        } else {\n          this.setState({\n            errorMessage: data.error,\n            loading: false\n          });\n        }\n      }\n    };\n\n    this.onChangeTextField = e => {\n      let value = e.target.value;\n      let labelName = e.target.id;\n      let flag = true;\n\n      if (value.includes(' ') || value.includes('\\'') || value.includes('\"') || value.includes(',')) {\n        flag = false;\n      }\n\n      if (labelName === 'rekening' && isNaN(value)) {\n        flag = false;\n      }\n\n      if (flag) {\n        this.setState({\n          [labelName]: value\n        });\n      }\n    };\n\n    this.permissionApproval = () => {\n      let flag = true;\n\n      if (this.state.dataUser && this.state.dataUser.status && this.state.dataUser.status === 'reject') {\n        flag = false;\n      }\n\n      if (!checkPermission('lender_prospective_borrower_approval')) {\n        flag = false;\n      }\n\n      return flag;\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        dialog: false\n      });\n    };\n\n    this.btnApproveReject = e => {\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n      const statusNasabah = e.target.value && e.target.value.toString().toLowerCase() === 'terima' ? 'approve' : 'reject';\n\n      if (this.validate(statusNasabah)) {\n        this.approveReject(statusNasabah);\n      }\n    };\n\n    this.validate = statusNasabah => {\n      let flag = true;\n\n      if (statusNasabah && statusNasabah === 'approve' && (!this.state.rekening || this.state.rekening && this.state.rekening.length === 0)) {\n        flag = false;\n        this.setState({\n          errorMessage: 'Mohon mengisi nomor rekening dengan benar',\n          loading: false\n        });\n      }\n\n      return flag;\n    };\n\n    this.approveReject = async function (statusNasabah) {\n      const param = {\n        id: this.state.dataUser && this.state.dataUser.id,\n        account_number: this.state.rekening,\n        statusApproval: statusNasabah\n      };\n      const data = await approveRejectFunction(param);\n\n      if (data) {\n        if (!data.error) {\n          let stringCalonNasabah = 'Reject';\n\n          if (statusNasabah === 'approve') {\n            stringCalonNasabah = 'Approve';\n          }\n\n          swal(\"Success\", `${stringCalonNasabah} Calon Nasabah Berhasil`, \"success\");\n          this.setState({\n            loading: false,\n            diKlik: true\n          });\n        } else {\n          this.setState({\n            errorMessage: data.error,\n            loading: false\n          });\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.setState({\n      calonNasabahId: this.props.match.params.id\n    }, () => {\n      this.refresh();\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    this.setState({\n      errorMessage: newProps.error\n    });\n  }\n\n  render() {\n    if (this.state.diKlik) {\n      return React.createElement(Redirect, {\n        to: \"/listCalonNasabah\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      });\n    } else if (this.state.loading) {\n      return React.createElement(\"div\", {\n        key: \"zz\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        align: \"center\",\n        colSpan: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        type: \"Circles\",\n        color: \"#00BFFF\",\n        height: \"40\",\n        width: \"40\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      })));\n    } else if (getTokenClient()) {\n      return React.createElement(Grid, {\n        container: true,\n        className: \"containerDetail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        style: {\n          maxHeight: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(TitleBar, {\n        title: 'Calon Nasabah - Detail',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        style: {\n          padding: 10,\n          marginBottom: 20,\n          boxShadow: '0px -3px 25px rgba(99,167,181,0.24)',\n          WebkitBoxShadow: '0px -3px 25px rgba(99,167,181,0.24)',\n          borderRadius: '15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, this.state.errorMessage), React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        style: {\n          marginBottom: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        sm: 2,\n        xs: 12,\n        style: {\n          marginBottom: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"buttonCustomAsira\",\n        type: \"button\",\n        style: {\n          width: \"100%\"\n        },\n        value: \"KTP Detail\",\n        onClick: this.handleDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        sm: 2,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"buttonCustomAsira\",\n        type: \"button\",\n        style: {\n          width: \"100%\"\n        },\n        value: \"NPWP Detail\",\n        onClick: this.handleDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      })))), React.createElement(GridDetail, {\n        gridLabel: [4, 3, 5],\n        background: true,\n        noTitleLine: true,\n        label: [['Id Nasabah', 'Bank Nasabah'], ['Kategori', 'Agen / AE'], ['Tanggal Register']],\n        data: this.state.dataUser && [[this.state.dataUser.id, this.state.dataUser.bank_name], [this.state.dataUser.category, this.state.dataUser.agent_name && `${this.state.dataUser.agent_name} ` + (this.state.dataUser.agent_provider_name && this.state.dataUser.agent_provider_name.trim().length !== 0 ? `(${this.state.dataUser.agent_provider_name})` : '')], [this.state.dataUser.created_time && handleFormatDate(this.state.dataUser.created_time)]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }), React.createElement(GridDetail, {\n        title: \"Informasi Pribadi\",\n        gridLabel: [4, 5, 7],\n        label: [['Nama', 'Jenis Kelamin', 'No KTP', 'No NPWP', 'Email'], ['Tanggal Lahir', 'Tempat Lahir', 'Pendidikan', 'Nama Ibu Kandung', 'No HP'], ['Status Pernikahan', 'Nama Pasangan', 'Tanggal Lahir Pasangan', 'Pendidikan Pasangan', 'Tanggungan (orang)']],\n        data: this.state.dataUser && [[this.state.dataUser.fullname, this.state.dataUser.gender && (this.state.dataUser.gender === 'M' ? 'Pria' : 'Perempuan'), this.state.dataUser.idcard_number, this.state.dataUser.taxid_number, this.state.dataUser.email], [this.state.dataUser.birthday && handleFormatDate(this.state.dataUser.birthday), this.state.dataUser.birthplace, this.state.dataUser.last_education, this.state.dataUser.mother_name, this.state.dataUser.phone], [this.state.dataUser.marriage_status && this.state.dataUser.marriage_status === 'married' ? 'Menikah' : 'Belum Menikah', this.state.dataUser.marriage_status && this.state.dataUser.marriage_status === 'married' ? this.state.dataUser.spouse_name : '-', this.state.dataUser.marriage_status && this.state.dataUser.marriage_status === 'married' ? this.state.dataUser.spouse_birthday && handleFormatDate(this.state.dataUser.spouse_birthday) || '-' : '-', this.state.dataUser.marriage_status && this.state.dataUser.marriage_status === 'married' ? this.state.dataUser.spouse_lasteducation : '-', this.state.dataUser.dependants > 5 ? \"Lebih dari 5\" : this.state.dataUser.dependants]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }), React.createElement(GridDetail, {\n        title: \"Data Tempat Tinggal\",\n        gridLabel: [4, 5, 7],\n        label: [['Alamat', 'Provinsi', 'Kota', 'RT / RW', 'No Telp Rumah'], ['Kecamatan', 'Kelurahan', 'Status Tempat Tinggal', 'Lama Menempati Rumah'], []],\n        data: this.state.dataUser && [[this.state.dataUser.address, this.state.dataUser.province, this.state.dataUser.city, `${this.state.dataUser.neighbour_association} / ${this.state.dataUser.hamlets} `, this.state.dataUser.home_phonenumber], [this.state.dataUser.subdistrict, this.state.dataUser.urban_village, this.state.dataUser.home_ownership, this.state.dataUser.lived_for && `${this.state.dataUser.lived_for} tahun`], []],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }), React.createElement(GridDetail, {\n        title: \"Info Pekerjaan\",\n        gridLabel: [4, 5, 7],\n        label: [['Jenis Pekerjaan', 'No Induk Pegawai', 'Nama Instansi', 'Alamat Kantor'], ['Jabatan', 'Lama Bekerja', 'Nama Atasan', 'No Tlp Kantor'], ['Gaji (perbulan)', 'Pendapatan Lain', 'Sumber Pendapatan Lain']],\n        data: this.state.dataUser && [[this.state.dataUser.field_of_work, this.state.dataUser.employee_id, this.state.dataUser.employer_name, this.state.dataUser.employer_address], [this.state.dataUser.occupation, this.state.dataUser.been_workingfor && `${this.state.dataUser.been_workingfor} tahun`, this.state.dataUser.direct_superiorname, this.state.dataUser.employer_number], [this.state.dataUser.monthly_income && `Rp ${formatNumber(this.state.dataUser.monthly_income, true)}`, this.state.dataUser.other_income && `Rp ${formatNumber(this.state.dataUser.other_income, true)}`, this.state.dataUser.other_incomesource]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }), React.createElement(GridDetail, {\n        title: \"Lain lain\",\n        gridLabel: [7],\n        label: [['Nama Orang Tidak Serumah Yang Bisa Dihubungi', 'Hubungan', 'Alamat Rumah', 'No Tlp', 'No HP'], []],\n        data: this.state.dataUser && [[this.state.dataUser.related_personname, this.state.dataUser.related_relation, this.state.dataUser.related_address, this.state.dataUser.related_homenumber, this.state.dataUser.related_phonenumber], []],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        container: true,\n        style: {\n          paddingLeft: '10px',\n          marginBottom: '10px',\n          border: \"0.5px solid #75A9D1\",\n          paddingTop: \"10px\",\n          paddingBottom: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        sm: 3,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }, \"Nomor Rekening\"), React.createElement(Grid, {\n        item: true,\n        sm: 3,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"rekening\",\n        onChange: this.onChangeTextField,\n        value: this.state.rekening,\n        hiddenLabel: true,\n        fullWidth: true,\n        style: {\n          border: '1px groove',\n          paddingLeft: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col-sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }, React.createElement(DialogComponent, {\n        title: this.state.title,\n        openDialog: this.state.dialog,\n        message: this.state.message,\n        type: \"image\",\n        base64Boolean: true,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, this.permissionApproval() && React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Terima\",\n        className: \"btn\",\n        onClick: this.btnApproveReject,\n        style: {\n          backgroundColor: \"green\",\n          color: \"white\",\n          marginRight: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }), this.permissionApproval() && React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Tolak\",\n        className: \"btn\",\n        onClick: this.btnApproveReject,\n        style: {\n          backgroundColor: \"red\",\n          color: \"white\",\n          marginRight: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Kembali\",\n        className: \"btn\",\n        onClick: this.btnCancel,\n        style: {\n          backgroundColor: \"grey\",\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      })))));\n    } else if (!getTokenClient()) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport function mapDispatchToProps(dispatch) {\n  return {//   getSourceTransaction: () => {\n    //     dispatch(sourceTransactionRequest());\n    //   },\n    //   handleRedirect: (route) => {\n    //     dispatch(push(route));\n    //   },\n  };\n}\nexport const mapStateToProps = createStructuredSelector({// user: getUserState(),\n  // menu: getMenu(),\n  // fetching: getFetchStatus(),\n});\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nconst withStyle = withStyles(styles);\nexport default compose(withConnect, withStyle, withRouter)(CalonNasabahDetail);","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_fe/src/components/calonNasabah/calonNasabahDetail.js"],"names":["React","Redirect","Loader","createStructuredSelector","connect","withRouter","withStyles","compose","getBorrowerFunction","getImageFunction","approveRejectFunction","getTokenClient","GridDetail","formatNumber","handleFormatDate","checkPermission","DialogComponent","TextField","Grid","swal","TitleBar","styles","theme","container","flexGrow","CalonNasabahDetail","Component","_isMounted","state","diKlik","errorMessage","dataUser","calonNasabahId","disabled","loading","dialog","title","message","rekening","isCategoryExist","category","toString","toLowerCase","refresh","param","data","console","log","error","flag","status","bank_accountnumber","trim","length","setState","listRole","dataRole","btnCancel","handleDialog","e","label","target","value","includes","getImage","idImage","idcard_image","Int64","taxid_image","image","image_string","onChangeTextField","labelName","id","isNaN","permissionApproval","handleClose","btnApproveReject","statusNasabah","validate","approveReject","account_number","statusApproval","stringCalonNasabah","componentDidMount","props","match","params","componentWillUnmount","UNSAFE_componentWillReceiveProps","newProps","render","maxHeight","padding","marginBottom","boxShadow","WebkitBoxShadow","borderRadius","color","width","bank_name","agent_name","agent_provider_name","created_time","fullname","gender","idcard_number","taxid_number","email","birthday","birthplace","last_education","mother_name","phone","marriage_status","spouse_name","spouse_birthday","spouse_lasteducation","dependants","address","province","city","neighbour_association","hamlets","home_phonenumber","subdistrict","urban_village","home_ownership","lived_for","field_of_work","employee_id","employer_name","employer_address","occupation","been_workingfor","direct_superiorname","employer_number","monthly_income","other_income","other_incomesource","related_personname","related_relation","related_address","related_homenumber","related_phonenumber","paddingLeft","border","paddingTop","paddingBottom","backgroundColor","marginRight","mapDispatchToProps","dispatch","mapStateToProps","withConnect","withStyle"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Loader from 'react-loader-spinner'\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { compose } from 'redux';\r\nimport { getBorrowerFunction, getImageFunction, approveRejectFunction } from './saga'\r\nimport { getTokenClient } from '../index/token';\r\nimport GridDetail from '../subComponent/GridDetail';\r\nimport { formatNumber, handleFormatDate, checkPermission } from '../global/globalFunction';\r\nimport DialogComponent from './../subComponent/DialogComponent'\r\nimport { TextField, Grid } from '@material-ui/core';\r\nimport swal from 'sweetalert';\r\nimport TitleBar from '../subComponent/TitleBar';\r\nimport './../../support/css/profilenasabahdetail.css'\r\n\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n      flexGrow: 1,\r\n    },\r\n  });\r\n\r\nclass CalonNasabahDetail extends React.Component{\r\n    _isMounted = false;\r\n\r\n    state = {\r\n      diKlik:false,\r\n      errorMessage:'',\r\n      dataUser: {},\r\n      calonNasabahId: 0,\r\n      disabled: true,\r\n      loading: true,\r\n      dialog: false,\r\n      title: '',\r\n      message: '',\r\n      rekening: '',\r\n    };\r\n\r\n    componentDidMount(){\r\n      this._isMounted = true;\r\n\r\n      this.setState({\r\n        calonNasabahId: this.props.match.params.id,\r\n      },() => {\r\n        this.refresh();\r\n      })\r\n      \r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this._isMounted = false;\r\n    }\r\n\r\n    isCategoryExist = (category) => {\r\n      if(category && category.toString().toLowerCase() === 'agent') {\r\n        return 'Agen'\r\n      } else if(category && category.toString().toLowerCase() === 'account_executive') {\r\n        return 'Account Executive'\r\n      } \r\n\r\n      return 'Personal';\r\n    }\r\n\r\n    refresh = async function(){\r\n      const param = {};\r\n      param.calonNasabahId = this.state.calonNasabahId;\r\n\r\n      const data = await getBorrowerFunction(param);\r\n      \r\n\r\n      if(data) {\r\n        console.log(data)\r\n          if(!data.error) {\r\n            const dataUser = data.dataUser || {};\r\n            let flag = false;\r\n\r\n            if(dataUser && dataUser.status && dataUser.status === 'rejected') {\r\n              flag = true\r\n            }\r\n            \r\n            dataUser.category = this.isCategoryExist(dataUser.category) ;\r\n\r\n            if(dataUser && dataUser.bank_accountnumber && dataUser.bank_accountnumber.trim().length !== 0) {\r\n              flag = true\r\n            }\r\n\r\n            this.setState({\r\n              diKlik: flag,\r\n              dataUser,\r\n              listRole: data.dataRole,\r\n              loading: false,\r\n            })\r\n          } else {\r\n            this.setState({\r\n              errorMessage: data.error,\r\n              loading: false,\r\n            })\r\n          }      \r\n      }\r\n    }\r\n\r\n    btnCancel = ()=>{\r\n      this.setState({diKlik:true})\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(newProps){\r\n      this.setState({errorMessage:newProps.error})\r\n    }\r\n\r\n    handleDialog = (e) => {\r\n      let label = e.target.value\r\n      let title = '';\r\n\r\n      if(label.toLowerCase().includes('ktp')) {\r\n        title = 'KTP'\r\n      } else if(label.toLowerCase().includes('npwp')) {\r\n        title = 'NPWP'\r\n      }\r\n\r\n      console.log(title)\r\n      this.setState({\r\n        dialog: true,\r\n        title,\r\n      }, () => {\r\n        this.getImage(this.state.title)\r\n      })\r\n    }\r\n\r\n    getImage = async function(title) {\r\n      let data = {\r\n        idImage: 0,\r\n      };\r\n\r\n      if(title.toLowerCase().includes('ktp')) {\r\n        data.idImage = (this.state.dataUser && this.state.dataUser.idcard_image && this.state.dataUser.idcard_image.Int64) || 0\r\n      } else if(title.toLowerCase().includes('npwp')) {\r\n        data.idImage = (this.state.dataUser && this.state.dataUser.taxid_image && this.state.dataUser.idcard_image.Int64) || 0\r\n      }\r\n\r\n      data = await getImageFunction(data)\r\n\r\n      if(data) {\r\n        if(!data.error) {\r\n          let message = data.image && data.image.image_string;\r\n\r\n          this.setState({\r\n            message,\r\n          })\r\n        } else {\r\n          this.setState({\r\n            errorMessage: data.error,\r\n            loading: false,\r\n          })\r\n        }      \r\n      }\r\n    }\r\n\r\n    onChangeTextField = (e) => {\r\n      let value = e.target.value;\r\n      let labelName = e.target.id;\r\n      let flag = true;\r\n\r\n      if(value.includes(' ') || value.includes('\\'') || value.includes('\"') || value.includes(',') ) {\r\n        flag = false\r\n      }\r\n\r\n      if(labelName === 'rekening' && isNaN(value)) {    \r\n        flag = false \r\n      }\r\n      \r\n      if(flag) {\r\n        this.setState({\r\n          [labelName]: value,\r\n        })\r\n      } \r\n    }\r\n\r\n    permissionApproval = () => {\r\n      let flag = true;\r\n\r\n      if(this.state.dataUser && this.state.dataUser.status && this.state.dataUser.status === 'reject') {\r\n        flag = false;\r\n      }\r\n\r\n      if(!checkPermission('lender_prospective_borrower_approval')) {\r\n        flag = false;\r\n      }\r\n\r\n      return flag;\r\n    }\r\n\r\n\r\n    handleClose = () => {\r\n      this.setState({dialog: false})\r\n    }\r\n\r\n    btnApproveReject = (e) => {\r\n      this.setState({loading: true, errorMessage: ''})\r\n      const statusNasabah = e.target.value && e.target.value.toString().toLowerCase() === 'terima' ? 'approve' : 'reject'\r\n\r\n      if(this.validate(statusNasabah)) {\r\n        this.approveReject(statusNasabah)\r\n      }\r\n    }\r\n\r\n    validate = (statusNasabah) => {\r\n      let flag = true;\r\n\r\n      if(statusNasabah && statusNasabah === 'approve' && (!this.state.rekening || (this.state.rekening && this.state.rekening.length === 0))) {\r\n        flag = false;\r\n        this.setState({errorMessage: 'Mohon mengisi nomor rekening dengan benar', loading: false})\r\n      }\r\n\r\n      return flag;\r\n    }\r\n\r\n    approveReject = async function(statusNasabah) {\r\n      const param = {\r\n        id: this.state.dataUser && this.state.dataUser.id,\r\n        account_number: this.state.rekening,\r\n        statusApproval: statusNasabah,\r\n      }\r\n\r\n      const data = await approveRejectFunction(param);\r\n\r\n      if(data) {\r\n        if(!data.error) {\r\n          let stringCalonNasabah = 'Reject'\r\n\r\n          if(statusNasabah === 'approve') {\r\n            stringCalonNasabah = 'Approve'\r\n          }\r\n\r\n          swal(\"Success\",`${stringCalonNasabah} Calon Nasabah Berhasil`,\"success\")\r\n\r\n          this.setState({\r\n            loading: false,\r\n            diKlik: true,\r\n          })\r\n        } else {\r\n          this.setState({\r\n            errorMessage: data.error,\r\n            loading: false,\r\n          })\r\n        }      \r\n      }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.diKlik){\r\n            return <Redirect to='/listCalonNasabah'/>            \r\n        } else if (this.state.loading){\r\n          return  (\r\n            <div  key=\"zz\">\r\n              <div align=\"center\" colSpan={6}>\r\n                <Loader \r\n                  type=\"Circles\"\r\n                  color=\"#00BFFF\"\r\n                  height=\"40\"\t\r\n                  width=\"40\"\r\n                />   \r\n              </div>\r\n            </div>\r\n          )\r\n        } else if(getTokenClient()){\r\n            return(\r\n              <Grid container className=\"containerDetail\">\r\n                <Grid item sm={12} xs={12} style={{maxHeight:50}}>\r\n                    <TitleBar\r\n                        title={'Calon Nasabah - Detail'}\r\n                    />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  sm={12} xs={12}\r\n                  style={{padding:10, marginBottom:20, boxShadow:'0px -3px 25px rgba(99,167,181,0.24)', WebkitBoxShadow:'0px -3px 25px rgba(99,167,181,0.24)', borderRadius:'15px'}}                  \r\n                >\r\n\r\n                  <Grid container>\r\n\r\n                    <Grid item sm={12} xs={12} style={{color:'red'}}>\r\n                      {this.state.errorMessage}\r\n                    </Grid>\r\n\r\n                    <Grid item sm={12} xs={12} style={{marginBottom:\"10px\"}}>\r\n                      <Grid container spacing={2}>\r\n                          <Grid item sm={2} xs={12} style={{marginBottom:'10px'}}>\r\n                              <input className='buttonCustomAsira' type=\"button\" style={{width:\"100%\"}} value=\"KTP Detail\" onClick={this.handleDialog}></input>                               \r\n                          </Grid>\r\n                          <Grid item sm={2} xs={12} >\r\n                              <input className='buttonCustomAsira' type=\"button\" style={{width:\"100%\"}} value=\"NPWP Detail\" onClick={this.handleDialog}></input>\r\n                          </Grid>\r\n                      </Grid>                        \r\n                    </Grid>\r\n\r\n\r\n                    <GridDetail\r\n                      gridLabel={[4,3,5]}\r\n                      background\r\n                      noTitleLine\r\n                      label={[\r\n                        ['Id Nasabah','Bank Nasabah'],\r\n                        ['Kategori','Agen / AE'],\r\n                        ['Tanggal Register'],\r\n                      ]}\r\n                      data={this.state.dataUser && [\r\n                        [\r\n                          this.state.dataUser.id, \r\n                          this.state.dataUser.bank_name\r\n                        ],\r\n                        [\r\n                          this.state.dataUser.category,\r\n                          this.state.dataUser.agent_name && (`${this.state.dataUser.agent_name} ` + (this.state.dataUser.agent_provider_name && this.state.dataUser.agent_provider_name.trim().length !== 0 ? `(${this.state.dataUser.agent_provider_name})` : '')),\r\n                        ],\r\n                        [\r\n                          this.state.dataUser.created_time && handleFormatDate(this.state.dataUser.created_time)\r\n                        ],\r\n                      ]}                 \r\n                    />\r\n\r\n                    <GridDetail\r\n                      title=\"Informasi Pribadi\"\r\n                      gridLabel={[4,5,7]}\r\n                      label={[\r\n                        ['Nama','Jenis Kelamin','No KTP','No NPWP','Email'],\r\n                        ['Tanggal Lahir','Tempat Lahir','Pendidikan','Nama Ibu Kandung','No HP'],\r\n                        ['Status Pernikahan','Nama Pasangan','Tanggal Lahir Pasangan','Pendidikan Pasangan','Tanggungan (orang)'],\r\n                      ]}\r\n                      data={this.state.dataUser && [\r\n                        [\r\n                          this.state.dataUser.fullname, \r\n                          this.state.dataUser.gender && (this.state.dataUser.gender === 'M' ? 'Pria' : 'Perempuan'),\r\n                          this.state.dataUser.idcard_number,\r\n                          this.state.dataUser.taxid_number,\r\n                          this.state.dataUser.email\r\n                        ],\r\n                        [\r\n                          this.state.dataUser.birthday && handleFormatDate(this.state.dataUser.birthday),\r\n                          this.state.dataUser.birthplace,\r\n                          this.state.dataUser.last_education,\r\n                          this.state.dataUser.mother_name,\r\n                          this.state.dataUser.phone\r\n                        ],\r\n                        [\r\n\r\n                          this.state.dataUser.marriage_status && this.state.dataUser.marriage_status === 'married' ? 'Menikah' : 'Belum Menikah',\r\n                          this.state.dataUser.marriage_status && this.state.dataUser.marriage_status === 'married' ? this.state.dataUser.spouse_name : '-',\r\n                          this.state.dataUser.marriage_status && this.state.dataUser.marriage_status === 'married' ? ((this.state.dataUser.spouse_birthday && handleFormatDate(this.state.dataUser.spouse_birthday)) || '-') : '-',\r\n                          this.state.dataUser.marriage_status && this.state.dataUser.marriage_status === 'married' ? this.state.dataUser.spouse_lasteducation : '-',\r\n                          this.state.dataUser.dependants > 5?\"Lebih dari 5\":this.state.dataUser.dependants\r\n                        ],\r\n                      ]}                 \r\n                    />\r\n\r\n                    <GridDetail\r\n                      title=\"Data Tempat Tinggal\"\r\n                      gridLabel={[4,5,7]}\r\n                      label={[\r\n                        ['Alamat','Provinsi','Kota','RT / RW','No Telp Rumah'],\r\n                        ['Kecamatan','Kelurahan','Status Tempat Tinggal','Lama Menempati Rumah'],\r\n                        [],\r\n                      ]}\r\n                      data={this.state.dataUser && [\r\n                        [\r\n                          this.state.dataUser.address, \r\n                          this.state.dataUser.province,\r\n                          this.state.dataUser.city,\r\n                          `${this.state.dataUser.neighbour_association} / ${this.state.dataUser.hamlets} `,\r\n                          this.state.dataUser.home_phonenumber\r\n                        ],\r\n                        [\r\n                          this.state.dataUser.subdistrict,\r\n                          this.state.dataUser.urban_village,\r\n                          this.state.dataUser.home_ownership,\r\n                          this.state.dataUser.lived_for && `${this.state.dataUser.lived_for} tahun`,\r\n                        ],\r\n                        [],\r\n                      ]}                 \r\n                    />\r\n\r\n                    <GridDetail\r\n                      title=\"Info Pekerjaan\"\r\n                      gridLabel={[4,5,7]}\r\n                      label={[\r\n                        ['Jenis Pekerjaan','No Induk Pegawai','Nama Instansi','Alamat Kantor'],\r\n                        ['Jabatan','Lama Bekerja','Nama Atasan','No Tlp Kantor'],\r\n                        ['Gaji (perbulan)','Pendapatan Lain','Sumber Pendapatan Lain',],\r\n                      ]}\r\n                      data={this.state.dataUser && [\r\n                        [\r\n                          this.state.dataUser.field_of_work, \r\n                          this.state.dataUser.employee_id,\r\n                          this.state.dataUser.employer_name,\r\n                          this.state.dataUser.employer_address\r\n                        ],\r\n                        [\r\n                          this.state.dataUser.occupation,\r\n                          this.state.dataUser.been_workingfor && `${this.state.dataUser.been_workingfor} tahun`,\r\n                          this.state.dataUser.direct_superiorname,\r\n                          this.state.dataUser.employer_number,\r\n                        ],\r\n                        [\r\n                          this.state.dataUser.monthly_income && `Rp ${formatNumber(this.state.dataUser.monthly_income,true)}`,\r\n                          this.state.dataUser.other_income && `Rp ${formatNumber(this.state.dataUser.other_income,true)}`,\r\n                          this.state.dataUser.other_incomesource,\r\n                        ],\r\n                      ]}                 \r\n                    />\r\n\r\n                    <GridDetail\r\n                      title=\"Lain lain\"\r\n                      gridLabel={[7]}\r\n                      label={[\r\n                        ['Nama Orang Tidak Serumah Yang Bisa Dihubungi','Hubungan','Alamat Rumah','No Tlp','No HP'],\r\n                        []\r\n                      ]}\r\n                      data={this.state.dataUser && [\r\n                        [\r\n                          this.state.dataUser.related_personname, \r\n                          this.state.dataUser.related_relation, \r\n                          this.state.dataUser.related_address,\r\n                          this.state.dataUser.related_homenumber,\r\n                          this.state.dataUser.related_phonenumber\r\n                        ],\r\n                        []\r\n                      ]}                 \r\n                    />\r\n\r\n                    <Grid container style={{paddingLeft:'10px', marginBottom:'10px', border:\"0.5px solid #75A9D1\",paddingTop:\"10px\",paddingBottom:\"10px\"}}>\r\n                      <Grid item sm={3} xs={3}>\r\n                        Nomor Rekening\r\n                      </Grid>\r\n\r\n                      <Grid item sm={3} xs={3}>\r\n                        <TextField\r\n                          id=\"rekening\"\r\n                          onChange={this.onChangeTextField}\r\n                          value={this.state.rekening}\r\n                          hiddenLabel\r\n                          fullWidth\r\n                          style={{border:'1px groove', paddingLeft:'5px'}}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n\r\n                    <div className=\"col-sm-12\">\r\n                      <DialogComponent\r\n                        title={this.state.title}\r\n                        openDialog={this.state.dialog}\r\n                        message={this.state.message}\r\n                        type='image'\r\n                        base64Boolean\r\n                        onClose={this.handleClose}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* <div className=\"col-sm-12\">\r\n                      <DialogComponent\r\n                        title={this.state.title}\r\n                        openDialog={this.state.dialog}\r\n                        message={this.state.message}\r\n                        type='image'\r\n                        onClose={this.handleClose}\r\n                        \r\n                      />\r\n                    </div> */}\r\n\r\n                        \r\n                    <div className=\"col-sm-12\"  >\r\n                      { this.permissionApproval() && <input type=\"button\" value=\"Terima\" className=\"btn\" onClick={this.btnApproveReject} style={{backgroundColor:\"green\",color:\"white\", marginRight:'10px'}}/>}\r\n                      { this.permissionApproval() && <input type=\"button\" value=\"Tolak\" className=\"btn\" onClick={this.btnApproveReject} style={{backgroundColor:\"red\",color:\"white\", marginRight:'10px'}}/> }              \r\n                      <input type=\"button\" value=\"Kembali\" className=\"btn\" onClick={this.btnCancel} style={{backgroundColor:\"grey\",color:\"white\"}}/>\r\n                    </div>\r\n                    \r\n                    \r\n                 </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            )\r\n        } else if(!getTokenClient()){\r\n          return (\r\n              <Redirect to='/login' />\r\n          )    \r\n        }\r\n       \r\n    }\r\n}\r\n\r\nexport function mapDispatchToProps(dispatch) {\r\n    return {\r\n    //   getSourceTransaction: () => {\r\n    //     dispatch(sourceTransactionRequest());\r\n    //   },\r\n    //   handleRedirect: (route) => {\r\n    //     dispatch(push(route));\r\n    //   },\r\n    };\r\n}\r\n  \r\nexport const mapStateToProps = createStructuredSelector({\r\n  // user: getUserState(),\r\n  // menu: getMenu(),\r\n  // fetching: getFetchStatus(),\r\n});\r\n\r\nconst withConnect = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n);\r\n\r\nconst withStyle = withStyles(styles);\r\n\r\nexport default compose(\r\n    withConnect,\r\n    withStyle,\r\n    withRouter\r\n  )(CalonNasabahDetail);"]},"metadata":{},"sourceType":"module"}