{"ast":null,"code":"import { handleFormatDate } from \"../global/globalFunction\";\nexport function constructReportNameLoan(dataLoanNew, status, filter) {\n  var newReportName = 'Report Loan ';\n\n  if (status) {\n    newReportName += \"-\".concat(status, \" \");\n  }\n\n  if (dataLoanNew && dataLoanNew[0] && dataLoanNew[0].bank_name) {\n    newReportName += \"(\".concat(dataLoanNew[0].bank_name, \")\");\n  }\n\n  if (filter) {\n    newReportName += \" \".concat(filter);\n  }\n\n  return \"\".concat(newReportName, \".csv\");\n}\nexport function constructHeaderDataLoan(dataLoanNew) {\n  var headerCsv = [{\n    label: 'ID Pinjaman',\n    key: 'id'\n  }, {\n    label: 'ID Agen',\n    key: 'borroweagent_idr_id'\n  }, {\n    label: 'Nama Agen',\n    key: 'agent_name'\n  }, {\n    label: 'Nama Kantor Agen',\n    key: 'agent_provider'\n  }, {\n    label: 'ID Nasabah',\n    key: 'borrower_id'\n  }, {\n    label: 'Nama Nasabah',\n    key: 'borrower_name'\n  }, {\n    label: 'Rekening Bank',\n    key: 'bank_account'\n  }, {\n    label: 'Tujuan Pinjaman',\n    key: 'loan_intention'\n  }, {\n    label: 'Tujuan Pinjaman Detail',\n    key: 'intention_details'\n  }, {\n    label: 'Penghasilan Bulanan',\n    key: 'monthly_income'\n  }, {\n    label: 'Penghasilan Lain-lain',\n    key: 'other_income'\n  }, {\n    label: 'Sumber Penghasilan Lain-lain',\n    key: 'other_incomesource'\n  }, {\n    label: 'Lama Cicilan',\n    key: 'installment'\n  }, {\n    label: 'ID Produk',\n    key: 'product_id'\n  }, {\n    label: 'Produk',\n    key: 'product_name'\n  }, {\n    label: 'Tipe Bunga',\n    key: 'interest_type'\n  }, {\n    label: 'Bunga (%)',\n    key: 'interest'\n  }, {\n    label: 'Pinjaman Pokok',\n    key: 'loan_amount'\n  }, {\n    label: 'Cicilan',\n    key: 'layaway_plan'\n  }, {\n    label: 'Status Pinjaman',\n    key: 'status'\n  }, {\n    label: 'Catatan Pembayaran',\n    key: 'payment_note'\n  }, {\n    label: 'Alasan Penolakan',\n    key: 'reject_reason'\n  }, {\n    label: 'Tanggal Pengajuan',\n    key: 'created_at'\n  }, {\n    label: 'Tanggal Penerimaan',\n    key: 'approval_date'\n  }, {\n    label: 'Tanggal Pencairan',\n    key: 'disburse_date'\n  }];\n\n  if (dataLoanNew) {\n    var newFees = {};\n\n    for (var key in dataLoanNew) {\n      var fees = dataLoanNew[key].fees;\n\n      if (fees) {\n        for (var keyFee in fees) {\n          if (!newFees[keyFee]) {\n            newFees[keyFee] = keyFee;\n            var labelFee = keyFee.split('_');\n            var newLabel = '';\n\n            for (var keyLabel in labelFee) {\n              newLabel += \"\".concat(labelFee[keyLabel].substring(0, 1).toUpperCase()).concat(labelFee[keyLabel].substring(1, labelFee[keyLabel].length), \" \");\n            }\n\n            headerCsv.push({\n              label: newLabel,\n              key: \"fees.\".concat(keyFee)\n            });\n          }\n        }\n      }\n    }\n  }\n\n  return headerCsv;\n}\nexport function constructDataLoan(dataLoan, status) {\n  var dataCsv = dataLoan;\n  var csvNew = {};\n\n  if (dataCsv) {\n    for (var key in dataCsv) {\n      var feesData = {};\n      dataCsv[key].status = dataCsv[key].payment_status === \"failed\" ? 'Gagal Bayar' : dataCsv[key].payment_status === \"paid\" ? 'Telah Bayar' : dataCsv[key].status === \"approved\" && dataCsv[key].disburse_status === 'confirmed' ? 'Telah Cair' : dataCsv[key].status === \"approved\" ? \"Diterima\" : dataCsv[key].status === \"rejected\" ? \"Ditolak\" : \"Proses Pengajuan\";\n      dataCsv[key].created_at = \"-\".concat(handleFormatDate(dataCsv[key].created_at), \"-\");\n      dataCsv[key].approval_date = \"-\".concat(handleFormatDate(dataCsv[key].approval_date), \"-\");\n      dataCsv[key].disburse_date = \"-\".concat(handleFormatDate(dataCsv[key].disburse_date), \"-\");\n      dataCsv[key].bank_account = \"'\".concat(dataCsv[key].bank_account.toString());\n      dataCsv[key].loan_amount = parseInt(dataCsv[key].loan_amount) !== 0 ? parseFloat(dataCsv[key].loan_amount) : 0;\n      dataCsv[key].total_loan = parseInt(dataCsv[key].total_loan) !== 0 ? parseFloat(dataCsv[key].total_loan) : 0;\n      dataCsv[key].monthly_income = parseInt(dataCsv[key].monthly_income) !== 0 ? parseFloat(dataCsv[key].monthly_income) : 0;\n      dataCsv[key].other_income = parseInt(dataCsv[key].other_income) !== 0 ? parseFloat(dataCsv[key].other_income) : 0;\n      dataCsv[key].layaway_plan = parseInt(dataCsv[key].layaway_plan) !== 0 ? parseFloat(dataCsv[key].layaway_plan).toFixed(2) : 0;\n      var fees = dataCsv[key].fees;\n\n      for (var keyFee in fees) {\n        var desc = fees[keyFee] && fees[keyFee].description && fees[keyFee].description.toString().toLowerCase();\n\n        while (desc && desc.includes(' ')) {\n          desc = desc.replace(' ', '_');\n        }\n\n        if (!feesData[desc] && fees[keyFee] && fees[keyFee].amount) {\n          feesData[desc] = '';\n          feesData[desc] = desc && fees[keyFee] && fees[keyFee].amount && parseFloat(fees[keyFee].amount).toFixed(2);\n        }\n      }\n\n      dataCsv[key].fees = feesData;\n    }\n  }\n\n  csvNew.data = dataCsv;\n  csvNew.header = constructHeaderDataLoan(dataCsv);\n  csvNew.name = constructReportNameLoan(dataCsv, status);\n  return csvNew;\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_fe/src/components/pinjaman/function.js"],"names":["handleFormatDate","constructReportNameLoan","dataLoanNew","status","filter","newReportName","bank_name","constructHeaderDataLoan","headerCsv","label","key","newFees","fees","keyFee","labelFee","split","newLabel","keyLabel","substring","toUpperCase","length","push","constructDataLoan","dataLoan","dataCsv","csvNew","feesData","payment_status","disburse_status","created_at","approval_date","disburse_date","bank_account","toString","loan_amount","parseInt","parseFloat","total_loan","monthly_income","other_income","layaway_plan","toFixed","desc","description","toLowerCase","includes","replace","amount","data","header","name"],"mappings":"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","sourcesContent":["import {  handleFormatDate } from \"../global/globalFunction\";\r\n\r\nexport function constructReportNameLoan (dataLoanNew, status, filter) {\r\n\r\n    let newReportName = 'Report Loan '\r\n\r\n    if(status) {\r\n        newReportName += `-${status} `\r\n    }\r\n\r\n    if(dataLoanNew && dataLoanNew[0] && dataLoanNew[0].bank_name) {\r\n        newReportName += `(${dataLoanNew[0].bank_name})`\r\n    }\r\n\r\n    if(filter) {\r\n        newReportName += ` ${filter}`\r\n    }\r\n\r\n    return `${newReportName}.csv`;\r\n}\r\n\r\nexport function constructHeaderDataLoan (dataLoanNew) {\r\n    \r\n    const headerCsv = [\r\n        { label:'ID Pinjaman', key:'id'},\r\n        { label:'ID Agen', key:'borroweagent_idr_id'},\r\n        { label:'Nama Agen', key:'agent_name'},\r\n        { label:'Nama Kantor Agen', key:'agent_provider'},\r\n        { label:'ID Nasabah', key:'borrower_id'},\r\n        { label:'Nama Nasabah', key:'borrower_name'},\r\n        { label:'Rekening Bank', key:'bank_account'},\r\n        { label:'Tujuan Pinjaman', key:'loan_intention'},\r\n        { label:'Tujuan Pinjaman Detail', key:'intention_details'},\r\n        { label:'Penghasilan Bulanan', key:'monthly_income'},\r\n        { label:'Penghasilan Lain-lain', key:'other_income'},\r\n        { label:'Sumber Penghasilan Lain-lain', key:'other_incomesource'},\r\n        { label:'Lama Cicilan', key:'installment'},\r\n        { label:'ID Produk', key: 'product_id'},\r\n        { label:'Produk', key: 'product_name'},\r\n        { label:'Tipe Bunga', key: 'interest_type'},\r\n        { label:'Bunga (%)', key:'interest'},\r\n        { label:'Pinjaman Pokok', key:'loan_amount'},\r\n        { label:'Cicilan', key:'layaway_plan'},\r\n        { label:'Status Pinjaman', key:'status'},\r\n        { label:'Catatan Pembayaran', key:'payment_note'},\r\n        { label:'Alasan Penolakan', key:'reject_reason'},\r\n        { label:'Tanggal Pengajuan', key:'created_at'},\r\n        { label:'Tanggal Penerimaan', key:'approval_date'},\r\n        { label:'Tanggal Pencairan', key:'disburse_date'},\r\n    ]\r\n\r\n    if(dataLoanNew) {\r\n        const newFees = {};\r\n\r\n        for(const key in dataLoanNew) {\r\n            const fees = dataLoanNew[key].fees;\r\n\r\n            if(fees) {\r\n                for(const keyFee in fees) {\r\n                    if(!newFees[keyFee]) {\r\n                        newFees[keyFee] = keyFee;\r\n                        const labelFee = keyFee.split('_');\r\n                        let newLabel = '';\r\n                        \r\n                        for(const keyLabel in labelFee) {\r\n                            newLabel += `${labelFee[keyLabel].substring(0,1).toUpperCase()}${labelFee[keyLabel].substring(1,labelFee[keyLabel].length)} ` \r\n                        }\r\n\r\n                        headerCsv.push({\r\n                            label: newLabel,\r\n                            key: `fees.${keyFee}`,\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            \r\n        \r\n        }\r\n    }\r\n    \r\n    return headerCsv;\r\n}\r\n\r\nexport function constructDataLoan (dataLoan, status) {\r\n\r\n    const dataCsv = dataLoan;\r\n    const csvNew = {};\r\n\r\n    if(dataCsv) {\r\n        \r\n        for(const key in dataCsv) {\r\n\r\n            let feesData = {};\r\n\r\n            dataCsv[key].status = \r\n            dataCsv[key].payment_status === \"failed\"  ? 'Gagal Bayar' :\r\n            dataCsv[key].payment_status === \"paid\"  ? 'Telah Bayar' :\r\n            dataCsv[key].status ===\"approved\" && dataCsv[key].disburse_status === 'confirmed' ? 'Telah Cair' :\r\n            dataCsv[key].status ===\"approved\" ? \"Diterima\" : \r\n            dataCsv[key].status===\"rejected\" ? \"Ditolak\" : \r\n            \"Proses Pengajuan\"\r\n\r\n            dataCsv[key].created_at = `-${handleFormatDate(dataCsv[key].created_at)}-`;\r\n            dataCsv[key].approval_date = `-${handleFormatDate(dataCsv[key].approval_date)}-`;\r\n            dataCsv[key].disburse_date = `-${handleFormatDate(dataCsv[key].disburse_date)}-`;\r\n\r\n            dataCsv[key].bank_account = `'${dataCsv[key].bank_account.toString()}`;\r\n            dataCsv[key].loan_amount = parseInt(dataCsv[key].loan_amount) !== 0 ? parseFloat(dataCsv[key].loan_amount) : 0;          \r\n            dataCsv[key].total_loan = parseInt(dataCsv[key].total_loan) !== 0 ? parseFloat(dataCsv[key].total_loan) : 0;\r\n            dataCsv[key].monthly_income = parseInt(dataCsv[key].monthly_income) !== 0 ? parseFloat(dataCsv[key].monthly_income) : 0; \r\n            dataCsv[key].other_income = parseInt(dataCsv[key].other_income) !== 0 ? parseFloat(dataCsv[key].other_income) : 0;   \r\n            dataCsv[key].layaway_plan = parseInt(dataCsv[key].layaway_plan) !== 0 ? parseFloat(dataCsv[key].layaway_plan).toFixed(2) : 0;\r\n\r\n            const fees = dataCsv[key].fees;\r\n\r\n            for(const keyFee in fees) {\r\n                let desc = fees[keyFee] && fees[keyFee].description && fees[keyFee].description.toString().toLowerCase();\r\n\r\n                while(desc && desc.includes(' ')) {\r\n                desc = desc.replace(' ','_')\r\n                }\r\n                \r\n                if(!feesData[desc] && fees[keyFee] && fees[keyFee].amount) {\r\n                feesData[desc] = '';\r\n                feesData[desc] = desc && fees[keyFee] && fees[keyFee].amount && parseFloat(fees[keyFee].amount).toFixed(2)\r\n                }\r\n            }\r\n            \r\n            dataCsv[key].fees = feesData;\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    csvNew.data = dataCsv;\r\n    csvNew.header = constructHeaderDataLoan(dataCsv);\r\n    csvNew.name = constructReportNameLoan(dataCsv, status)\r\n\r\n    return csvNew;\r\n}"]},"metadata":{},"sourceType":"module"}