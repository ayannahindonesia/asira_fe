{"ast":null,"code":"import axios from 'axios';\nimport { serverUrl } from '../url';\nimport { getTokenClient } from '../index/token';\nexport async function getAllBorrowerFunction(param, next) {\n  return new Promise(async resolve => {\n    const token = getTokenClient();\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + token\n      }\n    };\n    let filter = '';\n\n    for (const key in param) {\n      filter += `&${key}=${param[key]}`;\n    }\n\n    const urlNew = serverUrl + `lender/borrower_list?account_number=null&orderby=updated_time&sort=desc${filter}`;\n    axios.get(urlNew, config).then(res => {\n      const listUser = res.data && res.data.data;\n      param.dataUser = listUser;\n      param.totalData = res.data.total_data;\n\n      if (next) {\n        resolve(next(param));\n      } else {\n        resolve(param);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}` || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\n;\nexport async function getBorrowerFunction(param, next) {\n  return new Promise(async resolve => {\n    const token = getTokenClient();\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + token\n      }\n    };\n    const urlNew = serverUrl + `lender/borrower_list/${param.calonNasabahId}/detail`;\n    axios.get(urlNew, config).then(res => {\n      const listUser = res.data && res.data.data ? res.data.data : res.data;\n      param.dataUser = listUser;\n\n      if (next) {\n        resolve(next(param));\n      } else {\n        resolve(param);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}` || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getImageFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getTokenClient()\n      }\n    };\n    axios.get(serverUrl + `admin/image/${param.idImage}`, config).then(res => {\n      if (next) {\n        resolve(next(param));\n      } else {\n        param.image = res.data;\n        resolve(param);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}` || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function approveRejectFunction(param, next) {\n  return new Promise(async resolve => {\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getTokenClient()\n      }\n    };\n    let accountNumberStringUrl = '';\n\n    if (param.statusApproval && param.statusApproval === 'approve') {\n      accountNumberStringUrl = `?account_number=${param.account_number}`;\n    }\n\n    axios.get(serverUrl + `lender/borrower_list/${param.id}/${param.statusApproval}${accountNumberStringUrl}`, config).then(res => {\n      if (next) {\n        resolve(next(param));\n      } else {\n        resolve(param);\n      }\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}` || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_fe/src/components/calonNasabah/saga.js"],"names":["axios","serverUrl","getTokenClient","getAllBorrowerFunction","param","next","Promise","resolve","token","config","headers","filter","key","urlNew","get","then","res","listUser","data","dataUser","totalData","total_data","catch","err","error","response","message","toString","toUpperCase","getBorrowerFunction","calonNasabahId","getImageFunction","idImage","image","approveRejectFunction","accountNumberStringUrl","statusApproval","account_number","id"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { serverUrl } from '../url';\r\nimport { getTokenClient } from '../index/token';\r\n\r\nexport async function getAllBorrowerFunction(param, next){\r\n    return new Promise(async (resolve) => {\r\n\r\n        const token = getTokenClient();\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + token}\r\n        };\r\n\r\n        let filter = '';\r\n\r\n        for(const key in param) {\r\n            filter += `&${key}=${param[key]}`\r\n        }\r\n      \r\n        const urlNew = serverUrl+`lender/borrower_list?account_number=null&orderby=updated_time&sort=desc${filter}`\r\n        \r\n        axios.get(urlNew,config).then((res)=>{\r\n            const listUser = res.data && res.data.data\r\n            param.dataUser = listUser;\r\n            param.totalData = res.data.total_data\r\n\r\n            if(next) {\r\n                resolve(next(param));\r\n            } else {\r\n                resolve(param);\r\n            }\r\n        }).catch((err)=>{\r\n            const error = (err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`) || err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    });\r\n};\r\n\r\nexport async function getBorrowerFunction(param, next) {\r\n    return new Promise(async (resolve) => {\r\n\r\n        const token = getTokenClient();\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + token}\r\n        };\r\n\r\n        const urlNew = serverUrl+`lender/borrower_list/${param.calonNasabahId}/detail`\r\n    \r\n        axios.get(urlNew,config).then((res)=>{\r\n            const listUser = res.data && res.data.data ? res.data.data : res.data;\r\n            param.dataUser = listUser;\r\n\r\n            if(next) {\r\n                resolve(next(param));\r\n            } else {\r\n                resolve(param);\r\n            }\r\n        }).catch((err)=>{\r\n            const error = (err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`) || err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    });\r\n\r\n}\r\n\r\nexport async function getImageFunction (param,next){\r\n    return new Promise(async (resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + getTokenClient()}\r\n          };\r\n\r\n        axios.get(serverUrl+`admin/image/${param.idImage}`,config)\r\n        .then((res)=>{\r\n            if(next){\r\n                resolve(next(param))\r\n            }else{\r\n                param.image = res.data;\r\n                resolve(param)\r\n            }\r\n        })\r\n        .catch((err)=>{\r\n            const error = (err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`)|| err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}\r\n\r\nexport async function approveRejectFunction (param,next){\r\n    return new Promise(async (resolve)=>{\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + getTokenClient()}\r\n        };\r\n\r\n        let accountNumberStringUrl = ''\r\n\r\n        if(param.statusApproval && param.statusApproval === 'approve') {\r\n            accountNumberStringUrl = `?account_number=${param.account_number}`\r\n        }\r\n\r\n        axios.get(serverUrl+`lender/borrower_list/${param.id}/${param.statusApproval}${accountNumberStringUrl}`,config)\r\n        .then((res)=>{\r\n            if(next){\r\n                resolve(next(param))\r\n            }else{\r\n                resolve(param)\r\n            }\r\n        }).catch((err)=>{\r\n            const error = (err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`)|| err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}