{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\src\\\\components\\\\permintaanPinjaman\\\\pinjamanSetuju.js\";\nimport React from 'react';\nimport DatePicker from \"react-date-picker\";\nimport swal from 'sweetalert';\nimport { CSVLink } from \"react-csv\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Loader from 'react-loader-spinner';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport './../../support/css/pagination.css';\nimport { getPermintaanPinjamanFunction, CSVDownloadFunction, confirmDisburseFunction, changeDisburseDateFunction } from './saga';\nimport 'moment/locale/id';\nimport { getTokenClient, getTokenAuth } from '../index/token';\nimport { checkPermission } from './../global/globalFunction';\nimport './../../support/css/table.css';\nimport TableComponent from './../subComponent/TableComponent';\nconst columnDataUser = [{\n  id: 'id',\n  label: 'ID Pinjaman'\n}, {\n  id: 'borrower_name',\n  label: 'Nama Nasabah'\n}, {\n  id: 'service',\n  label: 'Layanan'\n}, {\n  id: 'product',\n  label: 'Produk'\n}, {\n  id: 'created_time',\n  label: 'Tanggal Pengajuan',\n  type: 'datetime'\n}, {\n  id: 'approval_date',\n  label: 'Tanggal Approval',\n  type: 'datetime'\n}, {\n  id: 'disburse_date',\n  label: 'Tanggal Pencairan',\n  type: 'datetime'\n}, {\n  id: 'Konfirmasi',\n  type: 'button',\n  conditions: {\n    disburse_status: 'processing',\n    status: 'approved'\n  },\n  function: '',\n  label: 'Telah Dicairkan'\n}, {\n  id: 'Ubah',\n  type: 'button',\n  conditions: {\n    disburse_date_changed: false,\n    disburse_status: 'processing'\n  },\n  label: 'Ubah Tanggal Pencairan',\n  function: ''\n}];\n\nclass PinjamanSetuju extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      checkedData: [],\n      rows: [],\n      fromDate: null,\n      toDate: null,\n      page: 1,\n      last_page: 1,\n      rowsPerPage: 10,\n      isEdit: false,\n      editIndex: Number,\n      udahdiklik: false,\n      startDate: new Date(),\n      endDate: new Date(),\n      downloadDataCSV: [],\n      downloadModal: false,\n      total_data: 0,\n      loading: true,\n      loadingBtn: false,\n      searching: false,\n      errorMessage: '',\n      modal: false,\n      idPinjaman: null,\n      ubahTanggalPencairan: new Date(),\n      disburse: false,\n      telahDicairkan: 'Dikonfirmasi',\n      statusTanggalDisburse: 'Diubah'\n    };\n    this._isMounted = false;\n\n    this.getAllData = async function () {\n      const param = {\n        status: \"approved\",\n        rows: \"10\",\n        page: this.state.page\n      };\n\n      if (this.state.searching) {\n        param.start_date = this.state.fromDate;\n        param.end_date = this.state.toDate;\n      }\n\n      const data = await getPermintaanPinjamanFunction(param);\n\n      if (data) {\n        if (!data.error) {\n          this.setState({\n            loading: false,\n            rows: data.loanRequest.data,\n            rowsPerPage: data.loanRequest.rows,\n            page: data.loanRequest.current_page,\n            last_page: data.loanRequest.last_page,\n            total_data: data.loanRequest.total_data\n          });\n        } else {\n          this.setState({\n            errorMessage: data.error\n          });\n        }\n      }\n    };\n\n    this.handleStartChange = date => {\n      this.setState({\n        startDate: date\n      });\n    };\n\n    this.handleEndChange = date => {\n      this.setState({\n        endDate: date\n      });\n    };\n\n    this.onBtnSearch = () => {\n      this.setState({\n        loading: true,\n        searchModal: true,\n        searching: true,\n        checkedData: []\n      });\n      const _this$state = this.state,\n            startDate = _this$state.startDate,\n            endDate = _this$state.endDate;\n      var startMonth = '' + (startDate.getMonth() + 1),\n          startDay = '' + startDate.getDate(),\n          startYear = startDate.getFullYear();\n      var endMonth = '' + (endDate.getMonth() + 1),\n          endDay = '' + endDate.getDate(),\n          endYear = endDate.getFullYear();\n      if (startMonth.length < 2) startMonth = '0' + startMonth;\n      if (startDay.length < 2) startDay = '0' + startDay;\n      if (endMonth.length < 2) endMonth = '0' + endMonth;\n      if (endDay.length < 2) endDay = '0' + endDay;\n      var newFormatStartDate = startYear + \"-\" + startMonth + \"-\" + startDay + \"T00:00:00.000Z\";\n      var newFormatEndDate = endYear + \"-\" + endMonth + \"-\" + endDay + \"T23:59:59.000Z\";\n\n      if (endDate.getTime() < startDate.getTime()) {\n        alert(\"Please input correct month range\");\n        this.setState({\n          loading: false\n        });\n      } else {\n        this.setState({\n          fromDate: newFormatStartDate,\n          toDate: newFormatEndDate,\n          page: 1\n        }, () => {\n          this.getAllData();\n        });\n      }\n    };\n\n    this.onBtnReset = () => {\n      this.setState({\n        loading: true,\n        searching: false,\n        page: 1\n      }, () => {\n        this.getAllData();\n      });\n    };\n\n    this.btnDownloadCsv = () => {\n      this.setState({\n        loadingBtn: true\n      });\n      const arr = this.state.checkedData;\n\n      if (arr.length === 0) {\n        swal(\"Info\", \"Silahkan Pilih Data yang ingin di download\", \"info\");\n        this.setState({\n          loadingBtn: false\n        });\n      } else {\n        var id = [];\n\n        for (var j = 0; j < arr.length; j++) {\n          id.push(arr[j]);\n        }\n\n        const param = {\n          id: id.toString()\n        };\n        this.btnCSVDownload(param);\n      }\n    };\n\n    this.btnCSVDownload = async function (param) {\n      const data = await CSVDownloadFunction(param);\n\n      if (data) {\n        if (!data.error) {\n          this.setState({\n            loadingBtn: false,\n            downloadModal: true,\n            downloadDataCSV: data.data\n          });\n        } else {\n          this.setState({\n            loadingBtn: false,\n            downloadModal: false,\n            errorMessage: data.error\n          });\n        }\n      }\n    };\n\n    this.onChangePage = current => {\n      this.setState({\n        loading: true,\n        page: current\n      }, () => {\n        this.getAllData();\n      });\n    };\n\n    this.btnKonfirmasi = (e, id) => {\n      this.confirmDisburse({\n        id\n      });\n    };\n\n    this.confirmDisburse = async function (param) {\n      const data = await confirmDisburseFunction(param);\n\n      if (data) {\n        if (!data.error) {\n          this.setState({\n            telahDicairkan: 'Dikonfirmasi'\n          }, () => {\n            this.getAllData();\n          });\n          swal(\"Success\", \"Dana telah dicairkan\", \"success\");\n        } else {\n          swal(\"Fail\", \"Konfirmasi Gagal\", \"error\");\n        }\n      }\n    };\n\n    this.handleTanggalPencairan = e => {\n      this.setState({\n        ubahTanggalPencairan: e\n      });\n    };\n\n    this.toggleChangeDisburseDate = (e, id) => {\n      this.setState({\n        modal: true\n      });\n    };\n\n    this.handleCheckBox = e => {\n      const checkedData = this.state.checkedData;\n\n      if (e.target.checked) {\n        checkedData.push(parseInt(e.target.value));\n      } else {\n        checkedData.splice(checkedData.indexOf(parseInt(e.target.value)), 1);\n      }\n\n      this.setState({\n        checkedData\n      });\n    };\n\n    this.ubahTanggalPencairanBtn = () => {\n      this.setState({\n        disburse: true\n      });\n      const _this$state2 = this.state,\n            ubahTanggalPencairan = _this$state2.ubahTanggalPencairan,\n            idPinjaman = _this$state2.idPinjaman;\n      let startMonth = '' + (ubahTanggalPencairan.getMonth() + 1),\n          startDay = '' + ubahTanggalPencairan.getDate(),\n          startYear = ubahTanggalPencairan.getFullYear();\n      if (startMonth.length < 2) startMonth = '0' + startMonth;\n      if (startDay.length < 2) startDay = '0' + startDay;\n      const changeDate = startYear + \"-\" + startMonth + \"-\" + startDay;\n      const param = {\n        id: idPinjaman,\n        date: changeDate\n      };\n      this.disburseDate(param);\n    };\n\n    this.disburseDate = async function (param) {\n      const data = await changeDisburseDateFunction(param);\n\n      if (data) {\n        if (!data.error) {\n          swal(\"Success\", \"Tanggal pencairan berhasil diubah\", \"success\");\n          this.setState({\n            modal: false,\n            disburse: false,\n            statusTanggalDisburse: 'Diubah'\n          }, () => {\n            this.getAllData();\n          });\n        } else {\n          swal(\"Fail\", \"Tanggal pencairan gagal diubah\", \"error\");\n          this.setState({\n            disburse: false\n          });\n        }\n      }\n    };\n\n    this.btnCancelModalDownload = () => {\n      this.setState({\n        downloadModal: false,\n        downloadDataCSV: [],\n        searchModal: false\n      });\n      var checkboxes = document.querySelectorAll('input[type=checkbox]:checked');\n\n      for (var i = 0; i < checkboxes.length; i++) {\n        checkboxes[i].checked = false;\n      }\n\n      this.setState({\n        checkedData: []\n      });\n    };\n\n    this.renderBtnOrLoading = () => {\n      if (this.state.loadingBtn) {\n        return React.createElement(Loader, {\n          type: \"ThreeDots\",\n          color: \"#00BFFF\",\n          height: \"30\",\n          width: \"30\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"input\", {\n          type: \"button\",\n          className: \"btn btn-primary ml-3\",\n          onClick: this.btnDownloadCsv,\n          value: \"CSV Download\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.renderBtnDisburseDate = () => {\n      if (this.state.disburse) {\n        return React.createElement(Button, {\n          color: \"primary\",\n          onClick: this.ubahTanggalPencairanBtn,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          },\n          __self: this\n        }, React.createElement(Loader, {\n          type: \"ThreeDots\",\n          color: \"#00BFFF\",\n          height: \"30\",\n          width: \"30\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(Button, {\n          color: \"primary\",\n          onClick: this.ubahTanggalPencairanBtn,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341\n          },\n          __self: this\n        }, \"Simpan\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.getAllData();\n    columnDataUser[7].function = this.btnKonfirmasi;\n    columnDataUser[8].function = this.toggleChangeDisburseDate;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    if (getTokenClient() && getTokenAuth()) {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        style: {\n          padding: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        isOpen: this.state.downloadModal,\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, \"Jumlah Download CSV: \", this.state.checkedData.length, \" item(s)\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, React.createElement(CSVLink, {\n        data: this.state.downloadDataCSV,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, \" Click Here to Download CSV \")), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.btnCancelModalDownload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, \"Close\"))), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, \"Ubah Tanggal Pencairan\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        className: \"ml-3\",\n        format: \"yyyy-MM-dd\",\n        onChange: this.handleTanggalPencairan,\n        value: this.state.ubahTanggalPencairan,\n        clearIcon: null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      })), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, this.renderBtnDisburseDate(), React.createElement(Button, {\n        color: \"secondary\",\n        onClick: () => this.setState({\n          modal: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, \"Tutup\"))), React.createElement(TableComponent, {\n        id: \"id\",\n        title: 'Pinjaman Disetujui - List',\n        checkBoxAction: this.handleCheckBox,\n        searchDate: {\n          value: [this.state.fromDate, this.state.toDate],\n          label: 'Tanggal Approval',\n          function: [this.onBtnSearch, this.onBtnReset],\n          button: [{\n            label: 'Cari',\n            color: '#20B889',\n            function: this.onBtnSearch\n          }, {\n            label: 'Reset',\n            color: '#EE6969',\n            function: this.onBtnReset\n          }]\n        },\n        arrayCheckBox: this.state.checkedData,\n        paging: this.state.paging,\n        loading: this.state.loading,\n        columnData: columnDataUser,\n        data: this.state.rows,\n        page: this.state.page,\n        rowsPerPage: this.state.rowsPerPage,\n        totalData: this.state.total_data,\n        onChangePage: this.onChangePage,\n        button: [{\n          label: 'Download CSV',\n          color: '#20B889',\n          function: this.btnDownloadCsv\n        }],\n        permissionDetail: checkPermission('lender_loan_request_detail') ? '/permintaanpinjamanDetail/' : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }));\n    } else if (getTokenAuth()) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nconst mapStateToProp = state => {\n  return {\n    role: state.user.role,\n    id: state.user.id\n  };\n};\n\nexport default connect(mapStateToProp)(PinjamanSetuju);","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_fe/src/components/permintaanPinjaman/pinjamanSetuju.js"],"names":["React","DatePicker","swal","CSVLink","Button","Modal","ModalHeader","ModalBody","ModalFooter","Loader","connect","Redirect","getPermintaanPinjamanFunction","CSVDownloadFunction","confirmDisburseFunction","changeDisburseDateFunction","getTokenClient","getTokenAuth","checkPermission","TableComponent","columnDataUser","id","label","type","conditions","disburse_status","status","function","disburse_date_changed","PinjamanSetuju","Component","state","checkedData","rows","fromDate","toDate","page","last_page","rowsPerPage","isEdit","editIndex","Number","udahdiklik","startDate","Date","endDate","downloadDataCSV","downloadModal","total_data","loading","loadingBtn","searching","errorMessage","modal","idPinjaman","ubahTanggalPencairan","disburse","telahDicairkan","statusTanggalDisburse","_isMounted","getAllData","param","start_date","end_date","data","error","setState","loanRequest","current_page","handleStartChange","date","handleEndChange","onBtnSearch","searchModal","startMonth","getMonth","startDay","getDate","startYear","getFullYear","endMonth","endDay","endYear","length","newFormatStartDate","newFormatEndDate","getTime","alert","onBtnReset","btnDownloadCsv","arr","j","push","toString","btnCSVDownload","onChangePage","current","btnKonfirmasi","e","confirmDisburse","handleTanggalPencairan","toggleChangeDisburseDate","handleCheckBox","target","checked","parseInt","value","splice","indexOf","ubahTanggalPencairanBtn","changeDate","disburseDate","btnCancelModalDownload","checkboxes","document","querySelectorAll","i","renderBtnOrLoading","renderBtnDisburseDate","componentDidMount","componentWillUnmount","render","padding","props","className","toggle","button","color","paging","mapStateToProp","role","user"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport DatePicker from \"react-date-picker\";\r\nimport swal from 'sweetalert'\r\nimport { CSVLink } from \"react-csv\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Loader from 'react-loader-spinner'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport './../../support/css/pagination.css'\r\nimport { getPermintaanPinjamanFunction, CSVDownloadFunction, confirmDisburseFunction, changeDisburseDateFunction } from './saga';\r\nimport 'moment/locale/id'\r\nimport { getTokenClient, getTokenAuth } from '../index/token';\r\nimport {checkPermission} from './../global/globalFunction'\r\nimport './../../support/css/table.css'\r\nimport TableComponent from './../subComponent/TableComponent'\r\n\r\nconst columnDataUser = [\r\n  {\r\n      id: 'id',\r\n      label: 'ID Pinjaman',\r\n  },\r\n  {\r\n      id: 'borrower_name',\r\n      label: 'Nama Nasabah',\r\n  },\r\n  {\r\n      id: 'service',\r\n      label: 'Layanan',\r\n  },\r\n  {\r\n    id: 'product',\r\n    label: 'Produk',\r\n  },\r\n  {\r\n    id: 'created_time',\r\n    label: 'Tanggal Pengajuan',\r\n    type:'datetime'\r\n  },\r\n  {\r\n    id: 'approval_date',\r\n    label: 'Tanggal Approval',\r\n    type:'datetime'\r\n  },\r\n  {\r\n    id: 'disburse_date',\r\n    label: 'Tanggal Pencairan',\r\n    type:'datetime'\r\n  },\r\n  {\r\n    id: 'Konfirmasi',\r\n    type: 'button',\r\n    conditions: {\r\n      disburse_status : 'processing',\r\n      status : 'approved',\r\n    },\r\n    function: '',\r\n    label: 'Telah Dicairkan',\r\n  },\r\n  {\r\n    id: 'Ubah',\r\n    type: 'button',\r\n    conditions: {\r\n      disburse_date_changed : false,\r\n      disburse_status : 'processing',\r\n    },\r\n    label: 'Ubah Tanggal Pencairan',\r\n    function: '',\r\n  },\r\n\r\n]\r\n\r\nclass PinjamanSetuju extends React.Component {\r\n  state = {\r\n    checkedData:[],\r\n    rows: [],\r\n    fromDate:null,\r\n    toDate:null,\r\n    page: 1,last_page:1,\r\n    rowsPerPage: 10,\r\n    isEdit: false,\r\n    editIndex:Number,\r\n    udahdiklik : false,\r\n    startDate: new Date() ,endDate: new Date(),\r\n    downloadDataCSV: [],downloadModal:false,\r\n    total_data:0,\r\n    loading:true,loadingBtn:false,\r\n    searching:false,errorMessage:'',\r\n    modal:false,idPinjaman:null,ubahTanggalPencairan:new Date(),disburse:false,telahDicairkan:'Dikonfirmasi',statusTanggalDisburse:'Diubah'\r\n  };\r\n\r\n  _isMounted =false\r\n\r\n  componentDidMount(){\r\n    this._isMounted=true;\r\n    this.getAllData();\r\n\r\n    columnDataUser[7].function = this.btnKonfirmasi;\r\n    columnDataUser[8].function = this.toggleChangeDisburseDate;\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this._isMounted=false\r\n  }\r\n\r\n  getAllData = async function (){\r\n    const param ={\r\n      status:\"approved\",\r\n      rows:\"10\",\r\n      page: this.state.page,\r\n    }\r\n    if(this.state.searching){\r\n      param.start_date = this.state.fromDate\r\n      param.end_date = this.state.toDate\r\n    }\r\n\r\n\r\n    const data = await getPermintaanPinjamanFunction(param)\r\n\r\n    if(data){\r\n      if(!data.error){\r\n        this.setState({loading:false,rows:data.loanRequest.data,rowsPerPage:data.loanRequest.rows,page:data.loanRequest.current_page,last_page:data.loanRequest.last_page,total_data:data.loanRequest.total_data})        \r\n      }else{\r\n        this.setState({errorMessage:data.error})\r\n      }\r\n    }\r\n  }\r\n\r\n  //UNTUK TANGGAL \r\n  handleStartChange = (date)=> {\r\n    this.setState({\r\n      startDate: date\r\n    });\r\n  }\r\n\r\n  handleEndChange = (date)=> {\r\n    this.setState({\r\n      endDate: date\r\n    });\r\n  }\r\n  \r\n  onBtnSearch = ()=>{\r\n    this.setState({loading:true,searchModal:true,searching:true, checkedData:[]})\r\n    const {startDate, endDate} = this.state\r\n\r\n      var startMonth =''+ (startDate.getMonth()+1),\r\n      startDay = '' + startDate.getDate(),\r\n      startYear = startDate.getFullYear();\r\n\r\n      var endMonth =''+ (endDate.getMonth()+1),\r\n      endDay = '' + endDate.getDate(),\r\n      endYear = endDate.getFullYear();\r\n\r\n      if (startMonth.length < 2) startMonth = '0' + startMonth;\r\n      if (startDay.length < 2) startDay = '0' + startDay;\r\n\r\n      if (endMonth.length < 2) endMonth = '0' + endMonth;\r\n      if (endDay.length < 2) endDay = '0' + endDay;\r\n      \r\n      var newFormatStartDate = startYear+\"-\"+startMonth+\"-\"+startDay+\"T00:00:00.000Z\"\r\n      var newFormatEndDate = endYear+\"-\"+endMonth+\"-\"+endDay+\"T23:59:59.000Z\"\r\n    \r\n      if(endDate.getTime() < startDate.getTime() ){\r\n        alert(\"Please input correct month range\")\r\n        this.setState({loading:false})\r\n      }\r\n      else{\r\n        this.setState({fromDate:newFormatStartDate,toDate:newFormatEndDate,page:1},()=>{\r\n            this.getAllData()\r\n        })\r\n        \r\n      }\r\n  }\r\n\r\n  onBtnReset =()=>{\r\n    this.setState({loading:true,searching:false,page:1},()=>{\r\n      this.getAllData()\r\n\r\n    })\r\n\r\n  }\r\n\r\n//BUAT DOWNLOAD CSV\r\n  \r\n\r\n  btnDownloadCsv = ()=>{\r\n    this.setState({loadingBtn:true})\r\n\r\n    const arr = this.state.checkedData;\r\n  \r\n    if (arr.length===0){\r\n      swal(\"Info\",\"Silahkan Pilih Data yang ingin di download\",\"info\")\r\n      this.setState({loadingBtn:false})\r\n    }else{\r\n      var id=[]\r\n      for (var j=0;j<arr.length;j++){\r\n        id.push(arr[j])\r\n      }\r\n      const param = {\r\n        id:id.toString()\r\n      }\r\n      this.btnCSVDownload(param)\r\n\r\n    }    \r\n  }\r\n\r\n  btnCSVDownload = async function (param){\r\n    const data = await CSVDownloadFunction(param)\r\n    if(data){\r\n      if(!data.error){\r\n        this.setState({loadingBtn:false,downloadModal:true,downloadDataCSV:data.data})\r\n      }else{\r\n        this.setState({loadingBtn:false,downloadModal:false,errorMessage:data.error})\r\n      }\r\n    }\r\n  }\r\n\r\n  onChangePage = (current) => {\r\n    this.setState({loading:true,page:current},()=>{\r\n        this.getAllData()\r\n    })\r\n  }\r\n\r\n  btnKonfirmasi = (e ,id)=>{\r\n    this.confirmDisburse({id})\r\n  } \r\n\r\n  confirmDisburse = async function (param){\r\n    const data = await confirmDisburseFunction (param)\r\n\r\n    if(data){\r\n      if(!data.error){\r\n          this.setState({telahDicairkan:'Dikonfirmasi'}, () => { this.getAllData()})\r\n          swal(\"Success\",\"Dana telah dicairkan\",\"success\")\r\n      }else{\r\n          swal(\"Fail\",\"Konfirmasi Gagal\",\"error\")\r\n      }\r\n    }\r\n  }\r\n\r\n  handleTanggalPencairan =(e)=>{\r\n    this.setState({ubahTanggalPencairan:e})\r\n  }\r\n  \r\n  toggleChangeDisburseDate = (e, id) => {\r\n    \r\n    this.setState({modal: true});\r\n  }\r\n  \r\n  handleCheckBox =(e)=>{\r\n    const checkedData = this.state.checkedData;\r\n    if(e.target.checked){\r\n      checkedData.push(parseInt(e.target.value))\r\n    }else{\r\n      checkedData.splice(checkedData.indexOf(parseInt(e.target.value)),1)\r\n    }\r\n\r\n    this.setState({checkedData});\r\n    \r\n  }\r\n\r\n  ubahTanggalPencairanBtn = ()=>{\r\n    this.setState({disburse:true})\r\n    const {ubahTanggalPencairan,idPinjaman} = this.state\r\n\r\n    let startMonth =''+ (ubahTanggalPencairan.getMonth()+1),\r\n    startDay = '' + ubahTanggalPencairan.getDate(),\r\n    startYear = ubahTanggalPencairan.getFullYear();\r\n\r\n    if (startMonth.length < 2) startMonth = '0' + startMonth;\r\n    if (startDay.length < 2) startDay = '0' + startDay;\r\n\r\n    const changeDate = startYear+\"-\"+startMonth+\"-\"+startDay\r\n    const param ={\r\n      id:idPinjaman,\r\n      date:changeDate\r\n    }\r\n    \r\n    this.disburseDate(param)\r\n  }\r\n\r\n  disburseDate = async function (param){\r\n    const data = await changeDisburseDateFunction(param)\r\n\r\n    if(data){\r\n      if(!data.error){\r\n        swal(\"Success\",\"Tanggal pencairan berhasil diubah\",\"success\")\r\n        this.setState({modal:false,disburse:false,statusTanggalDisburse:'Diubah'},()=>{\r\n          this.getAllData()\r\n        })\r\n      }else{\r\n        swal(\"Fail\",\"Tanggal pencairan gagal diubah\",\"error\")\r\n        this.setState({disburse:false})\r\n\r\n      }\r\n    }\r\n  } \r\n\r\n  //FUNCTION BUAT MODAL\r\n \r\n  btnCancelModalDownload = ()=>{\r\n    this.setState({downloadModal:false,downloadDataCSV:[],searchModal:false})\r\n    var checkboxes = document.querySelectorAll('input[type=checkbox]:checked')\r\n    for (var i = 0; i < checkboxes.length; i++) {\r\n      checkboxes[i].checked = false;\r\n    }\r\n      this.setState({checkedData: []})\r\n  }\r\n\r\n  renderBtnOrLoading =()=>{\r\n    if (this.state.loadingBtn){\r\n        return  <Loader \r\n        type=\"ThreeDots\"\r\n        color=\"#00BFFF\"\r\n        height=\"30\"\t\r\n        width=\"30\"\r\n        \r\n     />   \r\n    }\r\n    else{\r\n        return(\r\n          <input type=\"button\" className=\"btn btn-primary ml-3\" onClick={this.btnDownloadCsv} value=\"CSV Download\"></input>\r\n        )\r\n    }\r\n  }\r\n\r\n  renderBtnDisburseDate =()=>{\r\n    if(this.state.disburse){\r\n      return(\r\n      <Button color=\"primary\" onClick={this.ubahTanggalPencairanBtn}>   \r\n          <Loader \r\n            type=\"ThreeDots\"\r\n            color=\"#00BFFF\"\r\n            height=\"30\"\t\r\n            width=\"30\"\r\n        />       \r\n      </Button>  \r\n      )\r\n    }else{\r\n      return(\r\n        <Button color=\"primary\" onClick={this.ubahTanggalPencairanBtn}>Simpan</Button>    \r\n\r\n      )\r\n    }\r\n  }\r\n    \r\n  render() {\r\n    if(getTokenClient() && getTokenAuth()){\r\n    return (\r\n        <div className=\"container\" style={{padding:0}}>\r\n\r\n        <Modal isOpen={this.state.downloadModal} className={this.props.className}>\r\n          <ModalHeader toggle={this.toggle}>Jumlah Download CSV: {this.state.checkedData.length} item(s)</ModalHeader>\r\n          <ModalBody>\r\n          <CSVLink data={this.state.downloadDataCSV} \r\n          > Click Here to Download CSV </CSVLink>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" onClick={this.btnCancelModalDownload}>Close</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      \r\n        <Modal isOpen={this.state.modal} className={this.props.className}>\r\n          <ModalHeader toggle={this.toggle}>Ubah Tanggal Pencairan</ModalHeader>\r\n          <ModalBody>\r\n\r\n            <DatePicker\r\n              className=\"ml-3\"\r\n              format=\"yyyy-MM-dd\"\r\n              onChange={this.handleTanggalPencairan}\r\n              value={this.state.ubahTanggalPencairan}\r\n              clearIcon={null}\r\n            /> \r\n            \r\n                  \r\n            \r\n          </ModalBody>\r\n          <ModalFooter>\r\n\r\n            {this.renderBtnDisburseDate()}\r\n            <Button color=\"secondary\" onClick={()=>this.setState({modal:false})}>Tutup</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n       \r\n          < TableComponent\r\n            id={\"id\"}\r\n            title={'Pinjaman Disetujui - List'}\r\n            checkBoxAction={this.handleCheckBox}\r\n            searchDate={\r\n              {\r\n                value:[this.state.fromDate, this.state.toDate],\r\n                label: 'Tanggal Approval',\r\n                function: [this.onBtnSearch, this.onBtnReset],\r\n                button: [\r\n                  {\r\n                    label:'Cari',\r\n                    color:'#20B889',\r\n                    function:this.onBtnSearch\r\n                  },\r\n                  {\r\n                    label:'Reset',\r\n                    color:'#EE6969',\r\n                    function:this.onBtnReset\r\n                  },\r\n                ]\r\n              }\r\n            }\r\n            arrayCheckBox={this.state.checkedData}\r\n            paging={this.state.paging}\r\n            loading={this.state.loading}\r\n            columnData={columnDataUser}\r\n            data={this.state.rows}\r\n            page={this.state.page}\r\n            rowsPerPage={this.state.rowsPerPage}\r\n            totalData={this.state.total_data}\r\n            onChangePage={this.onChangePage}     \r\n            button={\r\n              [\r\n                {\r\n                  label:'Download CSV',\r\n                  color: '#20B889',\r\n                  function:this.btnDownloadCsv\r\n                },\r\n              ]\r\n            }        \r\n            permissionDetail={ checkPermission('lender_loan_request_detail') ? '/permintaanpinjamanDetail/' : null}\r\n          /> \r\n        \r\n        </div>\r\n    );\r\n}\r\nelse if (getTokenAuth()){\r\n  return  <Redirect to='/login' />\r\n}\r\n  }\r\n}\r\n\r\nconst mapStateToProp = (state)=>{\r\n  return{\r\n      role: state.user.role,\r\n      id: state.user.id\r\n  }\r\n}\r\nexport default connect (mapStateToProp)(PinjamanSetuju) ;\r\n"]},"metadata":{},"sourceType":"module"}