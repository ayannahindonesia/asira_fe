{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\src\\\\components\\\\subComponent\\\\GridDetail.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport Grid from '@material-ui/core/Grid';\nimport './../../support/css/gridDetail.css';\n\nvar styles = function styles(theme) {\n  return {\n    gridDetail: {\n      fontSize: '0.65em',\n      marginBottom: '5px',\n      wordWrap: 'break-word',\n      flexWrap: 'wrap'\n    }\n  };\n};\n\nvar GridDetails =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GridDetails, _React$Component);\n\n  function GridDetails(props) {\n    var _this;\n\n    _classCallCheck(this, GridDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GridDetails).call(this, props));\n\n    _this.renderDataColumn = function (dataColumn, dataLabel) {\n      var tester = '';\n      tester = dataColumn && dataColumn.map(function (dataRow, index) {\n        return React.createElement(Grid, {\n          item: true,\n          sm: parseInt(12 / dataColumn.length),\n          xs: 12,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          style: {\n            marginBottom: '10px',\n            flexWrap: 'wrap'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, _this.renderDataRow(dataRow, dataLabel && dataLabel[index], index)));\n      }, _assertThisInitialized(_this));\n      return tester;\n    };\n\n    _this.lengthGridLabel = function (lengthLabel) {\n      var pjgLabel = 6;\n\n      if (lengthLabel) {\n        pjgLabel = lengthLabel;\n      }\n\n      return pjgLabel;\n    };\n\n    _this.lengthGridValue = function (lengthLabel) {\n      var pjgValue = 6;\n\n      if (lengthLabel) {\n        pjgValue = 12 - lengthLabel;\n      }\n\n      return pjgValue;\n    };\n\n    _this.findBold = function (data) {\n      var dataNew = data.toString();\n\n      if (dataNew.includes('<b>')) {\n        dataNew = dataNew.split('<b>');\n        return React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \" \", dataNew[1], \" \");\n      }\n\n      return dataNew;\n    };\n\n    _this.renderDataRow = function (dataRow, dataPerLabel, indexColumn) {\n      var tester = '';\n      tester = dataRow && dataRow.map(function (dataPerRow, index) {\n        return React.createElement(Grid, {\n          item: true,\n          sm: 12,\n          xs: 12,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          style: {\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          sm: _this.lengthGridLabel(_this.props.gridLabel && _this.props.gridLabel[indexColumn]),\n          xs: _this.lengthGridLabel(_this.props.gridLabel && _this.props.gridLabel[indexColumn]),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, dataPerLabel && dataPerLabel[index])), React.createElement(Grid, {\n          item: true,\n          sm: _this.lengthGridValue(_this.props.gridLabel && _this.props.gridLabel[indexColumn]),\n          xs: _this.lengthGridValue(_this.props.gridLabel && _this.props.gridLabel[indexColumn]),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          sm: 1,\n          xs: 1,\n          style: {\n            maxWidth: '15px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, !_this.props.noEquals && React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \" : \")), React.createElement(Grid, {\n          item: true,\n          sm: 11,\n          xs: 11,\n          style: {\n            color: dataPerRow && dataPerRow.color ? dataPerRow.color : dataPerRow\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, dataPerRow && dataPerRow.color ? dataPerRow.value : dataPerRow ? _this.findBold(dataPerRow) : '-')))));\n      }, _assertThisInitialized(_this));\n      return tester;\n    };\n\n    _this.state = {\n      errorText: ''\n    };\n    return _this;\n  } // componentDidMount() {\n  //   if(this.props.data) {\n  //     this.refresh(this.props.data)\n  //   }\n  // }\n\n\n  _createClass(GridDetails, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          title = _this$props.title,\n          label = _this$props.label,\n          data = _this$props.data;\n      console.log(this.props.noTitleLine);\n      console.log(title);\n      return React.createElement(Grid, {\n        container: true,\n        className: classes.gridDetail,\n        style: {\n          backgroundColor: this.props.background ? '#D8E6FF' : 'none',\n          padding: this.props.background ? '10px 0px 0px 10px' : '0px 0px 0px 10px',\n          fontWeight: this.props.background ? 'bold' : 'normal',\n          borderRadius: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        style: {\n          color: \"#2076B8\",\n          marginBottom: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, !this.props.noTitleLine && title && React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          backgroundColor: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, title && title)), this.props.noTitleLine && title && React.createElement(\"div\", {\n        style: {\n          fontSize: '1rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, title)), data && label && this.renderDataColumn(data, label));\n    }\n  }]);\n\n  return GridDetails;\n}(React.Component);\n\nGridDetails.propTypes = {\n  title: PropTypes.string,\n  label: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired\n};\nexport default withStyles(styles)(GridDetails);","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_fe/src/components/subComponent/GridDetail.js"],"names":["React","PropTypes","withStyles","Grid","styles","theme","gridDetail","fontSize","marginBottom","wordWrap","flexWrap","GridDetails","props","renderDataColumn","dataColumn","dataLabel","tester","map","dataRow","index","parseInt","length","renderDataRow","lengthGridLabel","lengthLabel","pjgLabel","lengthGridValue","pjgValue","findBold","data","dataNew","toString","includes","split","dataPerLabel","indexColumn","dataPerRow","gridLabel","maxWidth","noEquals","color","value","state","errorText","classes","title","label","console","log","noTitleLine","backgroundColor","background","padding","fontWeight","borderRadius","Component","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './../../support/css/gridDetail.css'\r\n\r\nconst styles = (theme) => ({\r\n\r\n  gridDetail: {\r\n    fontSize: '0.65em',\r\n    marginBottom: '5px',\r\n    wordWrap:'break-word',\r\n    flexWrap:'wrap',\r\n  },\r\n\r\n});\r\n\r\nclass GridDetails extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      errorText: '',\r\n    };\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   if(this.props.data) {\r\n  //     this.refresh(this.props.data)\r\n  //   }\r\n  // }\r\n\r\n  renderDataColumn = (dataColumn, dataLabel) => {\r\n    let tester = '';\r\n    \r\n    tester = dataColumn && dataColumn.map((dataRow, index) => {\r\n      return(\r\n        <Grid item sm={parseInt(12 / dataColumn.length)} xs={12} key={index}>\r\n          <Grid container style={{marginBottom:'10px', flexWrap:'wrap'}}> \r\n            {this.renderDataRow(dataRow, dataLabel && dataLabel[index], index)}\r\n          </Grid>\r\n        </Grid>\r\n      )\r\n    }, this)\r\n      \r\n    \r\n\r\n    return tester\r\n  }\r\n\r\n  lengthGridLabel = (lengthLabel) => {\r\n    let pjgLabel = 6;\r\n\r\n    if(lengthLabel) {\r\n      pjgLabel = lengthLabel\r\n    }\r\n\r\n    return pjgLabel\r\n  }\r\n\r\n  lengthGridValue = (lengthLabel) => {\r\n    let pjgValue = 6;\r\n\r\n    if(lengthLabel) {\r\n      pjgValue = 12 - lengthLabel\r\n    }\r\n\r\n    return pjgValue\r\n  }\r\n\r\n  findBold = (data) => {\r\n    let dataNew = data.toString();\r\n\r\n    if(dataNew.includes('<b>')) {\r\n      dataNew = dataNew.split('<b>')\r\n      return <b> {dataNew[1]} </b>;\r\n    }\r\n    \r\n    return dataNew;\r\n  }\r\n\r\n  renderDataRow = (dataRow, dataPerLabel, indexColumn) => {\r\n    let tester = '';\r\n\r\n    tester = dataRow && dataRow.map((dataPerRow, index) => {\r\n      return (\r\n        <Grid item sm={12} xs={12} key={index}>\r\n\r\n          <Grid container style={{marginBottom:'5px'}}> \r\n            <Grid item sm={this.lengthGridLabel(this.props.gridLabel && this.props.gridLabel[indexColumn])} xs={this.lengthGridLabel(this.props.gridLabel && this.props.gridLabel[indexColumn])}>\r\n              <b>{ dataPerLabel && dataPerLabel[index] }</b>\r\n            </Grid>\r\n\r\n            <Grid item sm={this.lengthGridValue(this.props.gridLabel && this.props.gridLabel[indexColumn])} xs={this.lengthGridValue(this.props.gridLabel && this.props.gridLabel[indexColumn])}>\r\n              <Grid container>\r\n                <Grid item sm={1} xs={1} style={{maxWidth:'15px'}}>\r\n                  {\r\n                    (!this.props.noEquals) && <b> : </b>\r\n                  }\r\n                </Grid>\r\n\r\n                <Grid item sm={11} xs={11} style={{color:dataPerRow&& dataPerRow.color? dataPerRow.color:dataPerRow}} >\r\n                  {\r\n                    dataPerRow && dataPerRow.color ?  dataPerRow.value : (dataPerRow ? this.findBold(dataPerRow) : '-')\r\n                  }\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      )\r\n    }, this);\r\n      \r\n    return tester\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      title,\r\n      label,\r\n      data,\r\n    } = this.props;\r\n    console.log(this.props.noTitleLine);\r\n    console.log(title)\r\n    return ( \r\n      <Grid container \r\n        className={classes.gridDetail} \r\n        style={\r\n          {\r\n            backgroundColor: this.props.background ? '#D8E6FF' : 'none', \r\n            padding: this.props.background ? '10px 0px 0px 10px' : '0px 0px 0px 10px',\r\n            fontWeight: this.props.background ? 'bold' : 'normal',\r\n            borderRadius:'5px'\r\n          }\r\n        }\r\n      >\r\n\r\n        <Grid item sm={12} xs={12} style={{color:\"#2076B8\", marginBottom:'10px'}}>\r\n              { !this.props.noTitleLine && title &&\r\n                <h6>\r\n                \r\n                  <span style={{backgroundColor:'white'}}> \r\n                \r\n                    {title && title} \r\n\r\n                  </span>\r\n                \r\n\r\n                \r\n                \r\n                </h6>\r\n              }\r\n\r\n              { this.props.noTitleLine && title &&\r\n                <div style={{fontSize:'1rem'}}>{ title }</div>\r\n              }\r\n            </Grid>\r\n        \r\n        {data && label && this.renderDataColumn(data, label)}\r\n\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nGridDetails.propTypes = {\r\n  title: PropTypes.string,\r\n  label: PropTypes.array.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(GridDetails);\r\n"]},"metadata":{},"sourceType":"module"}