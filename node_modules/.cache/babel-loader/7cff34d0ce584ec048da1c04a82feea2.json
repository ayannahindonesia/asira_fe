{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\src\\\\components\\\\subComponent\\\\DialogComponent.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport DropDown from '../subComponent/DropDown';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport BrokenLink from './../../support/img/default.png';\nimport DatePicker from './../subComponent/DateTimePicker';\nimport { Grid, TextField, FormControlLabel, Checkbox } from '@material-ui/core';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      margin: 0,\n      padding: theme.spacing(2)\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500]\n    },\n    card: {\n      maxWidth: 500\n    },\n    media: {\n      height: 300\n    }\n  };\n};\n\nvar DialogTitle = withStyles(styles)(function (props) {\n  var children = props.children,\n      classes = props.classes,\n      onClose = props.onClose,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"onClose\"]);\n\n  return React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, children), React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    style: {\n      outline: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })));\n});\nvar DialogContent = withStyles(function (theme) {\n  return {\n    root: {\n      padding: theme.spacing(2)\n    }\n  };\n})(MuiDialogContent);\nvar DialogActions = withStyles(function (theme) {\n  return {\n    root: {\n      margin: 0,\n      padding: theme.spacing(1)\n    }\n  };\n})(MuiDialogActions);\n\nvar DialogComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DialogComponent, _React$Component);\n\n  function DialogComponent(props) {\n    var _this;\n\n    _classCallCheck(this, DialogComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DialogComponent).call(this, props));\n\n    _this.imageArea = function (classes, message, title, base64Boolean) {\n      var dataImage = message;\n      return React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(CardActionArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, base64Boolean && React.createElement(\"img\", {\n        alt: title,\n        className: classes.media,\n        onError: function onError(e) {\n          e.target.attributes.getNamedItem(\"src\").value = BrokenLink;\n        },\n        src: \"data:image/PNG;base64,\".concat(dataImage),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), !base64Boolean && React.createElement(CardMedia, {\n        className: classes.media,\n        image: dataImage && dataImage.includes('http') ? dataImage : require('./../../support/img/default.png'),\n        title: title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })));\n    };\n\n    _this.state = {\n      errorText: ''\n    };\n    return _this;\n  }\n\n  _createClass(DialogComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          type = _this$props.type,\n          title = _this$props.title,\n          message = _this$props.message,\n          onClose = _this$props.onClose;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        \"aria-labelledby\": \"customized-dialog-title\",\n        open: this.props.openDialog ? true : false,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"customized-dialog-title\",\n        onClose: onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, title), React.createElement(DialogContent, {\n        dividers: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, type && type === 'image' && this.imageArea(classes, message, title, this.props.base64Boolean), (!type || type && type === 'textfield') && React.createElement(Typography, {\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, message), type && type === 'form' && message && message.map(function (formMessage, index) {\n        if (formMessage.type && formMessage.type === 'checkbox') {\n          return React.createElement(Grid, {\n            container: true,\n            key: \"\".concat(formMessage.id, \"-\").concat(index),\n            style: {\n              paddingLeft: '10px',\n              fontSize: 'calc(10px + 0.3vw)'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, React.createElement(Grid, {\n            item: true,\n            xs: 4,\n            sm: 4,\n            style: {\n              paddingTop: '20px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, formMessage.title)), React.createElement(Grid, {\n            item: true,\n            xs: 6,\n            sm: 6,\n            style: {\n              paddingTop: '10px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, React.createElement(FormControlLabel, {\n            control: React.createElement(Checkbox, {\n              checked: formMessage.value,\n              color: formMessage.value ? \"primary\" : \"default\",\n              value: \"default\",\n              inputProps: {\n                'aria-label': 'checkbox with default color'\n              },\n              onClick: function onClick(e) {\n                return formMessage.function(e, formMessage.id);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 137\n              },\n              __self: this\n            }),\n            label: formMessage.label,\n            disabled: formMessage.disabled,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          })));\n        } else if (!formMessage.type || formMessage.type && formMessage.type === 'textfield') {\n          return React.createElement(Grid, {\n            container: true,\n            key: \"\".concat(formMessage.id, \"-\").concat(index),\n            style: {\n              paddingLeft: '10px',\n              fontSize: 'calc(10px + 0.3vw)'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155\n            },\n            __self: this\n          }, React.createElement(Grid, {\n            item: true,\n            xs: 4,\n            sm: 4,\n            style: {\n              paddingTop: '20px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157\n            },\n            __self: this\n          }, formMessage.title)), React.createElement(Grid, {\n            item: true,\n            xs: 6,\n            sm: 6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159\n            },\n            __self: this\n          }, React.createElement(TextField, {\n            id: formMessage.id,\n            value: formMessage.value,\n            onChange: function onChange(e) {\n              return formMessage.function(e, formMessage.id, formMessage.numeric);\n            },\n            margin: \"dense\",\n            variant: \"outlined\",\n            disabled: formMessage.disabled,\n            multiline: true,\n            fullWidth: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160\n            },\n            __self: this\n          })));\n        } else if (formMessage.type && formMessage.type === 'date') {\n          return React.createElement(Grid, {\n            container: true,\n            key: \"\".concat(formMessage.id, \"-\").concat(index),\n            style: {\n              paddingLeft: '10px',\n              fontSize: 'calc(10px + 0.3vw)'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175\n            },\n            __self: this\n          }, React.createElement(Grid, {\n            item: true,\n            xs: 4,\n            sm: 4,\n            style: {\n              paddingTop: '25px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 177\n            },\n            __self: this\n          }, formMessage.title)), React.createElement(Grid, {\n            item: true,\n            xs: 6,\n            sm: 6,\n            style: {\n              alignItems: \"left\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180\n            },\n            __self: this\n          }, React.createElement(DatePicker, {\n            id: formMessage.id,\n            type: \"dateOnly\",\n            onChange: function onChange(e) {\n              return formMessage.function(e, formMessage.id, false, formMessage.type === 'date');\n            },\n            value: formMessage.value,\n            disabled: formMessage.disabled,\n            style: {\n              top: \"-20px\",\n              border: \"1px solid grey\",\n              borderRadius: \"3px\",\n              padding: '5px 0px 5px 10px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181\n            },\n            __self: this\n          })));\n        } else if (formMessage.type && formMessage.type === 'dropdown') {\n          return React.createElement(Grid, {\n            container: true,\n            key: \"\".concat(formMessage.id, \"-\").concat(index),\n            style: {\n              paddingLeft: '10px',\n              fontSize: 'calc(10px + 0.3vw)'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195\n            },\n            __self: this\n          }, React.createElement(Grid, {\n            item: true,\n            xs: 4,\n            sm: 4,\n            style: {\n              paddingTop: '25px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197\n            },\n            __self: this\n          }, formMessage.title)), React.createElement(Grid, {\n            item: true,\n            xs: 6,\n            sm: 6,\n            style: {\n              alignItems: \"left\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200\n            },\n            __self: this\n          }, React.createElement(DropDown, {\n            value: formMessage.value,\n            label: \"label\",\n            data: formMessage.data,\n            id: \"id\",\n            labelName: \"label\",\n            onChange: function onChange(e) {\n              return formMessage.function(e, formMessage.id);\n            },\n            fullWidth: true,\n            disabled: formMessage.disabled,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201\n            },\n            __self: this\n          })));\n        } else {\n          return null;\n        }\n      }, this)), type && type !== 'image' && React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, !this.props.noNextStep && React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick(e) {\n          return onClose(e, true);\n        },\n        style: {\n          outline: 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Ya\"), React.createElement(Button, {\n        color: \"primary\",\n        onClick: onClose,\n        style: {\n          outline: 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, this.props.noNextStep ? 'Kembali' : 'Tidak'))));\n    }\n  }]);\n\n  return DialogComponent;\n}(React.Component);\n\nDialogComponent.propTypes = {\n  title: PropTypes.string,\n  type: PropTypes.string,\n  onClose: PropTypes.func\n};\nexport default withStyles(styles)(DialogComponent);","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_fe/src/components/subComponent/DialogComponent.js"],"names":["React","PropTypes","withStyles","DropDown","Button","Dialog","MuiDialogTitle","MuiDialogContent","MuiDialogActions","IconButton","CloseIcon","Typography","Card","CardActionArea","CardMedia","BrokenLink","DatePicker","Grid","TextField","FormControlLabel","Checkbox","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","card","maxWidth","media","height","DialogTitle","props","children","classes","onClose","other","outline","DialogContent","DialogActions","DialogComponent","imageArea","message","title","base64Boolean","dataImage","e","target","attributes","getNamedItem","value","includes","require","state","errorText","type","openDialog","map","formMessage","index","id","paddingLeft","fontSize","paddingTop","function","label","disabled","numeric","alignItems","border","borderRadius","data","noNextStep","Component","propTypes","string","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport DropDown from '../subComponent/DropDown';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport BrokenLink from './../../support/img/default.png'\r\nimport DatePicker from './../subComponent/DateTimePicker'\r\nimport { Grid, TextField, FormControlLabel, Checkbox } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  card: {\r\n    maxWidth: 500,\r\n  },\r\n  media: {\r\n    height: 300,\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose} style={{outline:'none'}}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\n\r\nclass DialogComponent extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        errorText: '',\r\n      };\r\n    }\r\n\r\n    imageArea = (classes, message, title, base64Boolean) => {\r\n\r\n      const dataImage = message;\r\n\r\n      return (\r\n        <Card className={classes.card}>\r\n          <CardActionArea>\r\n            {\r\n              base64Boolean && \r\n              <img alt={title} className={classes.media} \r\n              onError={(e)=>{e.target.attributes.getNamedItem(\"src\").value = BrokenLink}}\r\n              src={`data:image/PNG;base64,${dataImage}`}/>\r\n            }\r\n\r\n            {\r\n              !base64Boolean && \r\n              <CardMedia\r\n                className={classes.media}\r\n                image={dataImage && dataImage.includes('http') ? dataImage : require('./../../support/img/default.png')}\r\n                title={title}\r\n              />\r\n            }\r\n            \r\n            \r\n          </CardActionArea>\r\n        </Card>\r\n      );\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            type,\r\n            title,\r\n            message,\r\n            onClose,\r\n        } = this.props;\r\n        \r\n        return ( \r\n            <div>\r\n                <Dialog aria-labelledby=\"customized-dialog-title\" open={this.props.openDialog ? true : false} fullWidth>\r\n                    <DialogTitle id=\"customized-dialog-title\" onClose={onClose}>\r\n                        {title}\r\n                    </DialogTitle>\r\n                    <DialogContent dividers>\r\n                        { type && type === 'image' && this.imageArea(classes, message, title, this.props.base64Boolean)}\r\n                        { (!type || (type && type === 'textfield')) && \r\n                            <Typography gutterBottom>\r\n                              {message}\r\n                            </Typography>\r\n                        }\r\n                        {\r\n                          type && type === 'form' && message && message.map((formMessage, index) => {\r\n                            \r\n                            if(formMessage.type && formMessage.type === 'checkbox') {\r\n                              return (\r\n                                <Grid container key={`${formMessage.id}-${index}`} style={{paddingLeft:'10px', fontSize:'calc(10px + 0.3vw)'}}>\r\n                                  <Grid item xs={4} sm={4} style={{paddingTop:'20px'}}>\r\n                                      <b>{formMessage.title}</b>\r\n                                  </Grid>\r\n                                  <Grid item xs={6} sm={6} style={{paddingTop:'10px'}}>\r\n                                    <FormControlLabel\r\n                                      control={\r\n                                          <Checkbox\r\n                                            checked={formMessage.value}\r\n                                            color={formMessage.value ? \"primary\":\"default\"}\r\n                                            value=\"default\"\r\n                                            inputProps={{ 'aria-label': 'checkbox with default color' }}\r\n                                            onClick={(e) => formMessage.function(e, formMessage.id)}\r\n                                          />\r\n                                      }\r\n                                      label={formMessage.label}\r\n                                      disabled={formMessage.disabled}\r\n                                    />\r\n                                  </Grid>\r\n                                </Grid>\r\n                                \r\n                              )\r\n                            } else if(!formMessage.type || (formMessage.type && formMessage.type === 'textfield')) {\r\n                              \r\n                              return (\r\n                                <Grid container key={`${formMessage.id}-${index}`} style={{paddingLeft:'10px', fontSize:'calc(10px + 0.3vw)'}}>\r\n                                  <Grid item xs={4} sm={4} style={{paddingTop:'20px'}}>\r\n                                      <b>{formMessage.title}</b>\r\n                                  </Grid>\r\n                                  <Grid item xs={6} sm={6} >\r\n                                      <TextField\r\n                                          id={formMessage.id}\r\n                                          value={formMessage.value}\r\n                                          onChange={(e) => formMessage.function(e, formMessage.id, formMessage.numeric)} \r\n                                          margin=\"dense\"\r\n                                          variant=\"outlined\"\r\n                                          disabled={formMessage.disabled}\r\n                                          multiline\r\n                                          fullWidth\r\n                                      /> \r\n                                  </Grid>\r\n                                </Grid>\r\n                              )\r\n                            } else if (formMessage.type && formMessage.type === 'date'){\r\n                              return (\r\n                                <Grid container key={`${formMessage.id}-${index}`} style={{paddingLeft:'10px', fontSize:'calc(10px + 0.3vw)'}}>\r\n                                    <Grid item xs={4} sm={4} style={{paddingTop:'25px'}}>\r\n                                        <b>{formMessage.title}</b>\r\n                                        \r\n                                    </Grid>\r\n                                    <Grid item xs={6} sm={6} style={{alignItems:\"left\"}}>\r\n                                        <DatePicker\r\n                                            id={formMessage.id}\r\n                                            type='dateOnly'\r\n                                            onChange={(e) => formMessage.function(e, formMessage.id, false, formMessage.type === 'date')}\r\n                                            value={formMessage.value}\r\n                                            disabled={formMessage.disabled}\r\n                                            style={{top:\"-20px\",border:\"1px solid grey\",borderRadius:\"3px\", padding:'5px 0px 5px 10px'}}\r\n                                        />\r\n                                        \r\n                                    </Grid>\r\n                                </Grid>\r\n                              )\r\n                            } else if (formMessage.type && formMessage.type === 'dropdown'){\r\n                              return(\r\n                                <Grid container key={`${formMessage.id}-${index}`} style={{paddingLeft:'10px', fontSize:'calc(10px + 0.3vw)'}}>\r\n                                  <Grid item xs={4} sm={4} style={{paddingTop:'25px'}}>\r\n                                      <b>{formMessage.title}</b>\r\n                                      \r\n                                  </Grid>\r\n                                  <Grid item xs={6} sm={6} style={{alignItems:\"left\"}}>\r\n                                    < DropDown\r\n                                      value={formMessage.value}\r\n                                      label=\"label\"\r\n                                      data={formMessage.data}\r\n                                      id=\"id\"\r\n                                      labelName={\"label\"}\r\n                                      onChange={(e) => formMessage.function(e, formMessage.id)}\r\n                                      fullWidth\r\n                                      disabled={formMessage.disabled}\r\n                                    />\r\n                                      \r\n                                  </Grid>                                    \r\n                                </Grid>\r\n                              )\r\n                            } else {\r\n                              return null\r\n                            }\r\n                          }, this)\r\n                        }\r\n                    </DialogContent>\r\n                    {\r\n                        type && type !== 'image' && \r\n                        <DialogActions>\r\n                            \r\n                            {\r\n                              !this.props.noNextStep &&\r\n                              <Button color=\"primary\" onClick={(e) => onClose(e,true)} style={{outline:'none'}}>\r\n                                Ya\r\n                              </Button>\r\n                            }\r\n                            \r\n                            \r\n                            <Button color=\"primary\" onClick={onClose} style={{outline:'none'}}>\r\n                              {this.props.noNextStep ? 'Kembali' : 'Tidak'}\r\n                            </Button>\r\n                        </DialogActions>\r\n                    }\r\n                    \r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogComponent.propTypes = {\r\n    title: PropTypes.string,\r\n    type: PropTypes.string,\r\n    onClose: PropTypes.func,\r\n};\r\n  \r\nexport default withStyles(styles)(DialogComponent);"]},"metadata":{},"sourceType":"module"}