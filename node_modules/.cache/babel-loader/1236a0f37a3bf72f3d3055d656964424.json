{"ast":null,"code":"import differenceInCalendarWeeks from '../differenceInCalendarWeeks/index.js';\nimport lastDayOfMonth from '../lastDayOfMonth/index.js';\nimport startOfMonth from '../startOfMonth/index.js';\n/**\r\n * @name getWeeksInMonth\r\n * @category Week Helpers\r\n * @summary Get the number of calendar weeks a month spans.\r\n *\r\n * @description\r\n * Get the number of calendar weeks the month in the given date spans.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the given date\r\n * @param {Object} [options] - an object with options.\r\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\r\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\r\n * @returns {Number} the number of calendar weeks\r\n * @throws {TypeError} 2 arguments required\r\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\r\n *\r\n * @example\r\n * // How many calendar weeks does February 2015 span?\r\n * var result = getWeeksInMonth(new Date(2015, 1, 8))\r\n * //=> 4\r\n *\r\n * @example\r\n * // If the week starts on Monday,\r\n * // how many calendar weeks does July 2017 span?\r\n * var result = getWeeksInMonth(new Date(2017, 6, 5), { weekStartsOn: 1 })\r\n * //=> 6\r\n */\n\nexport default function getWeeksInMonth(date, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return differenceInCalendarWeeks(lastDayOfMonth(date), startOfMonth(date), options) + 1;\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_fe/node_modules/date-fns/esm/getWeeksInMonth/index.js"],"names":["differenceInCalendarWeeks","lastDayOfMonth","startOfMonth","getWeeksInMonth","date","options","arguments","length","TypeError"],"mappings":"AAAA,OAAOA,yBAAP,MAAsC,uCAAtC;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,eAAe,SAASC,eAAT,CAAyBC,IAAzB,EAA+BC,OAA/B,EAAwC;AACrD,MAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,UAAM,IAAIC,SAAJ,CAAc,mCAAmCF,SAAS,CAACC,MAA7C,GAAsD,UAApE,CAAN;AACD;;AAED,SAAOP,yBAAyB,CAACC,cAAc,CAACG,IAAD,CAAf,EAAuBF,YAAY,CAACE,IAAD,CAAnC,EAA2CC,OAA3C,CAAzB,GAA+E,CAAtF;AACD","sourcesContent":["import differenceInCalendarWeeks from '../differenceInCalendarWeeks/index.js';\r\nimport lastDayOfMonth from '../lastDayOfMonth/index.js';\r\nimport startOfMonth from '../startOfMonth/index.js';\r\n/**\r\n * @name getWeeksInMonth\r\n * @category Week Helpers\r\n * @summary Get the number of calendar weeks a month spans.\r\n *\r\n * @description\r\n * Get the number of calendar weeks the month in the given date spans.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the given date\r\n * @param {Object} [options] - an object with options.\r\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\r\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\r\n * @returns {Number} the number of calendar weeks\r\n * @throws {TypeError} 2 arguments required\r\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\r\n *\r\n * @example\r\n * // How many calendar weeks does February 2015 span?\r\n * var result = getWeeksInMonth(new Date(2015, 1, 8))\r\n * //=> 4\r\n *\r\n * @example\r\n * // If the week starts on Monday,\r\n * // how many calendar weeks does July 2017 span?\r\n * var result = getWeeksInMonth(new Date(2017, 6, 5), { weekStartsOn: 1 })\r\n * //=> 6\r\n */\r\n\r\nexport default function getWeeksInMonth(date, options) {\r\n  if (arguments.length < 1) {\r\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\r\n  }\r\n\r\n  return differenceInCalendarWeeks(lastDayOfMonth(date), startOfMonth(date), options) + 1;\r\n}"]},"metadata":{},"sourceType":"module"}