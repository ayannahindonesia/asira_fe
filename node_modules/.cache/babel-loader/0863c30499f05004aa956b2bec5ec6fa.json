{"ast":null,"code":"import axios from 'axios';\nimport jsonWebToken from 'jsonwebtoken';\nimport { serverUrl, serverUrlBorrower } from '../url';\nimport { setTokenClient, setTokenBorrower, getTokenAuth, getTokenClient } from './token';\nexport async function postLoginBankDashboardFunction(param, next, nextProfile) {\n  return new Promise(async resolve => {\n    const tokenAuth = getTokenAuth();\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + tokenAuth\n      }\n    };\n    let newLink = serverUrl + `client/lender_login`;\n    const logindata = {\n      key: param.key,\n      password: param.password\n    };\n    axios.post(newLink, logindata, config).then(res => {\n      param.dataTokenLender = res.data.token;\n      delete param.password;\n      setTokenClient(res.data.token, new Date().getTime() + res.data.expires_in * 1000);\n\n      if (next) {\n        resolve(next(param, nextProfile));\n      }\n\n      resolve(param);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getTokenBorrowerFunction(param, next) {\n  return new Promise(async resolve => {\n    let newLink = serverUrlBorrower + `clientauth`;\n    const logindata = {\n      auth: {\n        username: 'androkey',\n        password: 'androsecret'\n      }\n    };\n    axios.get(newLink, logindata).then(res => {\n      param.dataTokenBorrower = res.data.token;\n      setTokenBorrower(res.data.token);\n\n      if (next) {\n        resolve(next(param));\n      }\n\n      resolve(param);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function getUserProfileFunction(param, next) {\n  return new Promise(async resolve => {\n    const newLink = serverUrl + 'lender/profile';\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + getTokenClient()\n      }\n    };\n    axios.get(newLink, config).then(res => {\n      console.log(res.data);\n      var token = jsonWebToken.verify(param.dataTokenLender, 'sXQ8jUMpueOvN5P3cdCR');\n      token.name = res.data && res.data.name;\n      param.dataPermission = token;\n\n      if (next) {\n        resolve(next(param));\n      }\n\n      resolve(param);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`;\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function sendEmailFunction(param, next) {\n  return new Promise(async resolve => {\n    const tokenAuth = getTokenAuth();\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + tokenAuth\n      }\n    };\n    axios.post(serverUrl + 'client/forgotpassword', param, config).then(res => {\n      if (next) {\n        resolve(next(param));\n      }\n\n      resolve(res);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}` || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}\nexport async function changePasswordFunction(param, next) {\n  return new Promise(async resolve => {\n    const tokenAuth = getTokenAuth();\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \" + tokenAuth\n      }\n    };\n    axios.post(serverUrl + 'client/resetpassword', param, config).then(res => {\n      if (next) {\n        resolve(next(param));\n      }\n\n      resolve(res);\n    }).catch(err => {\n      const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}` || err.toString();\n      param.error = error;\n      resolve(param);\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_fe/src/components/index/saga.js"],"names":["axios","jsonWebToken","serverUrl","serverUrlBorrower","setTokenClient","setTokenBorrower","getTokenAuth","getTokenClient","postLoginBankDashboardFunction","param","next","nextProfile","Promise","resolve","tokenAuth","config","headers","newLink","logindata","key","password","post","then","res","dataTokenLender","data","token","Date","getTime","expires_in","catch","err","error","response","message","toString","toUpperCase","getTokenBorrowerFunction","auth","username","get","dataTokenBorrower","getUserProfileFunction","console","log","verify","name","dataPermission","sendEmailFunction","changePasswordFunction"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAAQC,SAAR,EAAmBC,iBAAnB,QAA2C,QAA3C;AACA,SAASC,cAAT,EAAyBC,gBAAzB,EAA2CC,YAA3C,EAAyDC,cAAzD,QAA+E,SAA/E;AAEA,OAAO,eAAeC,8BAAf,CAA+CC,KAA/C,EAAsDC,IAAtD,EAA4DC,WAA5D,EAAyE;AAC5E,SAAO,IAAIC,OAAJ,CAAY,MAAOC,OAAP,IAAiB;AAChC,UAAMC,SAAS,GAAGR,YAAY,EAA9B;AAEA,UAAMS,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AAAC,yBAAiB,YAAYF;AAA9B;AADE,KAAf;AAIA,QAAIG,OAAO,GAAGf,SAAS,GAAE,qBAAzB;AACA,UAAMgB,SAAS,GAAE;AAACC,MAAAA,GAAG,EAAEV,KAAK,CAACU,GAAZ;AAAgBC,MAAAA,QAAQ,EAAEX,KAAK,CAACW;AAAhC,KAAjB;AAEApB,IAAAA,KAAK,CAACqB,IAAN,CAAWJ,OAAX,EAAoBC,SAApB,EAA+BH,MAA/B,EACCO,IADD,CACOC,GAAD,IAAO;AACTd,MAAAA,KAAK,CAACe,eAAN,GAAwBD,GAAG,CAACE,IAAJ,CAASC,KAAjC;AACA,aAAOjB,KAAK,CAACW,QAAb;AAEAhB,MAAAA,cAAc,CAACmB,GAAG,CAACE,IAAJ,CAASC,KAAV,EAAiB,IAAIC,IAAJ,GAAWC,OAAX,KAAwBL,GAAG,CAACE,IAAJ,CAASI,UAAT,GAAoB,IAA7D,CAAd;;AAEA,UAAGnB,IAAH,EAAQ;AACJG,QAAAA,OAAO,CAACH,IAAI,CAACD,KAAD,EAAQE,WAAR,CAAL,CAAP;AACH;;AACDE,MAAAA,OAAO,CAACJ,KAAD,CAAP;AACH,KAXD,EAYCqB,KAZD,CAYQC,GAAD,IAAO;AACV,YAAMC,KAAK,GAAGD,GAAG,CAACE,QAAJ,IAAgBF,GAAG,CAACE,QAAJ,CAAaR,IAA7B,IAAqCM,GAAG,CAACE,QAAJ,CAAaR,IAAb,CAAkBS,OAAvD,IAAmE,WAAUH,GAAG,CAACE,QAAJ,CAAaR,IAAb,CAAkBS,OAAlB,CAA0BC,QAA1B,GAAqCC,WAArC,EAAmD,EAA9I;AACA3B,MAAAA,KAAK,CAACuB,KAAN,GAAcA,KAAd;AACAnB,MAAAA,OAAO,CAACJ,KAAD,CAAP;AACH,KAhBD;AAiBH,GA3BM,CAAP;AA6BH;AAED,OAAO,eAAe4B,wBAAf,CAAyC5B,KAAzC,EAAgDC,IAAhD,EAAsD;AACzD,SAAO,IAAIE,OAAJ,CAAY,MAAOC,OAAP,IAAiB;AAChC,QAAII,OAAO,GAAGd,iBAAiB,GAAG,YAAlC;AACA,UAAMe,SAAS,GAAG;AACdoB,MAAAA,IAAI,EAAE;AACFC,QAAAA,QAAQ,EAAG,UADT;AAEFnB,QAAAA,QAAQ,EAAG;AAFT;AADQ,KAAlB;AAOApB,IAAAA,KAAK,CAACwC,GAAN,CAAUvB,OAAV,EAAmBC,SAAnB,EACCI,IADD,CACOC,GAAD,IAAO;AACTd,MAAAA,KAAK,CAACgC,iBAAN,GAA0BlB,GAAG,CAACE,IAAJ,CAASC,KAAnC;AAEArB,MAAAA,gBAAgB,CAACkB,GAAG,CAACE,IAAJ,CAASC,KAAV,CAAhB;;AAEA,UAAGhB,IAAH,EAAQ;AACJG,QAAAA,OAAO,CAACH,IAAI,CAACD,KAAD,CAAL,CAAP;AACH;;AACDI,MAAAA,OAAO,CAACJ,KAAD,CAAP;AACH,KAVD,EAWCqB,KAXD,CAWQC,GAAD,IAAO;AACV,YAAMC,KAAK,GAAGD,GAAG,CAACE,QAAJ,IAAgBF,GAAG,CAACE,QAAJ,CAAaR,IAA7B,IAAqCM,GAAG,CAACE,QAAJ,CAAaR,IAAb,CAAkBS,OAAvD,IAAmE,WAAUH,GAAG,CAACE,QAAJ,CAAaR,IAAb,CAAkBS,OAAlB,CAA0BC,QAA1B,GAAqCC,WAArC,EAAmD,EAA9I;AACA3B,MAAAA,KAAK,CAACuB,KAAN,GAAcA,KAAd;AACAnB,MAAAA,OAAO,CAACJ,KAAD,CAAP;AACH,KAfD;AAgBH,GAzBM,CAAP;AA2BH;AAED,OAAO,eAAeiC,sBAAf,CAAsCjC,KAAtC,EAA6CC,IAA7C,EAAmD;AACtD,SAAO,IAAIE,OAAJ,CAAY,MAAOC,OAAP,IAAmB;AAElC,UAAMI,OAAO,GAAGf,SAAS,GAAG,gBAA5B;AAEA,UAAMa,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AAAC,yBAAiB,YAAYT,cAAc;AAA5C;AADE,KAAf;AAIAP,IAAAA,KAAK,CAACwC,GAAN,CAAUvB,OAAV,EAAmBF,MAAnB,EAA2BO,IAA3B,CAAiCC,GAAD,IAAO;AACnCoB,MAAAA,OAAO,CAACC,GAAR,CAAYrB,GAAG,CAACE,IAAhB;AACA,UAAIC,KAAK,GAAGzB,YAAY,CAAC4C,MAAb,CAAoBpC,KAAK,CAACe,eAA1B,EAA0C,sBAA1C,CAAZ;AACAE,MAAAA,KAAK,CAACoB,IAAN,GAAavB,GAAG,CAACE,IAAJ,IAAYF,GAAG,CAACE,IAAJ,CAASqB,IAAlC;AAEArC,MAAAA,KAAK,CAACsC,cAAN,GAAuBrB,KAAvB;;AAGA,UAAGhB,IAAH,EAAQ;AACJG,QAAAA,OAAO,CAACH,IAAI,CAACD,KAAD,CAAL,CAAP;AACH;;AACDI,MAAAA,OAAO,CAACJ,KAAD,CAAP;AACH,KAZD,EAYGqB,KAZH,CAYUC,GAAD,IAAO;AACZ,YAAMC,KAAK,GAAGD,GAAG,CAACE,QAAJ,IAAgBF,GAAG,CAACE,QAAJ,CAAaR,IAA7B,IAAqCM,GAAG,CAACE,QAAJ,CAAaR,IAAb,CAAkBS,OAAvD,IAAmE,WAAUH,GAAG,CAACE,QAAJ,CAAaR,IAAb,CAAkBS,OAAlB,CAA0BC,QAA1B,GAAqCC,WAArC,EAAmD,EAA9I;AACA3B,MAAAA,KAAK,CAACuB,KAAN,GAAcA,KAAd;AACAnB,MAAAA,OAAO,CAACJ,KAAD,CAAP;AACH,KAhBD;AAkBH,GA1BM,CAAP;AA4BH;AAGD,OAAO,eAAeuC,iBAAf,CAAkCvC,KAAlC,EAAwCC,IAAxC,EAA6C;AAChD,SAAO,IAAIE,OAAJ,CAAY,MAAOC,OAAP,IAAiB;AAChC,UAAMC,SAAS,GAAGR,YAAY,EAA9B;AAEA,UAAMS,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AAAC,yBAAiB,YAAYF;AAA9B;AADE,KAAf;AAGAd,IAAAA,KAAK,CAACqB,IAAN,CAAWnB,SAAS,GAAC,uBAArB,EAA6CO,KAA7C,EAAmDM,MAAnD,EACCO,IADD,CACOC,GAAD,IAAO;AACT,UAAGb,IAAH,EAAQ;AACJG,QAAAA,OAAO,CAACH,IAAI,CAACD,KAAD,CAAL,CAAP;AACH;;AACDI,MAAAA,OAAO,CAACU,GAAD,CAAP;AACH,KAND,EAOCO,KAPD,CAOQC,GAAD,IAAO;AACV,YAAMC,KAAK,GAAID,GAAG,CAACE,QAAJ,IAAgBF,GAAG,CAACE,QAAJ,CAAaR,IAA7B,IAAqCM,GAAG,CAACE,QAAJ,CAAaR,IAAb,CAAkBS,OAAvD,IAAmE,WAAUH,GAAG,CAACE,QAAJ,CAAaR,IAAb,CAAkBS,OAAlB,CAA0BC,QAA1B,GAAqCC,WAArC,EAAmD,EAAlI,IAAuIL,GAAG,CAACI,QAAJ,EAApJ;AACA1B,MAAAA,KAAK,CAACuB,KAAN,GAAcA,KAAd;AACAnB,MAAAA,OAAO,CAACJ,KAAD,CAAP;AACH,KAXD;AAaH,GAnBM,CAAP;AAoBH;AAED,OAAO,eAAewC,sBAAf,CAAuCxC,KAAvC,EAA6CC,IAA7C,EAAkD;AACrD,SAAO,IAAIE,OAAJ,CAAY,MAAMC,OAAN,IAAgB;AAC/B,UAAMC,SAAS,GAAGR,YAAY,EAA9B;AAEA,UAAMS,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AAAC,yBAAiB,YAAYF;AAA9B;AADE,KAAf;AAGAd,IAAAA,KAAK,CAACqB,IAAN,CAAWnB,SAAS,GAAC,sBAArB,EAA4CO,KAA5C,EAAkDM,MAAlD,EACCO,IADD,CACOC,GAAD,IAAO;AACT,UAAGb,IAAH,EAAQ;AACJG,QAAAA,OAAO,CAACH,IAAI,CAACD,KAAD,CAAL,CAAP;AACH;;AACDI,MAAAA,OAAO,CAACU,GAAD,CAAP;AACH,KAND,EAOCO,KAPD,CAOQC,GAAD,IAAO;AACV,YAAMC,KAAK,GAAID,GAAG,CAACE,QAAJ,IAAgBF,GAAG,CAACE,QAAJ,CAAaR,IAA7B,IAAqCM,GAAG,CAACE,QAAJ,CAAaR,IAAb,CAAkBS,OAAvD,IAAmE,WAAUH,GAAG,CAACE,QAAJ,CAAaR,IAAb,CAAkBS,OAAlB,CAA0BC,QAA1B,GAAqCC,WAArC,EAAmD,EAAlI,IAAuIL,GAAG,CAACI,QAAJ,EAApJ;AACA1B,MAAAA,KAAK,CAACuB,KAAN,GAAcA,KAAd;AACAnB,MAAAA,OAAO,CAACJ,KAAD,CAAP;AACH,KAXD;AAYH,GAlBM,CAAP;AAmBH","sourcesContent":["import axios from 'axios'\r\nimport jsonWebToken from 'jsonwebtoken'\r\nimport {serverUrl, serverUrlBorrower} from '../url'\r\nimport { setTokenClient, setTokenBorrower, getTokenAuth, getTokenClient } from './token'\r\n\r\nexport async function postLoginBankDashboardFunction (param, next, nextProfile) {\r\n    return new Promise(async (resolve)=>{\r\n        const tokenAuth = getTokenAuth();\r\n\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + tokenAuth}\r\n        };\r\n\r\n        let newLink = serverUrl+`client/lender_login`;  \r\n        const logindata ={key: param.key,password: param.password};\r\n          \r\n        axios.post(newLink, logindata, config)\r\n        .then((res)=>{\r\n            param.dataTokenLender = res.data.token;\r\n            delete param.password;\r\n\r\n            setTokenClient(res.data.token, new Date().getTime() + (res.data.expires_in*1000))\r\n\r\n            if(next){\r\n                resolve(next(param, nextProfile))\r\n            }\r\n            resolve(param)\r\n        })\r\n        .catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n    \r\n}\r\n\r\nexport async function getTokenBorrowerFunction (param, next) {\r\n    return new Promise(async (resolve)=>{\r\n        let newLink = serverUrlBorrower +`clientauth`;  \r\n        const logindata = {\r\n            auth: {\r\n                username : 'androkey',\r\n                password : 'androsecret'\r\n            }\r\n        };\r\n          \r\n        axios.get(newLink, logindata)\r\n        .then((res)=>{          \r\n            param.dataTokenBorrower = res.data.token;\r\n\r\n            setTokenBorrower(res.data.token);\r\n\r\n            if(next){\r\n                resolve(next(param))\r\n            }\r\n            resolve(param)\r\n        })\r\n        .catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n    \r\n}\r\n\r\nexport async function getUserProfileFunction(param, next) {\r\n    return new Promise(async (resolve) => {    \r\n       \r\n        const newLink = serverUrl + 'lender/profile'\r\n\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + getTokenClient()}\r\n        };\r\n\r\n        axios.get(newLink, config).then((res)=>{          \r\n            console.log(res.data)\r\n            var token = jsonWebToken.verify(param.dataTokenLender,'sXQ8jUMpueOvN5P3cdCR');\r\n            token.name = res.data && res.data.name;\r\n\r\n            param.dataPermission = token;\r\n\r\n\r\n            if(next){\r\n                resolve(next(param))\r\n            }\r\n            resolve(param)\r\n        }).catch((err)=>{\r\n            const error = err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n        \r\n    });\r\n    \r\n}\r\n\r\n\r\nexport async function sendEmailFunction (param,next){\r\n    return new Promise(async (resolve)=>{\r\n        const tokenAuth = getTokenAuth();\r\n\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + tokenAuth}\r\n        };\r\n        axios.post(serverUrl+'client/forgotpassword',param,config)\r\n        .then((res)=>{\r\n            if(next){\r\n                resolve(next(param))\r\n            }\r\n            resolve(res)\r\n        })\r\n        .catch((err)=>{\r\n            const error =( err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`)|| err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n\r\n    })\r\n}\r\n\r\nexport async function changePasswordFunction (param,next){\r\n    return new Promise(async(resolve)=>{\r\n        const tokenAuth = getTokenAuth();\r\n\r\n        const config = {\r\n            headers: {'Authorization': \"Bearer \" + tokenAuth}\r\n        };\r\n        axios.post(serverUrl+'client/resetpassword',param,config)\r\n        .then((res)=>{\r\n            if(next){\r\n                resolve(next(param))\r\n            }\r\n            resolve(res)\r\n        })\r\n        .catch((err)=>{\r\n            const error =( err.response && err.response.data && err.response.data.message && `Error : ${err.response.data.message.toString().toUpperCase()}`)|| err.toString()\r\n            param.error = error;\r\n            resolve(param);\r\n        })\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}