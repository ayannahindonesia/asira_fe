{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\asira_fe\\\\src\\\\components\\\\subComponent\\\\SubTable.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport SearchBar from './SearchBar';\nimport { handleFormatDate } from '../global/globalFunction';\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n} // const rows = [\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\n//   createData('Donut', 452, 25.0, 51, 4.9),\n//   createData('Eclair', 262, 16.0, 24, 6.0),\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\n//   createData('Honeycomb', 408, 3.2, 87, 6.5),\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n//   createData('Jelly Bean', 375, 0.0, 94, 0.0),\n//   createData('KitKat', 518, 26.0, 65, 7.0),\n//   createData('Lollipop', 392, 0.2, 98, 0.0),\n//   createData('Marshmallow', 318, 0, 81, 2.0),\n//   createData('Nougat', 360, 19.0, 9, 37.0),\n//   createData('Oreo', 437, 18.0, 63, 4.0),\n// ];\n\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nfunction EnhancedTableHead(props) {\n  const classes = props.classes,\n        checkBoxAction = props.checkBoxAction,\n        order = props.order,\n        orderBy = props.orderBy,\n        onRequestSort = props.onRequestSort,\n        dataHead = props.dataHead;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, checkBoxAction && React.createElement(TableCell, {\n    className: classes.tableHead,\n    padding: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), dataHead.map(headCell => React.createElement(TableCell, {\n    key: headCell.id,\n    align: 'left',\n    padding: 'default',\n    sortDirection: orderBy === headCell.id ? order : false,\n    className: classes.tableHead,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(TableSortLabel, {\n    active: orderBy === headCell.id,\n    direction: order,\n    onClick: createSortHandler(headCell.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, headCell.label, orderBy === headCell.id ? React.createElement(\"span\", {\n    className: classes.visuallyHidden,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, order === 'desc' ? 'sorted descending' : 'sorted ascending') : null)))));\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  title: {\n    flex: '1 1 100%'\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const numSelected = props.numSelected,\n        search = props.search,\n        changeSearch = props.changeSearch;\n  return React.createElement(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, numSelected > 0 ? React.createElement(Typography, {\n    className: classes.title,\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, numSelected, \" selected\") : React.createElement(Typography, {\n    style: {\n      textAlign: 'right'\n    },\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(SearchBar, {\n    id: \"search\",\n    value: search,\n    placeholder: \"Search ID Nasabah, Nama Nasabah...\",\n    onChange: changeSearch,\n    style: {\n      textAlign: 'right'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  })), numSelected > 0 ? React.createElement(Tooltip, {\n    title: \"Delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }))) : null);\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  tableHead: {\n    backgroundColor: '#2076B8',\n    color: 'white',\n    '&:hover': {\n      opacity: \"100%\"\n    }\n  },\n  visuallyHidden: {\n    color: 'white',\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}));\nexport default function EnhancedTable(propsTable) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(propsTable.data),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        rows = _React$useState2[0],\n        setRows = _React$useState2[1];\n\n  const _React$useState3 = React.useState('asc'),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        order = _React$useState4[0],\n        setOrder = _React$useState4[1];\n\n  const _React$useState5 = React.useState('updated_time'),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        orderBy = _React$useState6[0],\n        setOrderBy = _React$useState6[1];\n\n  const _React$useState7 = React.useState([]),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        selected = _React$useState8[0],\n        setSelected = _React$useState8[1];\n\n  const _React$useState9 = React.useState(propsTable.page - 1),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        page = _React$useState10[0],\n        setPage = _React$useState10[1];\n\n  const _React$useState11 = React.useState(false),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        dense = _React$useState12[0],\n        setDense = _React$useState12[1];\n\n  const _React$useState13 = React.useState(propsTable.rowsPerPage),\n        _React$useState14 = _slicedToArray(_React$useState13, 1),\n        rowsPerPage = _React$useState14[0];\n\n  useEffect(() => {\n    function handlechangeRows(data) {\n      setRows(data);\n    }\n\n    handlechangeRows(propsTable.data);\n    return function cleanup() {};\n  });\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.data.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    propsTable.onChangePage(newPage + 1);\n    setPage(newPage);\n  }; // const handleChangeRowsPerPage = event => {\n  //   setRowsPerPage(parseInt(event.target.value, 10));\n  //   setPage(0);\n  // };\n\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, React.createElement(EnhancedTableToolbar, {\n    numSelected: selected.length,\n    search: propsTable.search,\n    changeSearch: propsTable.onChangeSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }), React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: dense ? 'small' : 'medium',\n    \"aria-label\": \"enhanced table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, React.createElement(EnhancedTableHead, {\n    classes: classes,\n    numSelected: selected.length,\n    dataHead: propsTable.columnData,\n    checkBoxAction: propsTable.checkBoxAction,\n    order: order,\n    orderBy: orderBy,\n    onSelectAllClick: handleSelectAllClick,\n    onRequestSort: handleRequestSort,\n    rowCount: rows.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, stableSort(rows, getSorting(order, orderBy)).slice(0, rowsPerPage).map((row, index) => {\n    const isItemSelected = isSelected(row.id);\n    const labelId = `enhanced-table-checkbox-${index}`;\n    return React.createElement(TableRow, {\n      hover: true,\n      onClick: event => handleClick(event, row.id),\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: row.id,\n      selected: isItemSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, propsTable.checkBoxAction && React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: isItemSelected,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    })), propsTable.columnData && propsTable.columnData.map(dataPerRow => {\n      return React.createElement(TableCell, {\n        align: \"left\",\n        key: `${index}-${dataPerRow.id}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, dataPerRow.type && dataPerRow.type === 'datetime' ? handleFormatDate(row[dataPerRow.id]) : row[dataPerRow.id]);\n    }));\n  }))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [rowsPerPage],\n    component: \"div\",\n    count: propsTable.totalDataLength,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    labelDisplayedRows: () => `${page * rowsPerPage + 1}-${page * rowsPerPage + rowsPerPage > propsTable.totalDataLength ? propsTable.totalDataLength : page * rowsPerPage + rowsPerPage} of ${propsTable.totalDataLength} items`,\n    backIconButtonProps: {\n      'aria-label': 'Previous Page',\n      disabled: page * rowsPerPage + 1 === 1 ? true : false\n    },\n    nextIconButtonProps: {\n      'aria-label': 'Next Page',\n      disabled: page * rowsPerPage + rowsPerPage >= propsTable.totalDataLength ? true : false\n    },\n    onChangePage: handleChangePage // onChangeRowsPerPage={handleChangeRowsPerPage}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["C:/Users/pc/Desktop/asira_fe/src/components/subComponent/SubTable.js"],"names":["React","useEffect","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","FormControlLabel","Switch","DeleteIcon","FilterListIcon","SearchBar","handleFormatDate","createData","name","calories","fat","carbs","protein","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","EnhancedTableHead","props","classes","checkBoxAction","onRequestSort","dataHead","createSortHandler","property","event","tableHead","headCell","id","label","visuallyHidden","propTypes","object","isRequired","numSelected","number","func","onSelectAllClick","oneOf","string","rowCount","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","title","flex","EnhancedTableToolbar","search","changeSearch","textAlign","useStyles","width","paper","marginBottom","table","minWidth","opacity","border","clip","height","margin","overflow","padding","position","top","EnhancedTable","propsTable","useState","data","rows","setRows","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","handlechangeRows","cleanup","handleRequestSort","isDesc","handleSelectAllClick","target","checked","newSelecteds","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","onChangePage","handleChangeDense","isSelected","onChangeSearch","columnData","row","isItemSelected","labelId","dataPerRow","totalDataLength","disabled"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport SearchBar from './SearchBar';\r\nimport { handleFormatDate } from '../global/globalFunction';\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\n// const rows = [\r\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\r\n//   createData('Donut', 452, 25.0, 51, 4.9),\r\n//   createData('Eclair', 262, 16.0, 24, 6.0),\r\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n//   createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n//   createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n//   createData('KitKat', 518, 26.0, 65, 7.0),\r\n//   createData('Lollipop', 392, 0.2, 98, 0.0),\r\n//   createData('Marshmallow', 318, 0, 81, 2.0),\r\n//   createData('Nougat', 360, 19.0, 9, 37.0),\r\n//   createData('Oreo', 437, 18.0, 63, 4.0),\r\n// ];\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  \r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, checkBoxAction, order, orderBy, onRequestSort, dataHead } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead >\r\n      <TableRow>\r\n        {\r\n          checkBoxAction &&\r\n          <TableCell className={classes.tableHead} padding=\"checkbox\">\r\n          </TableCell>\r\n        }\r\n        {dataHead.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={'left'}\r\n            padding={'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            className={classes.tableHead}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={order}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, search, changeSearch } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography style={{textAlign:'right'}} color=\"inherit\" variant=\"subtitle1\">\r\n          <SearchBar\r\n            id=\"search\"\r\n            value={search}\r\n            placeholder=\"Search ID Nasabah, Nama Nasabah...\"\r\n            onChange={changeSearch} \r\n            style={{textAlign:'right'}}\r\n          />\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : null}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  tableHead: {\r\n    backgroundColor:'#2076B8',\r\n    color:'white',\r\n    '&:hover': {\r\n      opacity: \"100%\",\r\n    },\r\n  },\r\n  visuallyHidden: {\r\n    color: 'white',\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(propsTable) {\r\n\r\n  const classes = useStyles();\r\n  const [rows, setRows] = React.useState(propsTable.data);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('updated_time');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState((propsTable.page-1));\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage,] = React.useState(propsTable.rowsPerPage);\r\n\r\n  useEffect(() => {\r\n    function handlechangeRows(data) {\r\n      setRows(data);\r\n    }\r\n    handlechangeRows(propsTable.data);\r\n    \r\n    return function cleanup() {\r\n    };\r\n  })\r\n\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    setOrder(isDesc ? 'asc' : 'desc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.data.map(n => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    propsTable.onChangePage(newPage+1);\r\n    \r\n    setPage(newPage);\r\n    \r\n  };\r\n\r\n  // const handleChangeRowsPerPage = event => {\r\n  //   setRowsPerPage(parseInt(event.target.value, 10));\r\n  //   setPage(0);\r\n  // };\r\n\r\n  const handleChangeDense = event => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = name => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} search={propsTable.search} changeSearch={propsTable.onChangeSearch} />\r\n\r\n        <Table\r\n          className={classes.table}\r\n          aria-labelledby=\"tableTitle\"\r\n          size={dense ? 'small' : 'medium'}\r\n          aria-label=\"enhanced table\"\r\n        >\r\n          <EnhancedTableHead\r\n            classes={classes}\r\n            numSelected={selected.length}\r\n            dataHead={propsTable.columnData}\r\n            checkBoxAction={propsTable.checkBoxAction}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onSelectAllClick={handleSelectAllClick}\r\n            onRequestSort={handleRequestSort}\r\n            rowCount={rows.length}\r\n          />\r\n          <TableBody>\r\n            { stableSort(rows, getSorting(order, orderBy))\r\n              .slice(0, rowsPerPage)\r\n              .map((row, index) => {\r\n                const isItemSelected = isSelected(row.id);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onClick={event => handleClick(event, row.id)}\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    selected={isItemSelected}\r\n                  >\r\n                    {\r\n                      propsTable.checkBoxAction &&\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                    }\r\n                    \r\n                    {\r\n                      propsTable.columnData && propsTable.columnData.map((dataPerRow) => {\r\n                        return (\r\n                          <TableCell align=\"left\" key={`${index}-${dataPerRow.id}`}>\r\n                            {\r\n                              dataPerRow.type && dataPerRow.type === 'datetime' ? handleFormatDate(row[dataPerRow.id]) : row[dataPerRow.id] \r\n                            }\r\n                          </TableCell>\r\n                        );\r\n                      })\r\n                    }\r\n                    {/* <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                      {row.name}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">{row.calories}</TableCell>\r\n                    <TableCell align=\"right\">{row.fat}</TableCell>\r\n                    <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                    <TableCell align=\"right\">{row.protein}</TableCell> */}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        <TablePagination\r\n          rowsPerPageOptions={[rowsPerPage]}\r\n          component=\"div\"\r\n          count={propsTable.totalDataLength}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          labelDisplayedRows={() => `${(page * rowsPerPage) + 1}-${(page * rowsPerPage) + rowsPerPage > propsTable.totalDataLength ? propsTable.totalDataLength : (page * rowsPerPage) + rowsPerPage } of ${propsTable.totalDataLength} items`}\r\n          backIconButtonProps={{\r\n            'aria-label': 'Previous Page',\r\n            disabled:((page * rowsPerPage) + 1 === 1 ) ? true : false,\r\n          }}\r\n          nextIconButtonProps={{\r\n            'aria-label': 'Next Page',\r\n            disabled:((page * rowsPerPage) + rowsPerPage >= propsTable.totalDataLength) ? true : false,\r\n          }}\r\n          onChangePage={handleChangePage}\r\n          // onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}